// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: proto/ddx/v1/document_types_enum.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// DocumentType - an enum of supported document types.
// There are many countries and many document types. To see the full list of
// supported document types in each country and/or region for our latest release please see
// the [documentation](https://github.com/idnorm/id-extraction/blob/master/docs/document_types_by_country_and_region.md).
type DocumentType int32

const (
	// Not available
	DocumentType_DOCUMENT_TYPE_NOT_AVAILABLE DocumentType = 0
	// ADDRESS_CARD
	DocumentType_DOCUMENT_TYPE_ADDRESS_CARD DocumentType = 1
	// AFGHAN_CITIZEN_CARD
	DocumentType_DOCUMENT_TYPE_AFGHAN_CITIZEN_CARD DocumentType = 2
	// ALIEN_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_ALIEN_IDENTIFICATION_DOCUMENT DocumentType = 3
	// ASYLUM_SEEKER_CARD
	DocumentType_DOCUMENT_TYPE_ASYLUM_SEEKER_CARD DocumentType = 4
	// BORDER_CROSSING_CARD
	DocumentType_DOCUMENT_TYPE_BORDER_CROSSING_CARD DocumentType = 5
	// CITIZENSHIP_CERTIFICATE
	DocumentType_DOCUMENT_TYPE_CITIZENSHIP_CERTIFICATE DocumentType = 6
	// CONSULAR_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_CONSULAR_IDENTIFICATION_DOCUMENT DocumentType = 7
	// CONSULAR_PASSPORT
	DocumentType_DOCUMENT_TYPE_CONSULAR_PASSPORT DocumentType = 8
	// CONSULAR_VOTER_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATION_DOCUMENT DocumentType = 9
	// DRIVERS_LICENSE
	DocumentType_DOCUMENT_TYPE_DRIVERS_LICENSE DocumentType = 10
	// DRIVERS_LICENSE_AND_SERVICES_CARD
	DocumentType_DOCUMENT_TYPE_DRIVERS_LICENSE_AND_SERVICES_CARD DocumentType = 11
	// DRIVER_CARD
	DocumentType_DOCUMENT_TYPE_DRIVER_CARD DocumentType = 12
	// DRIVER_PRIVILEGE_CARD
	DocumentType_DOCUMENT_TYPE_DRIVER_PRIVILEGE_CARD DocumentType = 13
	// DRIVER_QUALIFICATION_CARD
	DocumentType_DOCUMENT_TYPE_DRIVER_QUALIFICATION_CARD DocumentType = 14
	// EMPLOYMENT_PASS
	DocumentType_DOCUMENT_TYPE_EMPLOYMENT_PASS DocumentType = 15
	// EXIT_ENTRY_PERMIT
	DocumentType_DOCUMENT_TYPE_EXIT_ENTRY_PERMIT DocumentType = 16
	// E_ID
	DocumentType_DOCUMENT_TYPE_E_ID DocumentType = 17
	// FIN_CARD
	DocumentType_DOCUMENT_TYPE_FIN_CARD DocumentType = 18
	// GLOBAL_ENTRY_CARD
	DocumentType_DOCUMENT_TYPE_GLOBAL_ENTRY_CARD DocumentType = 19
	// GREEN_CARD
	DocumentType_DOCUMENT_TYPE_GREEN_CARD DocumentType = 20
	// HEALTH_INSURANCE_CARD
	DocumentType_DOCUMENT_TYPE_HEALTH_INSURANCE_CARD DocumentType = 21
	// IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_IDENTIFICATION_DOCUMENT DocumentType = 22
	// IMMIGRANT_VISA
	DocumentType_DOCUMENT_TYPE_IMMIGRANT_VISA DocumentType = 23
	// INDIVIDUAL_NUMBER_CARD
	DocumentType_DOCUMENT_TYPE_INDIVIDUAL_NUMBER_CARD DocumentType = 24
	// INTERNAL_PASSPORT
	DocumentType_DOCUMENT_TYPE_INTERNAL_PASSPORT DocumentType = 25
	// MAINLAND_TRAVEL_PERMIT_TAIWAN
	DocumentType_DOCUMENT_TYPE_MAINLAND_TRAVEL_PERMIT_TAIWAN DocumentType = 26
	// MILITARY_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_MILITARY_IDENTIFICATION_DOCUMENT DocumentType = 27
	// MINORS_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_MINORS_IDENTIFICATION_DOCUMENT DocumentType = 28
	// MINORS_PASSPORT
	DocumentType_DOCUMENT_TYPE_MINORS_PASSPORT DocumentType = 29
	// MINORS_SERVICES_CARD
	DocumentType_DOCUMENT_TYPE_MINORS_SERVICES_CARD DocumentType = 30
	// MULTI_PURPOSE_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_DOCUMENT DocumentType = 31
	// MY_KAD
	DocumentType_DOCUMENT_TYPE_MY_KAD DocumentType = 32
	// MY_KAS
	DocumentType_DOCUMENT_TYPE_MY_KAS DocumentType = 33
	// MY_KID
	DocumentType_DOCUMENT_TYPE_MY_KID DocumentType = 34
	// MY_POLIS
	DocumentType_DOCUMENT_TYPE_MY_POLIS DocumentType = 35
	// MY_PR
	DocumentType_DOCUMENT_TYPE_MY_PR DocumentType = 36
	// MY_TENTERA
	DocumentType_DOCUMENT_TYPE_MY_TENTERA DocumentType = 37
	// NBI_CLEARANCE_DOCUMENT
	DocumentType_DOCUMENT_TYPE_NBI_CLEARANCE_DOCUMENT DocumentType = 38
	// NEXT_GEN_ALIEN_PASSPORT
	DocumentType_DOCUMENT_TYPE_NEXT_GEN_ALIEN_PASSPORT DocumentType = 39
	// NEXT_GEN_PASSPORT
	DocumentType_DOCUMENT_TYPE_NEXT_GEN_PASSPORT DocumentType = 40
	// NEXT_GEN_REFUGEE_PASSPORT
	DocumentType_DOCUMENT_TYPE_NEXT_GEN_REFUGEE_PASSPORT DocumentType = 41
	// NEXUS_CARD
	DocumentType_DOCUMENT_TYPE_NEXUS_CARD DocumentType = 42
	// PASS
	DocumentType_DOCUMENT_TYPE_PASS DocumentType = 43
	// PASSPORT
	DocumentType_DOCUMENT_TYPE_PASSPORT DocumentType = 44
	// PASSPORT_CARD
	DocumentType_DOCUMENT_TYPE_PASSPORT_CARD DocumentType = 45
	// PERMANENT_ACCOUNT_NUMBER_CARD
	DocumentType_DOCUMENT_TYPE_PERMANENT_ACCOUNT_NUMBER_CARD DocumentType = 46
	// POSTAL_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_POSTAL_IDENTIFICATION_DOCUMENT DocumentType = 47
	// PROFESSIONAL_CARD
	DocumentType_DOCUMENT_TYPE_PROFESSIONAL_CARD DocumentType = 48
	// PROFESSIONAL_DRIVERS_LICENSE
	DocumentType_DOCUMENT_TYPE_PROFESSIONAL_DRIVERS_LICENSE DocumentType = 49
	// PROOF_OF_AGE_CARD
	DocumentType_DOCUMENT_TYPE_PROOF_OF_AGE_CARD DocumentType = 50
	// PROOF_OF_REGISTRATION
	DocumentType_DOCUMENT_TYPE_PROOF_OF_REGISTRATION DocumentType = 51
	// PROVISIONAL_DRIVERS_LICENSE
	DocumentType_DOCUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE DocumentType = 52
	// REFUGEE_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_REFUGEE_IDENTIFICATION_DOCUMENT DocumentType = 53
	// RESIDENCE_PERMIT
	DocumentType_DOCUMENT_TYPE_RESIDENCE_PERMIT DocumentType = 54
	// RESIDENT_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_RESIDENT_IDENTIFICATION_DOCUMENT DocumentType = 55
	// SERVICES_CARD
	DocumentType_DOCUMENT_TYPE_SERVICES_CARD DocumentType = 56
	// SIS_ID
	DocumentType_DOCUMENT_TYPE_SIS_ID DocumentType = 57
	// SOCIAL_SECURITY_CARD
	DocumentType_DOCUMENT_TYPE_SOCIAL_SECURITY_CARD DocumentType = 58
	// SPECIAL_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_DOCUMENT DocumentType = 59
	// S_PASS
	DocumentType_DOCUMENT_TYPE_S_PASS DocumentType = 60
	// TAX_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMENT DocumentType = 61
	// TEMPORARY_PROTECTION_PERMIT
	DocumentType_DOCUMENT_TYPE_TEMPORARY_PROTECTION_PERMIT DocumentType = 62
	// TEMPORARY_RESIDENCE_PERMIT
	DocumentType_DOCUMENT_TYPE_TEMPORARY_RESIDENCE_PERMIT DocumentType = 63
	// TRIBAL_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_TRIBAL_IDENTIFICATION_DOCUMENT DocumentType = 64
	// TWIC_CARD
	DocumentType_DOCUMENT_TYPE_TWIC_CARD DocumentType = 65
	// UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT DocumentType = 66
	// VETERAN_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DOCUMENT DocumentType = 67
	// VISA
	DocumentType_DOCUMENT_TYPE_VISA DocumentType = 68
	// VOTER_IDENTIFICATION_DOCUMENT
	DocumentType_DOCUMENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT DocumentType = 69
	// WEAPON_PERMIT
	DocumentType_DOCUMENT_TYPE_WEAPON_PERMIT DocumentType = 70
	// WORK_PERMIT
	DocumentType_DOCUMENT_TYPE_WORK_PERMIT DocumentType = 71
	// iKAD
	DocumentType_DOCUMENT_TYPE_IKAD DocumentType = 72
)

// Enum value maps for DocumentType.
var (
	DocumentType_name = map[int32]string{
		0:  "DOCUMENT_TYPE_NOT_AVAILABLE",
		1:  "DOCUMENT_TYPE_ADDRESS_CARD",
		2:  "DOCUMENT_TYPE_AFGHAN_CITIZEN_CARD",
		3:  "DOCUMENT_TYPE_ALIEN_IDENTIFICATION_DOCUMENT",
		4:  "DOCUMENT_TYPE_ASYLUM_SEEKER_CARD",
		5:  "DOCUMENT_TYPE_BORDER_CROSSING_CARD",
		6:  "DOCUMENT_TYPE_CITIZENSHIP_CERTIFICATE",
		7:  "DOCUMENT_TYPE_CONSULAR_IDENTIFICATION_DOCUMENT",
		8:  "DOCUMENT_TYPE_CONSULAR_PASSPORT",
		9:  "DOCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATION_DOCUMENT",
		10: "DOCUMENT_TYPE_DRIVERS_LICENSE",
		11: "DOCUMENT_TYPE_DRIVERS_LICENSE_AND_SERVICES_CARD",
		12: "DOCUMENT_TYPE_DRIVER_CARD",
		13: "DOCUMENT_TYPE_DRIVER_PRIVILEGE_CARD",
		14: "DOCUMENT_TYPE_DRIVER_QUALIFICATION_CARD",
		15: "DOCUMENT_TYPE_EMPLOYMENT_PASS",
		16: "DOCUMENT_TYPE_EXIT_ENTRY_PERMIT",
		17: "DOCUMENT_TYPE_E_ID",
		18: "DOCUMENT_TYPE_FIN_CARD",
		19: "DOCUMENT_TYPE_GLOBAL_ENTRY_CARD",
		20: "DOCUMENT_TYPE_GREEN_CARD",
		21: "DOCUMENT_TYPE_HEALTH_INSURANCE_CARD",
		22: "DOCUMENT_TYPE_IDENTIFICATION_DOCUMENT",
		23: "DOCUMENT_TYPE_IMMIGRANT_VISA",
		24: "DOCUMENT_TYPE_INDIVIDUAL_NUMBER_CARD",
		25: "DOCUMENT_TYPE_INTERNAL_PASSPORT",
		26: "DOCUMENT_TYPE_MAINLAND_TRAVEL_PERMIT_TAIWAN",
		27: "DOCUMENT_TYPE_MILITARY_IDENTIFICATION_DOCUMENT",
		28: "DOCUMENT_TYPE_MINORS_IDENTIFICATION_DOCUMENT",
		29: "DOCUMENT_TYPE_MINORS_PASSPORT",
		30: "DOCUMENT_TYPE_MINORS_SERVICES_CARD",
		31: "DOCUMENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_DOCUMENT",
		32: "DOCUMENT_TYPE_MY_KAD",
		33: "DOCUMENT_TYPE_MY_KAS",
		34: "DOCUMENT_TYPE_MY_KID",
		35: "DOCUMENT_TYPE_MY_POLIS",
		36: "DOCUMENT_TYPE_MY_PR",
		37: "DOCUMENT_TYPE_MY_TENTERA",
		38: "DOCUMENT_TYPE_NBI_CLEARANCE_DOCUMENT",
		39: "DOCUMENT_TYPE_NEXT_GEN_ALIEN_PASSPORT",
		40: "DOCUMENT_TYPE_NEXT_GEN_PASSPORT",
		41: "DOCUMENT_TYPE_NEXT_GEN_REFUGEE_PASSPORT",
		42: "DOCUMENT_TYPE_NEXUS_CARD",
		43: "DOCUMENT_TYPE_PASS",
		44: "DOCUMENT_TYPE_PASSPORT",
		45: "DOCUMENT_TYPE_PASSPORT_CARD",
		46: "DOCUMENT_TYPE_PERMANENT_ACCOUNT_NUMBER_CARD",
		47: "DOCUMENT_TYPE_POSTAL_IDENTIFICATION_DOCUMENT",
		48: "DOCUMENT_TYPE_PROFESSIONAL_CARD",
		49: "DOCUMENT_TYPE_PROFESSIONAL_DRIVERS_LICENSE",
		50: "DOCUMENT_TYPE_PROOF_OF_AGE_CARD",
		51: "DOCUMENT_TYPE_PROOF_OF_REGISTRATION",
		52: "DOCUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE",
		53: "DOCUMENT_TYPE_REFUGEE_IDENTIFICATION_DOCUMENT",
		54: "DOCUMENT_TYPE_RESIDENCE_PERMIT",
		55: "DOCUMENT_TYPE_RESIDENT_IDENTIFICATION_DOCUMENT",
		56: "DOCUMENT_TYPE_SERVICES_CARD",
		57: "DOCUMENT_TYPE_SIS_ID",
		58: "DOCUMENT_TYPE_SOCIAL_SECURITY_CARD",
		59: "DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_DOCUMENT",
		60: "DOCUMENT_TYPE_S_PASS",
		61: "DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMENT",
		62: "DOCUMENT_TYPE_TEMPORARY_PROTECTION_PERMIT",
		63: "DOCUMENT_TYPE_TEMPORARY_RESIDENCE_PERMIT",
		64: "DOCUMENT_TYPE_TRIBAL_IDENTIFICATION_DOCUMENT",
		65: "DOCUMENT_TYPE_TWIC_CARD",
		66: "DOCUMENT_TYPE_UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT",
		67: "DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DOCUMENT",
		68: "DOCUMENT_TYPE_VISA",
		69: "DOCUMENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT",
		70: "DOCUMENT_TYPE_WEAPON_PERMIT",
		71: "DOCUMENT_TYPE_WORK_PERMIT",
		72: "DOCUMENT_TYPE_IKAD",
	}
	DocumentType_value = map[string]int32{
		"DOCUMENT_TYPE_NOT_AVAILABLE":                              0,
		"DOCUMENT_TYPE_ADDRESS_CARD":                               1,
		"DOCUMENT_TYPE_AFGHAN_CITIZEN_CARD":                        2,
		"DOCUMENT_TYPE_ALIEN_IDENTIFICATION_DOCUMENT":              3,
		"DOCUMENT_TYPE_ASYLUM_SEEKER_CARD":                         4,
		"DOCUMENT_TYPE_BORDER_CROSSING_CARD":                       5,
		"DOCUMENT_TYPE_CITIZENSHIP_CERTIFICATE":                    6,
		"DOCUMENT_TYPE_CONSULAR_IDENTIFICATION_DOCUMENT":           7,
		"DOCUMENT_TYPE_CONSULAR_PASSPORT":                          8,
		"DOCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATION_DOCUMENT":     9,
		"DOCUMENT_TYPE_DRIVERS_LICENSE":                            10,
		"DOCUMENT_TYPE_DRIVERS_LICENSE_AND_SERVICES_CARD":          11,
		"DOCUMENT_TYPE_DRIVER_CARD":                                12,
		"DOCUMENT_TYPE_DRIVER_PRIVILEGE_CARD":                      13,
		"DOCUMENT_TYPE_DRIVER_QUALIFICATION_CARD":                  14,
		"DOCUMENT_TYPE_EMPLOYMENT_PASS":                            15,
		"DOCUMENT_TYPE_EXIT_ENTRY_PERMIT":                          16,
		"DOCUMENT_TYPE_E_ID":                                       17,
		"DOCUMENT_TYPE_FIN_CARD":                                   18,
		"DOCUMENT_TYPE_GLOBAL_ENTRY_CARD":                          19,
		"DOCUMENT_TYPE_GREEN_CARD":                                 20,
		"DOCUMENT_TYPE_HEALTH_INSURANCE_CARD":                      21,
		"DOCUMENT_TYPE_IDENTIFICATION_DOCUMENT":                    22,
		"DOCUMENT_TYPE_IMMIGRANT_VISA":                             23,
		"DOCUMENT_TYPE_INDIVIDUAL_NUMBER_CARD":                     24,
		"DOCUMENT_TYPE_INTERNAL_PASSPORT":                          25,
		"DOCUMENT_TYPE_MAINLAND_TRAVEL_PERMIT_TAIWAN":              26,
		"DOCUMENT_TYPE_MILITARY_IDENTIFICATION_DOCUMENT":           27,
		"DOCUMENT_TYPE_MINORS_IDENTIFICATION_DOCUMENT":             28,
		"DOCUMENT_TYPE_MINORS_PASSPORT":                            29,
		"DOCUMENT_TYPE_MINORS_SERVICES_CARD":                       30,
		"DOCUMENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_DOCUMENT":      31,
		"DOCUMENT_TYPE_MY_KAD":                                     32,
		"DOCUMENT_TYPE_MY_KAS":                                     33,
		"DOCUMENT_TYPE_MY_KID":                                     34,
		"DOCUMENT_TYPE_MY_POLIS":                                   35,
		"DOCUMENT_TYPE_MY_PR":                                      36,
		"DOCUMENT_TYPE_MY_TENTERA":                                 37,
		"DOCUMENT_TYPE_NBI_CLEARANCE_DOCUMENT":                     38,
		"DOCUMENT_TYPE_NEXT_GEN_ALIEN_PASSPORT":                    39,
		"DOCUMENT_TYPE_NEXT_GEN_PASSPORT":                          40,
		"DOCUMENT_TYPE_NEXT_GEN_REFUGEE_PASSPORT":                  41,
		"DOCUMENT_TYPE_NEXUS_CARD":                                 42,
		"DOCUMENT_TYPE_PASS":                                       43,
		"DOCUMENT_TYPE_PASSPORT":                                   44,
		"DOCUMENT_TYPE_PASSPORT_CARD":                              45,
		"DOCUMENT_TYPE_PERMANENT_ACCOUNT_NUMBER_CARD":              46,
		"DOCUMENT_TYPE_POSTAL_IDENTIFICATION_DOCUMENT":             47,
		"DOCUMENT_TYPE_PROFESSIONAL_CARD":                          48,
		"DOCUMENT_TYPE_PROFESSIONAL_DRIVERS_LICENSE":               49,
		"DOCUMENT_TYPE_PROOF_OF_AGE_CARD":                          50,
		"DOCUMENT_TYPE_PROOF_OF_REGISTRATION":                      51,
		"DOCUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE":                52,
		"DOCUMENT_TYPE_REFUGEE_IDENTIFICATION_DOCUMENT":            53,
		"DOCUMENT_TYPE_RESIDENCE_PERMIT":                           54,
		"DOCUMENT_TYPE_RESIDENT_IDENTIFICATION_DOCUMENT":           55,
		"DOCUMENT_TYPE_SERVICES_CARD":                              56,
		"DOCUMENT_TYPE_SIS_ID":                                     57,
		"DOCUMENT_TYPE_SOCIAL_SECURITY_CARD":                       58,
		"DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_DOCUMENT":            59,
		"DOCUMENT_TYPE_S_PASS":                                     60,
		"DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMENT":                61,
		"DOCUMENT_TYPE_TEMPORARY_PROTECTION_PERMIT":                62,
		"DOCUMENT_TYPE_TEMPORARY_RESIDENCE_PERMIT":                 63,
		"DOCUMENT_TYPE_TRIBAL_IDENTIFICATION_DOCUMENT":             64,
		"DOCUMENT_TYPE_TWIC_CARD":                                  65,
		"DOCUMENT_TYPE_UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT": 66,
		"DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DOCUMENT":            67,
		"DOCUMENT_TYPE_VISA":                                       68,
		"DOCUMENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT":              69,
		"DOCUMENT_TYPE_WEAPON_PERMIT":                              70,
		"DOCUMENT_TYPE_WORK_PERMIT":                                71,
		"DOCUMENT_TYPE_IKAD":                                       72,
	}
)

func (x DocumentType) Enum() *DocumentType {
	p := new(DocumentType)
	*p = x
	return p
}

func (x DocumentType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (DocumentType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ddx_v1_document_types_enum_proto_enumTypes[0].Descriptor()
}

func (DocumentType) Type() protoreflect.EnumType {
	return &file_proto_ddx_v1_document_types_enum_proto_enumTypes[0]
}

func (x DocumentType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use DocumentType.Descriptor instead.
func (DocumentType) EnumDescriptor() ([]byte, []int) {
	return file_proto_ddx_v1_document_types_enum_proto_rawDescGZIP(), []int{0}
}

var File_proto_ddx_v1_document_types_enum_proto protoreflect.FileDescriptor

var file_proto_ddx_v1_document_types_enum_proto_rawDesc = []byte{
	0x0a, 0x26, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x64, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x73, 0x5f, 0x65, 0x6e,
	0x75, 0x6d, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e,
	0x64, 0x64, 0x78, 0x2e, 0x76, 0x31, 0x2a, 0xb7, 0x16, 0x0a, 0x0c, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x1e, 0x0a, 0x1a, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x44, 0x44, 0x52, 0x45, 0x53,
	0x53, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x01, 0x12, 0x25, 0x0a, 0x21, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x46, 0x47, 0x48, 0x41, 0x4e,
	0x5f, 0x43, 0x49, 0x54, 0x49, 0x5a, 0x45, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x02, 0x12,
	0x2f, 0x0a, 0x2b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x41, 0x4c, 0x49, 0x45, 0x4e, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43,
	0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x03,
	0x12, 0x24, 0x0a, 0x20, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x41, 0x53, 0x59, 0x4c, 0x55, 0x4d, 0x5f, 0x53, 0x45, 0x45, 0x4b, 0x45, 0x52, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x04, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x42, 0x4f, 0x52, 0x44, 0x45, 0x52, 0x5f, 0x43,
	0x52, 0x4f, 0x53, 0x53, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x05, 0x12, 0x29,
	0x0a, 0x25, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x43, 0x49, 0x54, 0x49, 0x5a, 0x45, 0x4e, 0x53, 0x48, 0x49, 0x50, 0x5f, 0x43, 0x45, 0x52, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x10, 0x06, 0x12, 0x32, 0x0a, 0x2e, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x55,
	0x4c, 0x41, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x07, 0x12, 0x23, 0x0a,
	0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x43,
	0x4f, 0x4e, 0x53, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x08, 0x12, 0x38, 0x0a, 0x34, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x43, 0x4f, 0x4e, 0x53, 0x55, 0x4c, 0x41, 0x52, 0x5f, 0x56, 0x4f, 0x54,
	0x45, 0x52, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x09, 0x12, 0x21, 0x0a, 0x1d,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52,
	0x49, 0x56, 0x45, 0x52, 0x53, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x0a, 0x12,
	0x33, 0x0a, 0x2f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x53, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45,
	0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x53, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x0b, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x0c, 0x12, 0x27, 0x0a, 0x23, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x5f, 0x50, 0x52, 0x49, 0x56,
	0x49, 0x4c, 0x45, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x0d, 0x12, 0x2b, 0x0a, 0x27,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x44, 0x52,
	0x49, 0x56, 0x45, 0x52, 0x5f, 0x51, 0x55, 0x41, 0x4c, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49,
	0x4f, 0x4e, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x0e, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x4d, 0x50, 0x4c, 0x4f,
	0x59, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x10, 0x0f, 0x12, 0x23, 0x0a, 0x1f,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x45, 0x58,
	0x49, 0x54, 0x5f, 0x45, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10,
	0x10, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x45, 0x5f, 0x49, 0x44, 0x10, 0x11, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x46, 0x49, 0x4e, 0x5f, 0x43,
	0x41, 0x52, 0x44, 0x10, 0x12, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x4c, 0x4f, 0x42, 0x41, 0x4c, 0x5f, 0x45, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x13, 0x12, 0x1c, 0x0a, 0x18, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x47, 0x52, 0x45, 0x45,
	0x4e, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x14, 0x12, 0x27, 0x0a, 0x23, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x48, 0x45, 0x41, 0x4c, 0x54, 0x48,
	0x5f, 0x49, 0x4e, 0x53, 0x55, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10,
	0x15, 0x12, 0x29, 0x0a, 0x25, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x16, 0x12, 0x20, 0x0a, 0x1c,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4d,
	0x4d, 0x49, 0x47, 0x52, 0x41, 0x4e, 0x54, 0x5f, 0x56, 0x49, 0x53, 0x41, 0x10, 0x17, 0x12, 0x28,
	0x0a, 0x24, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x49, 0x4e, 0x44, 0x49, 0x56, 0x49, 0x44, 0x55, 0x41, 0x4c, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45,
	0x52, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x18, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4e, 0x54, 0x45, 0x52, 0x4e,
	0x41, 0x4c, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x19, 0x12, 0x2f, 0x0a,
	0x2b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d,
	0x41, 0x49, 0x4e, 0x4c, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x52, 0x41, 0x56, 0x45, 0x4c, 0x5f, 0x50,
	0x45, 0x52, 0x4d, 0x49, 0x54, 0x5f, 0x54, 0x41, 0x49, 0x57, 0x41, 0x4e, 0x10, 0x1a, 0x12, 0x32,
	0x0a, 0x2e, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4d, 0x49, 0x4c, 0x49, 0x54, 0x41, 0x52, 0x59, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x1b, 0x12, 0x30, 0x0a, 0x2c, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x53, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54,
	0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x10, 0x1c, 0x12, 0x21, 0x0a, 0x1d, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x53, 0x5f, 0x50, 0x41, 0x53,
	0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x1d, 0x12, 0x26, 0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x49, 0x4e, 0x4f, 0x52, 0x53, 0x5f,
	0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x53, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x1e, 0x12,
	0x37, 0x0a, 0x33, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x4d, 0x55, 0x4c, 0x54, 0x49, 0x5f, 0x50, 0x55, 0x52, 0x50, 0x4f, 0x53, 0x45, 0x5f, 0x49,
	0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x1f, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x5f, 0x4b, 0x41, 0x44,
	0x10, 0x20, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x5f, 0x4b, 0x41, 0x53, 0x10, 0x21, 0x12, 0x18, 0x0a, 0x14,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59,
	0x5f, 0x4b, 0x49, 0x44, 0x10, 0x22, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x5f, 0x50, 0x4f, 0x4c, 0x49, 0x53,
	0x10, 0x23, 0x12, 0x17, 0x0a, 0x13, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x5f, 0x50, 0x52, 0x10, 0x24, 0x12, 0x1c, 0x0a, 0x18, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4d, 0x59, 0x5f,
	0x54, 0x45, 0x4e, 0x54, 0x45, 0x52, 0x41, 0x10, 0x25, 0x12, 0x28, 0x0a, 0x24, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x42, 0x49, 0x5f, 0x43,
	0x4c, 0x45, 0x41, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x26, 0x12, 0x29, 0x0a, 0x25, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x41, 0x4c,
	0x49, 0x45, 0x4e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x27, 0x12, 0x23,
	0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x4e, 0x45, 0x58, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52,
	0x54, 0x10, 0x28, 0x12, 0x2b, 0x0a, 0x27, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x4e, 0x45, 0x58, 0x54, 0x5f, 0x47, 0x45, 0x4e, 0x5f, 0x52, 0x45,
	0x46, 0x55, 0x47, 0x45, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x10, 0x29,
	0x12, 0x1c, 0x0a, 0x18, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x4e, 0x45, 0x58, 0x55, 0x53, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x2a, 0x12, 0x16,
	0x0a, 0x12, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x50, 0x41, 0x53, 0x53, 0x10, 0x2b, 0x12, 0x1a, 0x0a, 0x16, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52, 0x54,
	0x10, 0x2c, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x50, 0x41, 0x53, 0x53, 0x50, 0x4f, 0x52, 0x54, 0x5f, 0x43, 0x41, 0x52,
	0x44, 0x10, 0x2d, 0x12, 0x2f, 0x0a, 0x2b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x45, 0x4e, 0x54, 0x5f, 0x41,
	0x43, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x5f, 0x4e, 0x55, 0x4d, 0x42, 0x45, 0x52, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x2e, 0x12, 0x30, 0x0a, 0x2c, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x4f, 0x53, 0x54, 0x41, 0x4c, 0x5f, 0x49, 0x44, 0x45,
	0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x10, 0x2f, 0x12, 0x23, 0x0a, 0x1f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x46, 0x45, 0x53, 0x53, 0x49,
	0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x30, 0x12, 0x2e, 0x0a, 0x2a, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x46, 0x45, 0x53, 0x53, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52,
	0x53, 0x5f, 0x4c, 0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x31, 0x12, 0x23, 0x0a, 0x1f, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f,
	0x4f, 0x46, 0x5f, 0x4f, 0x46, 0x5f, 0x41, 0x47, 0x45, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x32,
	0x12, 0x27, 0x0a, 0x23, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50,
	0x45, 0x5f, 0x50, 0x52, 0x4f, 0x4f, 0x46, 0x5f, 0x4f, 0x46, 0x5f, 0x52, 0x45, 0x47, 0x49, 0x53,
	0x54, 0x52, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x10, 0x33, 0x12, 0x2d, 0x0a, 0x29, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x50, 0x52, 0x4f, 0x56, 0x49,
	0x53, 0x49, 0x4f, 0x4e, 0x41, 0x4c, 0x5f, 0x44, 0x52, 0x49, 0x56, 0x45, 0x52, 0x53, 0x5f, 0x4c,
	0x49, 0x43, 0x45, 0x4e, 0x53, 0x45, 0x10, 0x34, 0x12, 0x31, 0x0a, 0x2d, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x46, 0x55, 0x47, 0x45,
	0x45, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e,
	0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x35, 0x12, 0x22, 0x0a, 0x1e, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x52, 0x45, 0x53,
	0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10, 0x36, 0x12,
	0x32, 0x0a, 0x2e, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x52, 0x45, 0x53, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49,
	0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e,
	0x54, 0x10, 0x37, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43, 0x45, 0x53, 0x5f, 0x43, 0x41,
	0x52, 0x44, 0x10, 0x38, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x49, 0x53, 0x5f, 0x49, 0x44, 0x10, 0x39, 0x12, 0x26,
	0x0a, 0x22, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x53, 0x4f, 0x43, 0x49, 0x41, 0x4c, 0x5f, 0x53, 0x45, 0x43, 0x55, 0x52, 0x49, 0x54, 0x59, 0x5f,
	0x43, 0x41, 0x52, 0x44, 0x10, 0x3a, 0x12, 0x31, 0x0a, 0x2d, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45,
	0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x50, 0x45, 0x43, 0x49, 0x41, 0x4c, 0x5f,
	0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44,
	0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x3b, 0x12, 0x18, 0x0a, 0x14, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x5f, 0x50, 0x41, 0x53,
	0x53, 0x10, 0x3c, 0x12, 0x2d, 0x0a, 0x29, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f,
	0x54, 0x59, 0x50, 0x45, 0x5f, 0x54, 0x41, 0x58, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46,
	0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54,
	0x10, 0x3d, 0x12, 0x2d, 0x0a, 0x29, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54,
	0x59, 0x50, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x50, 0x52,
	0x4f, 0x54, 0x45, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10,
	0x3e, 0x12, 0x2c, 0x0a, 0x28, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x52, 0x41, 0x52, 0x59, 0x5f, 0x52, 0x45, 0x53,
	0x49, 0x44, 0x45, 0x4e, 0x43, 0x45, 0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10, 0x3f, 0x12,
	0x30, 0x0a, 0x2c, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x54, 0x52, 0x49, 0x42, 0x41, 0x4c, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49,
	0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10,
	0x40, 0x12, 0x1b, 0x0a, 0x17, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59,
	0x50, 0x45, 0x5f, 0x54, 0x57, 0x49, 0x43, 0x5f, 0x43, 0x41, 0x52, 0x44, 0x10, 0x41, 0x12, 0x3c,
	0x0a, 0x38, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f,
	0x55, 0x4e, 0x49, 0x46, 0x4f, 0x52, 0x4d, 0x45, 0x44, 0x5f, 0x53, 0x45, 0x52, 0x56, 0x49, 0x43,
	0x45, 0x53, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x42, 0x12, 0x31, 0x0a, 0x2d,
	0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x45,
	0x54, 0x45, 0x52, 0x41, 0x4e, 0x5f, 0x49, 0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x43, 0x12,
	0x16, 0x0a, 0x12, 0x44, 0x4f, 0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45,
	0x5f, 0x56, 0x49, 0x53, 0x41, 0x10, 0x44, 0x12, 0x2f, 0x0a, 0x2b, 0x44, 0x4f, 0x43, 0x55, 0x4d,
	0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x56, 0x4f, 0x54, 0x45, 0x52, 0x5f, 0x49,
	0x44, 0x45, 0x4e, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x44, 0x4f,
	0x43, 0x55, 0x4d, 0x45, 0x4e, 0x54, 0x10, 0x45, 0x12, 0x1f, 0x0a, 0x1b, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x45, 0x41, 0x50, 0x4f, 0x4e,
	0x5f, 0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10, 0x46, 0x12, 0x1d, 0x0a, 0x19, 0x44, 0x4f, 0x43,
	0x55, 0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x57, 0x4f, 0x52, 0x4b, 0x5f,
	0x50, 0x45, 0x52, 0x4d, 0x49, 0x54, 0x10, 0x47, 0x12, 0x16, 0x0a, 0x12, 0x44, 0x4f, 0x43, 0x55,
	0x4d, 0x45, 0x4e, 0x54, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x49, 0x4b, 0x41, 0x44, 0x10, 0x48,
	0x42, 0x34, 0x5a, 0x32, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76,
	0x65, 0x72, 0x69, 0x64, 0x69, 0x6c, 0x2f, 0x69, 0x64, 0x2d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x2d, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f,
	0x64, 0x64, 0x78, 0x2f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ddx_v1_document_types_enum_proto_rawDescOnce sync.Once
	file_proto_ddx_v1_document_types_enum_proto_rawDescData = file_proto_ddx_v1_document_types_enum_proto_rawDesc
)

func file_proto_ddx_v1_document_types_enum_proto_rawDescGZIP() []byte {
	file_proto_ddx_v1_document_types_enum_proto_rawDescOnce.Do(func() {
		file_proto_ddx_v1_document_types_enum_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ddx_v1_document_types_enum_proto_rawDescData)
	})
	return file_proto_ddx_v1_document_types_enum_proto_rawDescData
}

var file_proto_ddx_v1_document_types_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_ddx_v1_document_types_enum_proto_goTypes = []any{
	(DocumentType)(0), // 0: proto.ddx.v1.DocumentType
}
var file_proto_ddx_v1_document_types_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_ddx_v1_document_types_enum_proto_init() }
func file_proto_ddx_v1_document_types_enum_proto_init() {
	if File_proto_ddx_v1_document_types_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ddx_v1_document_types_enum_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ddx_v1_document_types_enum_proto_goTypes,
		DependencyIndexes: file_proto_ddx_v1_document_types_enum_proto_depIdxs,
		EnumInfos:         file_proto_ddx_v1_document_types_enum_proto_enumTypes,
	}.Build()
	File_proto_ddx_v1_document_types_enum_proto = out.File
	file_proto_ddx_v1_document_types_enum_proto_rawDesc = nil
	file_proto_ddx_v1_document_types_enum_proto_goTypes = nil
	file_proto_ddx_v1_document_types_enum_proto_depIdxs = nil
}
