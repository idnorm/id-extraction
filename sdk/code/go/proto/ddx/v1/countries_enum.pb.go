// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        (unknown)
// source: proto/ddx/v1/countries_enum.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Country - enumeration of supported countries.
type Country int32

const (
	// Not available
	Country_COUNTRY_NOT_AVAILABLE Country = 0
	// AFGHANISTAN
	Country_COUNTRY_AFGHANISTAN Country = 1
	// ALBANIA
	Country_COUNTRY_ALBANIA Country = 2
	// ALGERIA
	Country_COUNTRY_ALGERIA Country = 3
	// ANTIGUA AND BARBUDA
	Country_COUNTRY_ANTIGUA_AND_BARBUDA Country = 4
	// ARGENTINA
	Country_COUNTRY_ARGENTINA Country = 5
	// ARMENIA
	Country_COUNTRY_ARMENIA Country = 6
	// AUSTRALIA
	Country_COUNTRY_AUSTRALIA Country = 7
	// AUSTRIA
	Country_COUNTRY_AUSTRIA Country = 8
	// AZERBAIJAN
	Country_COUNTRY_AZERBAIJAN Country = 9
	// BAHAMAS
	Country_COUNTRY_BAHAMAS Country = 10
	// BAHRAIN
	Country_COUNTRY_BAHRAIN Country = 11
	// BANGLADESH
	Country_COUNTRY_BANGLADESH Country = 12
	// BARBADOS
	Country_COUNTRY_BARBADOS Country = 13
	// BELARUS
	Country_COUNTRY_BELARUS Country = 14
	// BELGIUM
	Country_COUNTRY_BELGIUM Country = 15
	// BERMUDA
	Country_COUNTRY_BERMUDA Country = 16
	// BOLIVIA
	Country_COUNTRY_BOLIVIA Country = 17
	// BOSNIA AND HERZEGOVINA
	Country_COUNTRY_BOSNIA_AND_HERZEGOVINA Country = 18
	// BRAZIL
	Country_COUNTRY_BRAZIL Country = 19
	// BRUNEI
	Country_COUNTRY_BRUNEI Country = 20
	// BULGARIA
	Country_COUNTRY_BULGARIA Country = 21
	// CAMBODIA
	Country_COUNTRY_CAMBODIA Country = 22
	// CAMEROON
	Country_COUNTRY_CAMEROON Country = 23
	// CANADA
	Country_COUNTRY_CANADA Country = 24
	// CAYMAN ISLANDS
	Country_COUNTRY_CAYMAN_ISLANDS Country = 25
	// CHILE
	Country_COUNTRY_CHILE Country = 26
	// CHINA
	Country_COUNTRY_CHINA Country = 27
	// COLOMBIA
	Country_COUNTRY_COLOMBIA Country = 28
	// COSTA RICA
	Country_COUNTRY_COSTA_RICA Country = 29
	// CROATIA
	Country_COUNTRY_CROATIA Country = 30
	// CUBA
	Country_COUNTRY_CUBA Country = 31
	// CYPRUS
	Country_COUNTRY_CYPRUS Country = 32
	// CZECHIA
	Country_COUNTRY_CZECHIA Country = 33
	// DEMOCRATIC REPUBLIC OF THE CONGO
	Country_COUNTRY_DEMOCRATIC_REPUBLIC_OF_THE_CONGO Country = 34
	// DENMARK
	Country_COUNTRY_DENMARK Country = 35
	// DOMINICAN REPUBLIC
	Country_COUNTRY_DOMINICAN_REPUBLIC Country = 36
	// ECUADOR
	Country_COUNTRY_ECUADOR Country = 37
	// EGYPT
	Country_COUNTRY_EGYPT Country = 38
	// EL SALVADOR
	Country_COUNTRY_EL_SALVADOR Country = 39
	// ESTONIA
	Country_COUNTRY_ESTONIA Country = 40
	// EUROPEAN UNION
	Country_COUNTRY_EUROPEAN_UNION Country = 41
	// FINLAND
	Country_COUNTRY_FINLAND Country = 42
	// FRANCE
	Country_COUNTRY_FRANCE Country = 43
	// GEORGIA
	Country_COUNTRY_GEORGIA Country = 44
	// GERMANY
	Country_COUNTRY_GERMANY Country = 45
	// GHANA
	Country_COUNTRY_GHANA Country = 46
	// GREECE
	Country_COUNTRY_GREECE Country = 47
	// GUATEMALA
	Country_COUNTRY_GUATEMALA Country = 48
	// HAITI
	Country_COUNTRY_HAITI Country = 49
	// HONDURAS
	Country_COUNTRY_HONDURAS Country = 50
	// HONG KONG
	Country_COUNTRY_HONG_KONG Country = 51
	// HUNGARY
	Country_COUNTRY_HUNGARY Country = 52
	// ICELAND
	Country_COUNTRY_ICELAND Country = 53
	// INDIA
	Country_COUNTRY_INDIA Country = 54
	// INDONESIA
	Country_COUNTRY_INDONESIA Country = 55
	// IRAN
	Country_COUNTRY_IRAN Country = 56
	// IRAQ
	Country_COUNTRY_IRAQ Country = 57
	// IRELAND
	Country_COUNTRY_IRELAND Country = 58
	// ISRAEL
	Country_COUNTRY_ISRAEL Country = 59
	// ITALY
	Country_COUNTRY_ITALY Country = 60
	// IVORY COAST
	Country_COUNTRY_IVORY_COAST Country = 61
	// JAMAICA
	Country_COUNTRY_JAMAICA Country = 62
	// JAPAN
	Country_COUNTRY_JAPAN Country = 63
	// JORDAN
	Country_COUNTRY_JORDAN Country = 64
	// KAZAKHSTAN
	Country_COUNTRY_KAZAKHSTAN Country = 65
	// KENYA
	Country_COUNTRY_KENYA Country = 66
	// KOSOVO
	Country_COUNTRY_KOSOVO Country = 67
	// KUWAIT
	Country_COUNTRY_KUWAIT Country = 68
	// LATVIA
	Country_COUNTRY_LATVIA Country = 69
	// LIBYA
	Country_COUNTRY_LIBYA Country = 70
	// LIECHTENSTEIN
	Country_COUNTRY_LIECHTENSTEIN Country = 71
	// LITHUANIA
	Country_COUNTRY_LITHUANIA Country = 72
	// LUXEMBOURG
	Country_COUNTRY_LUXEMBOURG Country = 73
	// MALAYSIA
	Country_COUNTRY_MALAYSIA Country = 74
	// MALDIVES
	Country_COUNTRY_MALDIVES Country = 75
	// MALTA
	Country_COUNTRY_MALTA Country = 76
	// MAURITIUS
	Country_COUNTRY_MAURITIUS Country = 77
	// MEXICO
	Country_COUNTRY_MEXICO Country = 78
	// MOLDOVA
	Country_COUNTRY_MOLDOVA Country = 79
	// MONACO
	Country_COUNTRY_MONACO Country = 80
	// MONTENEGRO
	Country_COUNTRY_MONTENEGRO Country = 81
	// MOROCCO
	Country_COUNTRY_MOROCCO Country = 82
	// NAMIBIA
	Country_COUNTRY_NAMIBIA Country = 83
	// NEPAL
	Country_COUNTRY_NEPAL Country = 84
	// NETHERLANDS
	Country_COUNTRY_NETHERLANDS Country = 85
	// NEW ZEALAND
	Country_COUNTRY_NEW_ZEALAND Country = 86
	// NICARAGUA
	Country_COUNTRY_NICARAGUA Country = 87
	// NIGERIA
	Country_COUNTRY_NIGERIA Country = 88
	// NORTH MACEDONIA
	Country_COUNTRY_NORTH_MACEDONIA Country = 89
	// NORWAY
	Country_COUNTRY_NORWAY Country = 90
	// OMAN
	Country_COUNTRY_OMAN Country = 91
	// PAKISTAN
	Country_COUNTRY_PAKISTAN Country = 92
	// PALESTINE
	Country_COUNTRY_PALESTINE Country = 93
	// PANAMA
	Country_COUNTRY_PANAMA Country = 94
	// PARAGUAY
	Country_COUNTRY_PARAGUAY Country = 95
	// PERU
	Country_COUNTRY_PERU Country = 96
	// PHILIPPINES
	Country_COUNTRY_PHILIPPINES Country = 97
	// POLAND
	Country_COUNTRY_POLAND Country = 98
	// PORTUGAL
	Country_COUNTRY_PORTUGAL Country = 99
	// PUERTO RICO
	Country_COUNTRY_PUERTO_RICO Country = 100
	// QATAR
	Country_COUNTRY_QATAR Country = 101
	// ROMANIA
	Country_COUNTRY_ROMANIA Country = 102
	// RUSSIA
	Country_COUNTRY_RUSSIA Country = 103
	// SAINT KITTS AND NEVIS
	Country_COUNTRY_SAINT_KITTS_AND_NEVIS Country = 104
	// SAINT LUCIA
	Country_COUNTRY_SAINT_LUCIA Country = 105
	// SAUDI ARABIA
	Country_COUNTRY_SAUDI_ARABIA Country = 106
	// SCHENGEN AREA
	Country_COUNTRY_SCHENGEN_AREA Country = 107
	// SERBIA
	Country_COUNTRY_SERBIA Country = 108
	// SINGAPORE
	Country_COUNTRY_SINGAPORE Country = 109
	// SLOVAKIA
	Country_COUNTRY_SLOVAKIA Country = 110
	// SLOVENIA
	Country_COUNTRY_SLOVENIA Country = 111
	// SOUTH AFRICA
	Country_COUNTRY_SOUTH_AFRICA Country = 112
	// SOUTH KOREA
	Country_COUNTRY_SOUTH_KOREA Country = 113
	// SPAIN
	Country_COUNTRY_SPAIN Country = 114
	// SRI LANKA
	Country_COUNTRY_SRI_LANKA Country = 115
	// SUDAN
	Country_COUNTRY_SUDAN Country = 116
	// SWEDEN
	Country_COUNTRY_SWEDEN Country = 117
	// SWITZERLAND
	Country_COUNTRY_SWITZERLAND Country = 118
	// TAIWAN
	Country_COUNTRY_TAIWAN Country = 119
	// TANZANIA
	Country_COUNTRY_TANZANIA Country = 120
	// THAILAND
	Country_COUNTRY_THAILAND Country = 121
	// TRINIDAD AND TOBAGO
	Country_COUNTRY_TRINIDAD_AND_TOBAGO Country = 122
	// TUNISIA
	Country_COUNTRY_TUNISIA Country = 123
	// TURKEY
	Country_COUNTRY_TURKEY Country = 124
	// UAE
	Country_COUNTRY_UAE Country = 125
	// UK
	Country_COUNTRY_UK Country = 126
	// UKRAINE
	Country_COUNTRY_UKRAINE Country = 127
	// URUGUAY
	Country_COUNTRY_URUGUAY Country = 128
	// USA
	Country_COUNTRY_USA Country = 129
	// UZBEKISTAN
	Country_COUNTRY_UZBEKISTAN Country = 130
	// VENEZUELA
	Country_COUNTRY_VENEZUELA Country = 131
	// VIETNAM
	Country_COUNTRY_VIETNAM Country = 132
)

// Enum value maps for Country.
var (
	Country_name = map[int32]string{
		0:   "COUNTRY_NOT_AVAILABLE",
		1:   "COUNTRY_AFGHANISTAN",
		2:   "COUNTRY_ALBANIA",
		3:   "COUNTRY_ALGERIA",
		4:   "COUNTRY_ANTIGUA_AND_BARBUDA",
		5:   "COUNTRY_ARGENTINA",
		6:   "COUNTRY_ARMENIA",
		7:   "COUNTRY_AUSTRALIA",
		8:   "COUNTRY_AUSTRIA",
		9:   "COUNTRY_AZERBAIJAN",
		10:  "COUNTRY_BAHAMAS",
		11:  "COUNTRY_BAHRAIN",
		12:  "COUNTRY_BANGLADESH",
		13:  "COUNTRY_BARBADOS",
		14:  "COUNTRY_BELARUS",
		15:  "COUNTRY_BELGIUM",
		16:  "COUNTRY_BERMUDA",
		17:  "COUNTRY_BOLIVIA",
		18:  "COUNTRY_BOSNIA_AND_HERZEGOVINA",
		19:  "COUNTRY_BRAZIL",
		20:  "COUNTRY_BRUNEI",
		21:  "COUNTRY_BULGARIA",
		22:  "COUNTRY_CAMBODIA",
		23:  "COUNTRY_CAMEROON",
		24:  "COUNTRY_CANADA",
		25:  "COUNTRY_CAYMAN_ISLANDS",
		26:  "COUNTRY_CHILE",
		27:  "COUNTRY_CHINA",
		28:  "COUNTRY_COLOMBIA",
		29:  "COUNTRY_COSTA_RICA",
		30:  "COUNTRY_CROATIA",
		31:  "COUNTRY_CUBA",
		32:  "COUNTRY_CYPRUS",
		33:  "COUNTRY_CZECHIA",
		34:  "COUNTRY_DEMOCRATIC_REPUBLIC_OF_THE_CONGO",
		35:  "COUNTRY_DENMARK",
		36:  "COUNTRY_DOMINICAN_REPUBLIC",
		37:  "COUNTRY_ECUADOR",
		38:  "COUNTRY_EGYPT",
		39:  "COUNTRY_EL_SALVADOR",
		40:  "COUNTRY_ESTONIA",
		41:  "COUNTRY_EUROPEAN_UNION",
		42:  "COUNTRY_FINLAND",
		43:  "COUNTRY_FRANCE",
		44:  "COUNTRY_GEORGIA",
		45:  "COUNTRY_GERMANY",
		46:  "COUNTRY_GHANA",
		47:  "COUNTRY_GREECE",
		48:  "COUNTRY_GUATEMALA",
		49:  "COUNTRY_HAITI",
		50:  "COUNTRY_HONDURAS",
		51:  "COUNTRY_HONG_KONG",
		52:  "COUNTRY_HUNGARY",
		53:  "COUNTRY_ICELAND",
		54:  "COUNTRY_INDIA",
		55:  "COUNTRY_INDONESIA",
		56:  "COUNTRY_IRAN",
		57:  "COUNTRY_IRAQ",
		58:  "COUNTRY_IRELAND",
		59:  "COUNTRY_ISRAEL",
		60:  "COUNTRY_ITALY",
		61:  "COUNTRY_IVORY_COAST",
		62:  "COUNTRY_JAMAICA",
		63:  "COUNTRY_JAPAN",
		64:  "COUNTRY_JORDAN",
		65:  "COUNTRY_KAZAKHSTAN",
		66:  "COUNTRY_KENYA",
		67:  "COUNTRY_KOSOVO",
		68:  "COUNTRY_KUWAIT",
		69:  "COUNTRY_LATVIA",
		70:  "COUNTRY_LIBYA",
		71:  "COUNTRY_LIECHTENSTEIN",
		72:  "COUNTRY_LITHUANIA",
		73:  "COUNTRY_LUXEMBOURG",
		74:  "COUNTRY_MALAYSIA",
		75:  "COUNTRY_MALDIVES",
		76:  "COUNTRY_MALTA",
		77:  "COUNTRY_MAURITIUS",
		78:  "COUNTRY_MEXICO",
		79:  "COUNTRY_MOLDOVA",
		80:  "COUNTRY_MONACO",
		81:  "COUNTRY_MONTENEGRO",
		82:  "COUNTRY_MOROCCO",
		83:  "COUNTRY_NAMIBIA",
		84:  "COUNTRY_NEPAL",
		85:  "COUNTRY_NETHERLANDS",
		86:  "COUNTRY_NEW_ZEALAND",
		87:  "COUNTRY_NICARAGUA",
		88:  "COUNTRY_NIGERIA",
		89:  "COUNTRY_NORTH_MACEDONIA",
		90:  "COUNTRY_NORWAY",
		91:  "COUNTRY_OMAN",
		92:  "COUNTRY_PAKISTAN",
		93:  "COUNTRY_PALESTINE",
		94:  "COUNTRY_PANAMA",
		95:  "COUNTRY_PARAGUAY",
		96:  "COUNTRY_PERU",
		97:  "COUNTRY_PHILIPPINES",
		98:  "COUNTRY_POLAND",
		99:  "COUNTRY_PORTUGAL",
		100: "COUNTRY_PUERTO_RICO",
		101: "COUNTRY_QATAR",
		102: "COUNTRY_ROMANIA",
		103: "COUNTRY_RUSSIA",
		104: "COUNTRY_SAINT_KITTS_AND_NEVIS",
		105: "COUNTRY_SAINT_LUCIA",
		106: "COUNTRY_SAUDI_ARABIA",
		107: "COUNTRY_SCHENGEN_AREA",
		108: "COUNTRY_SERBIA",
		109: "COUNTRY_SINGAPORE",
		110: "COUNTRY_SLOVAKIA",
		111: "COUNTRY_SLOVENIA",
		112: "COUNTRY_SOUTH_AFRICA",
		113: "COUNTRY_SOUTH_KOREA",
		114: "COUNTRY_SPAIN",
		115: "COUNTRY_SRI_LANKA",
		116: "COUNTRY_SUDAN",
		117: "COUNTRY_SWEDEN",
		118: "COUNTRY_SWITZERLAND",
		119: "COUNTRY_TAIWAN",
		120: "COUNTRY_TANZANIA",
		121: "COUNTRY_THAILAND",
		122: "COUNTRY_TRINIDAD_AND_TOBAGO",
		123: "COUNTRY_TUNISIA",
		124: "COUNTRY_TURKEY",
		125: "COUNTRY_UAE",
		126: "COUNTRY_UK",
		127: "COUNTRY_UKRAINE",
		128: "COUNTRY_URUGUAY",
		129: "COUNTRY_USA",
		130: "COUNTRY_UZBEKISTAN",
		131: "COUNTRY_VENEZUELA",
		132: "COUNTRY_VIETNAM",
	}
	Country_value = map[string]int32{
		"COUNTRY_NOT_AVAILABLE":                    0,
		"COUNTRY_AFGHANISTAN":                      1,
		"COUNTRY_ALBANIA":                          2,
		"COUNTRY_ALGERIA":                          3,
		"COUNTRY_ANTIGUA_AND_BARBUDA":              4,
		"COUNTRY_ARGENTINA":                        5,
		"COUNTRY_ARMENIA":                          6,
		"COUNTRY_AUSTRALIA":                        7,
		"COUNTRY_AUSTRIA":                          8,
		"COUNTRY_AZERBAIJAN":                       9,
		"COUNTRY_BAHAMAS":                          10,
		"COUNTRY_BAHRAIN":                          11,
		"COUNTRY_BANGLADESH":                       12,
		"COUNTRY_BARBADOS":                         13,
		"COUNTRY_BELARUS":                          14,
		"COUNTRY_BELGIUM":                          15,
		"COUNTRY_BERMUDA":                          16,
		"COUNTRY_BOLIVIA":                          17,
		"COUNTRY_BOSNIA_AND_HERZEGOVINA":           18,
		"COUNTRY_BRAZIL":                           19,
		"COUNTRY_BRUNEI":                           20,
		"COUNTRY_BULGARIA":                         21,
		"COUNTRY_CAMBODIA":                         22,
		"COUNTRY_CAMEROON":                         23,
		"COUNTRY_CANADA":                           24,
		"COUNTRY_CAYMAN_ISLANDS":                   25,
		"COUNTRY_CHILE":                            26,
		"COUNTRY_CHINA":                            27,
		"COUNTRY_COLOMBIA":                         28,
		"COUNTRY_COSTA_RICA":                       29,
		"COUNTRY_CROATIA":                          30,
		"COUNTRY_CUBA":                             31,
		"COUNTRY_CYPRUS":                           32,
		"COUNTRY_CZECHIA":                          33,
		"COUNTRY_DEMOCRATIC_REPUBLIC_OF_THE_CONGO": 34,
		"COUNTRY_DENMARK":                          35,
		"COUNTRY_DOMINICAN_REPUBLIC":               36,
		"COUNTRY_ECUADOR":                          37,
		"COUNTRY_EGYPT":                            38,
		"COUNTRY_EL_SALVADOR":                      39,
		"COUNTRY_ESTONIA":                          40,
		"COUNTRY_EUROPEAN_UNION":                   41,
		"COUNTRY_FINLAND":                          42,
		"COUNTRY_FRANCE":                           43,
		"COUNTRY_GEORGIA":                          44,
		"COUNTRY_GERMANY":                          45,
		"COUNTRY_GHANA":                            46,
		"COUNTRY_GREECE":                           47,
		"COUNTRY_GUATEMALA":                        48,
		"COUNTRY_HAITI":                            49,
		"COUNTRY_HONDURAS":                         50,
		"COUNTRY_HONG_KONG":                        51,
		"COUNTRY_HUNGARY":                          52,
		"COUNTRY_ICELAND":                          53,
		"COUNTRY_INDIA":                            54,
		"COUNTRY_INDONESIA":                        55,
		"COUNTRY_IRAN":                             56,
		"COUNTRY_IRAQ":                             57,
		"COUNTRY_IRELAND":                          58,
		"COUNTRY_ISRAEL":                           59,
		"COUNTRY_ITALY":                            60,
		"COUNTRY_IVORY_COAST":                      61,
		"COUNTRY_JAMAICA":                          62,
		"COUNTRY_JAPAN":                            63,
		"COUNTRY_JORDAN":                           64,
		"COUNTRY_KAZAKHSTAN":                       65,
		"COUNTRY_KENYA":                            66,
		"COUNTRY_KOSOVO":                           67,
		"COUNTRY_KUWAIT":                           68,
		"COUNTRY_LATVIA":                           69,
		"COUNTRY_LIBYA":                            70,
		"COUNTRY_LIECHTENSTEIN":                    71,
		"COUNTRY_LITHUANIA":                        72,
		"COUNTRY_LUXEMBOURG":                       73,
		"COUNTRY_MALAYSIA":                         74,
		"COUNTRY_MALDIVES":                         75,
		"COUNTRY_MALTA":                            76,
		"COUNTRY_MAURITIUS":                        77,
		"COUNTRY_MEXICO":                           78,
		"COUNTRY_MOLDOVA":                          79,
		"COUNTRY_MONACO":                           80,
		"COUNTRY_MONTENEGRO":                       81,
		"COUNTRY_MOROCCO":                          82,
		"COUNTRY_NAMIBIA":                          83,
		"COUNTRY_NEPAL":                            84,
		"COUNTRY_NETHERLANDS":                      85,
		"COUNTRY_NEW_ZEALAND":                      86,
		"COUNTRY_NICARAGUA":                        87,
		"COUNTRY_NIGERIA":                          88,
		"COUNTRY_NORTH_MACEDONIA":                  89,
		"COUNTRY_NORWAY":                           90,
		"COUNTRY_OMAN":                             91,
		"COUNTRY_PAKISTAN":                         92,
		"COUNTRY_PALESTINE":                        93,
		"COUNTRY_PANAMA":                           94,
		"COUNTRY_PARAGUAY":                         95,
		"COUNTRY_PERU":                             96,
		"COUNTRY_PHILIPPINES":                      97,
		"COUNTRY_POLAND":                           98,
		"COUNTRY_PORTUGAL":                         99,
		"COUNTRY_PUERTO_RICO":                      100,
		"COUNTRY_QATAR":                            101,
		"COUNTRY_ROMANIA":                          102,
		"COUNTRY_RUSSIA":                           103,
		"COUNTRY_SAINT_KITTS_AND_NEVIS":            104,
		"COUNTRY_SAINT_LUCIA":                      105,
		"COUNTRY_SAUDI_ARABIA":                     106,
		"COUNTRY_SCHENGEN_AREA":                    107,
		"COUNTRY_SERBIA":                           108,
		"COUNTRY_SINGAPORE":                        109,
		"COUNTRY_SLOVAKIA":                         110,
		"COUNTRY_SLOVENIA":                         111,
		"COUNTRY_SOUTH_AFRICA":                     112,
		"COUNTRY_SOUTH_KOREA":                      113,
		"COUNTRY_SPAIN":                            114,
		"COUNTRY_SRI_LANKA":                        115,
		"COUNTRY_SUDAN":                            116,
		"COUNTRY_SWEDEN":                           117,
		"COUNTRY_SWITZERLAND":                      118,
		"COUNTRY_TAIWAN":                           119,
		"COUNTRY_TANZANIA":                         120,
		"COUNTRY_THAILAND":                         121,
		"COUNTRY_TRINIDAD_AND_TOBAGO":              122,
		"COUNTRY_TUNISIA":                          123,
		"COUNTRY_TURKEY":                           124,
		"COUNTRY_UAE":                              125,
		"COUNTRY_UK":                               126,
		"COUNTRY_UKRAINE":                          127,
		"COUNTRY_URUGUAY":                          128,
		"COUNTRY_USA":                              129,
		"COUNTRY_UZBEKISTAN":                       130,
		"COUNTRY_VENEZUELA":                        131,
		"COUNTRY_VIETNAM":                          132,
	}
)

func (x Country) Enum() *Country {
	p := new(Country)
	*p = x
	return p
}

func (x Country) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Country) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_ddx_v1_countries_enum_proto_enumTypes[0].Descriptor()
}

func (Country) Type() protoreflect.EnumType {
	return &file_proto_ddx_v1_countries_enum_proto_enumTypes[0]
}

func (x Country) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Country.Descriptor instead.
func (Country) EnumDescriptor() ([]byte, []int) {
	return file_proto_ddx_v1_countries_enum_proto_rawDescGZIP(), []int{0}
}

var File_proto_ddx_v1_countries_enum_proto protoreflect.FileDescriptor

var file_proto_ddx_v1_countries_enum_proto_rawDesc = []byte{
	0x0a, 0x21, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x64, 0x78, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x72, 0x69, 0x65, 0x73, 0x5f, 0x65, 0x6e, 0x75, 0x6d, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x12, 0x0c, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2e, 0x64, 0x64, 0x78, 0x2e, 0x76,
	0x31, 0x2a, 0x97, 0x17, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x19, 0x0a,
	0x15, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x54, 0x5f, 0x41, 0x56, 0x41,
	0x49, 0x4c, 0x41, 0x42, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x41, 0x46, 0x47, 0x48, 0x41, 0x4e, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x10,
	0x01, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x4c, 0x42,
	0x41, 0x4e, 0x49, 0x41, 0x10, 0x02, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x41, 0x4c, 0x47, 0x45, 0x52, 0x49, 0x41, 0x10, 0x03, 0x12, 0x1f, 0x0a, 0x1b, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x4e, 0x54, 0x49, 0x47, 0x55, 0x41, 0x5f, 0x41,
	0x4e, 0x44, 0x5f, 0x42, 0x41, 0x52, 0x42, 0x55, 0x44, 0x41, 0x10, 0x04, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x52, 0x47, 0x45, 0x4e, 0x54, 0x49, 0x4e,
	0x41, 0x10, 0x05, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41,
	0x52, 0x4d, 0x45, 0x4e, 0x49, 0x41, 0x10, 0x06, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x41, 0x55, 0x53, 0x54, 0x52, 0x41, 0x4c, 0x49, 0x41, 0x10, 0x07, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x41, 0x55, 0x53, 0x54, 0x52,
	0x49, 0x41, 0x10, 0x08, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x41, 0x5a, 0x45, 0x52, 0x42, 0x41, 0x49, 0x4a, 0x41, 0x4e, 0x10, 0x09, 0x12, 0x13, 0x0a, 0x0f,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x48, 0x41, 0x4d, 0x41, 0x53, 0x10,
	0x0a, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x48,
	0x52, 0x41, 0x49, 0x4e, 0x10, 0x0b, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x42, 0x41, 0x4e, 0x47, 0x4c, 0x41, 0x44, 0x45, 0x53, 0x48, 0x10, 0x0c, 0x12, 0x14,
	0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x41, 0x52, 0x42, 0x41, 0x44,
	0x4f, 0x53, 0x10, 0x0d, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x42, 0x45, 0x4c, 0x41, 0x52, 0x55, 0x53, 0x10, 0x0e, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x45, 0x4c, 0x47, 0x49, 0x55, 0x4d, 0x10, 0x0f, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x45, 0x52, 0x4d, 0x55, 0x44,
	0x41, 0x10, 0x10, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42,
	0x4f, 0x4c, 0x49, 0x56, 0x49, 0x41, 0x10, 0x11, 0x12, 0x22, 0x0a, 0x1e, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x42, 0x4f, 0x53, 0x4e, 0x49, 0x41, 0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x48,
	0x45, 0x52, 0x5a, 0x45, 0x47, 0x4f, 0x56, 0x49, 0x4e, 0x41, 0x10, 0x12, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x52, 0x41, 0x5a, 0x49, 0x4c, 0x10, 0x13,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x42, 0x52, 0x55, 0x4e,
	0x45, 0x49, 0x10, 0x14, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x42, 0x55, 0x4c, 0x47, 0x41, 0x52, 0x49, 0x41, 0x10, 0x15, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x41, 0x4d, 0x42, 0x4f, 0x44, 0x49, 0x41, 0x10, 0x16,
	0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x41, 0x4d, 0x45,
	0x52, 0x4f, 0x4f, 0x4e, 0x10, 0x17, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x43, 0x41, 0x4e, 0x41, 0x44, 0x41, 0x10, 0x18, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x41, 0x59, 0x4d, 0x41, 0x4e, 0x5f, 0x49, 0x53, 0x4c,
	0x41, 0x4e, 0x44, 0x53, 0x10, 0x19, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x43, 0x48, 0x49, 0x4c, 0x45, 0x10, 0x1a, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x48, 0x49, 0x4e, 0x41, 0x10, 0x1b, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x4c, 0x4f, 0x4d, 0x42, 0x49, 0x41,
	0x10, 0x1c, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x4f,
	0x53, 0x54, 0x41, 0x5f, 0x52, 0x49, 0x43, 0x41, 0x10, 0x1d, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x52, 0x4f, 0x41, 0x54, 0x49, 0x41, 0x10, 0x1e, 0x12,
	0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x55, 0x42, 0x41, 0x10,
	0x1f, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x43, 0x59, 0x50,
	0x52, 0x55, 0x53, 0x10, 0x20, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x43, 0x5a, 0x45, 0x43, 0x48, 0x49, 0x41, 0x10, 0x21, 0x12, 0x2c, 0x0a, 0x28, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x44, 0x45, 0x4d, 0x4f, 0x43, 0x52, 0x41, 0x54, 0x49, 0x43,
	0x5f, 0x52, 0x45, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x5f, 0x4f, 0x46, 0x5f, 0x54, 0x48, 0x45,
	0x5f, 0x43, 0x4f, 0x4e, 0x47, 0x4f, 0x10, 0x22, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x44, 0x45, 0x4e, 0x4d, 0x41, 0x52, 0x4b, 0x10, 0x23, 0x12, 0x1e, 0x0a,
	0x1a, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x44, 0x4f, 0x4d, 0x49, 0x4e, 0x49, 0x43,
	0x41, 0x4e, 0x5f, 0x52, 0x45, 0x50, 0x55, 0x42, 0x4c, 0x49, 0x43, 0x10, 0x24, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x45, 0x43, 0x55, 0x41, 0x44, 0x4f, 0x52,
	0x10, 0x25, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x45, 0x47,
	0x59, 0x50, 0x54, 0x10, 0x26, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x45, 0x4c, 0x5f, 0x53, 0x41, 0x4c, 0x56, 0x41, 0x44, 0x4f, 0x52, 0x10, 0x27, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x45, 0x53, 0x54, 0x4f, 0x4e, 0x49,
	0x41, 0x10, 0x28, 0x12, 0x1a, 0x0a, 0x16, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x45,
	0x55, 0x52, 0x4f, 0x50, 0x45, 0x41, 0x4e, 0x5f, 0x55, 0x4e, 0x49, 0x4f, 0x4e, 0x10, 0x29, 0x12,
	0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x46, 0x49, 0x4e, 0x4c, 0x41,
	0x4e, 0x44, 0x10, 0x2a, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x46, 0x52, 0x41, 0x4e, 0x43, 0x45, 0x10, 0x2b, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x47, 0x45, 0x4f, 0x52, 0x47, 0x49, 0x41, 0x10, 0x2c, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x47, 0x45, 0x52, 0x4d, 0x41, 0x4e, 0x59,
	0x10, 0x2d, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x47, 0x48,
	0x41, 0x4e, 0x41, 0x10, 0x2e, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x47, 0x52, 0x45, 0x45, 0x43, 0x45, 0x10, 0x2f, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x47, 0x55, 0x41, 0x54, 0x45, 0x4d, 0x41, 0x4c, 0x41, 0x10, 0x30,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x48, 0x41, 0x49, 0x54,
	0x49, 0x10, 0x31, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x48,
	0x4f, 0x4e, 0x44, 0x55, 0x52, 0x41, 0x53, 0x10, 0x32, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x48, 0x4f, 0x4e, 0x47, 0x5f, 0x4b, 0x4f, 0x4e, 0x47, 0x10, 0x33,
	0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x48, 0x55, 0x4e, 0x47,
	0x41, 0x52, 0x59, 0x10, 0x34, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x49, 0x43, 0x45, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x35, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x4e, 0x44, 0x49, 0x41, 0x10, 0x36, 0x12, 0x15, 0x0a,
	0x11, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x4e, 0x44, 0x4f, 0x4e, 0x45, 0x53,
	0x49, 0x41, 0x10, 0x37, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x49, 0x52, 0x41, 0x4e, 0x10, 0x38, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x49, 0x52, 0x41, 0x51, 0x10, 0x39, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x49, 0x52, 0x45, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x3a, 0x12, 0x12, 0x0a,
	0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x53, 0x52, 0x41, 0x45, 0x4c, 0x10,
	0x3b, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x49, 0x54, 0x41,
	0x4c, 0x59, 0x10, 0x3c, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x49, 0x56, 0x4f, 0x52, 0x59, 0x5f, 0x43, 0x4f, 0x41, 0x53, 0x54, 0x10, 0x3d, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4a, 0x41, 0x4d, 0x41, 0x49, 0x43, 0x41,
	0x10, 0x3e, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4a, 0x41,
	0x50, 0x41, 0x4e, 0x10, 0x3f, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x4a, 0x4f, 0x52, 0x44, 0x41, 0x4e, 0x10, 0x40, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4b, 0x41, 0x5a, 0x41, 0x4b, 0x48, 0x53, 0x54, 0x41, 0x4e, 0x10,
	0x41, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4b, 0x45, 0x4e,
	0x59, 0x41, 0x10, 0x42, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x4b, 0x4f, 0x53, 0x4f, 0x56, 0x4f, 0x10, 0x43, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x4b, 0x55, 0x57, 0x41, 0x49, 0x54, 0x10, 0x44, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4c, 0x41, 0x54, 0x56, 0x49, 0x41, 0x10, 0x45,
	0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x42, 0x59,
	0x41, 0x10, 0x46, 0x12, 0x19, 0x0a, 0x15, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4c,
	0x49, 0x45, 0x43, 0x48, 0x54, 0x45, 0x4e, 0x53, 0x54, 0x45, 0x49, 0x4e, 0x10, 0x47, 0x12, 0x15,
	0x0a, 0x11, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4c, 0x49, 0x54, 0x48, 0x55, 0x41,
	0x4e, 0x49, 0x41, 0x10, 0x48, 0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x4c, 0x55, 0x58, 0x45, 0x4d, 0x42, 0x4f, 0x55, 0x52, 0x47, 0x10, 0x49, 0x12, 0x14, 0x0a,
	0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4d, 0x41, 0x4c, 0x41, 0x59, 0x53, 0x49,
	0x41, 0x10, 0x4a, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4d,
	0x41, 0x4c, 0x44, 0x49, 0x56, 0x45, 0x53, 0x10, 0x4b, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4d, 0x41, 0x4c, 0x54, 0x41, 0x10, 0x4c, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4d, 0x41, 0x55, 0x52, 0x49, 0x54, 0x49, 0x55,
	0x53, 0x10, 0x4d, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4d,
	0x45, 0x58, 0x49, 0x43, 0x4f, 0x10, 0x4e, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x4c, 0x44, 0x4f, 0x56, 0x41, 0x10, 0x4f, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x4e, 0x41, 0x43, 0x4f, 0x10, 0x50,
	0x12, 0x16, 0x0a, 0x12, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x4e, 0x54,
	0x45, 0x4e, 0x45, 0x47, 0x52, 0x4f, 0x10, 0x51, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x4d, 0x4f, 0x52, 0x4f, 0x43, 0x43, 0x4f, 0x10, 0x52, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x41, 0x4d, 0x49, 0x42, 0x49, 0x41,
	0x10, 0x53, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x45,
	0x50, 0x41, 0x4c, 0x10, 0x54, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x4e, 0x45, 0x54, 0x48, 0x45, 0x52, 0x4c, 0x41, 0x4e, 0x44, 0x53, 0x10, 0x55, 0x12, 0x17,
	0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x45, 0x57, 0x5f, 0x5a, 0x45,
	0x41, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x56, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x4e, 0x49, 0x43, 0x41, 0x52, 0x41, 0x47, 0x55, 0x41, 0x10, 0x57, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x49, 0x47, 0x45, 0x52, 0x49,
	0x41, 0x10, 0x58, 0x12, 0x1b, 0x0a, 0x17, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e,
	0x4f, 0x52, 0x54, 0x48, 0x5f, 0x4d, 0x41, 0x43, 0x45, 0x44, 0x4f, 0x4e, 0x49, 0x41, 0x10, 0x59,
	0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x4e, 0x4f, 0x52, 0x57,
	0x41, 0x59, 0x10, 0x5a, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x4f, 0x4d, 0x41, 0x4e, 0x10, 0x5b, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x50, 0x41, 0x4b, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x10, 0x5c, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x50, 0x41, 0x4c, 0x45, 0x53, 0x54, 0x49, 0x4e,
	0x45, 0x10, 0x5d, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x50,
	0x41, 0x4e, 0x41, 0x4d, 0x41, 0x10, 0x5e, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x50, 0x41, 0x52, 0x41, 0x47, 0x55, 0x41, 0x59, 0x10, 0x5f, 0x12, 0x10, 0x0a,
	0x0c, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x50, 0x45, 0x52, 0x55, 0x10, 0x60, 0x12,
	0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x50, 0x48, 0x49, 0x4c, 0x49,
	0x50, 0x50, 0x49, 0x4e, 0x45, 0x53, 0x10, 0x61, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x50, 0x4f, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x62, 0x12, 0x14, 0x0a, 0x10,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x50, 0x4f, 0x52, 0x54, 0x55, 0x47, 0x41, 0x4c,
	0x10, 0x63, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x50, 0x55,
	0x45, 0x52, 0x54, 0x4f, 0x5f, 0x52, 0x49, 0x43, 0x4f, 0x10, 0x64, 0x12, 0x11, 0x0a, 0x0d, 0x43,
	0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x51, 0x41, 0x54, 0x41, 0x52, 0x10, 0x65, 0x12, 0x13,
	0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x52, 0x4f, 0x4d, 0x41, 0x4e, 0x49,
	0x41, 0x10, 0x66, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x52,
	0x55, 0x53, 0x53, 0x49, 0x41, 0x10, 0x67, 0x12, 0x21, 0x0a, 0x1d, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x53, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x4b, 0x49, 0x54, 0x54, 0x53, 0x5f, 0x41,
	0x4e, 0x44, 0x5f, 0x4e, 0x45, 0x56, 0x49, 0x53, 0x10, 0x68, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f,
	0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x41, 0x49, 0x4e, 0x54, 0x5f, 0x4c, 0x55, 0x43, 0x49,
	0x41, 0x10, 0x69, 0x12, 0x18, 0x0a, 0x14, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53,
	0x41, 0x55, 0x44, 0x49, 0x5f, 0x41, 0x52, 0x41, 0x42, 0x49, 0x41, 0x10, 0x6a, 0x12, 0x19, 0x0a,
	0x15, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x43, 0x48, 0x45, 0x4e, 0x47, 0x45,
	0x4e, 0x5f, 0x41, 0x52, 0x45, 0x41, 0x10, 0x6b, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e,
	0x54, 0x52, 0x59, 0x5f, 0x53, 0x45, 0x52, 0x42, 0x49, 0x41, 0x10, 0x6c, 0x12, 0x15, 0x0a, 0x11,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x49, 0x4e, 0x47, 0x41, 0x50, 0x4f, 0x52,
	0x45, 0x10, 0x6d, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53,
	0x4c, 0x4f, 0x56, 0x41, 0x4b, 0x49, 0x41, 0x10, 0x6e, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x4c, 0x4f, 0x56, 0x45, 0x4e, 0x49, 0x41, 0x10, 0x6f, 0x12,
	0x18, 0x0a, 0x14, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48,
	0x5f, 0x41, 0x46, 0x52, 0x49, 0x43, 0x41, 0x10, 0x70, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55,
	0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x4f, 0x55, 0x54, 0x48, 0x5f, 0x4b, 0x4f, 0x52, 0x45, 0x41,
	0x10, 0x71, 0x12, 0x11, 0x0a, 0x0d, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x50,
	0x41, 0x49, 0x4e, 0x10, 0x72, 0x12, 0x15, 0x0a, 0x11, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x53, 0x52, 0x49, 0x5f, 0x4c, 0x41, 0x4e, 0x4b, 0x41, 0x10, 0x73, 0x12, 0x11, 0x0a, 0x0d,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x55, 0x44, 0x41, 0x4e, 0x10, 0x74, 0x12,
	0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53, 0x57, 0x45, 0x44, 0x45,
	0x4e, 0x10, 0x75, 0x12, 0x17, 0x0a, 0x13, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x53,
	0x57, 0x49, 0x54, 0x5a, 0x45, 0x52, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x76, 0x12, 0x12, 0x0a, 0x0e,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x41, 0x49, 0x57, 0x41, 0x4e, 0x10, 0x77,
	0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x41, 0x4e, 0x5a,
	0x41, 0x4e, 0x49, 0x41, 0x10, 0x78, 0x12, 0x14, 0x0a, 0x10, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x54, 0x48, 0x41, 0x49, 0x4c, 0x41, 0x4e, 0x44, 0x10, 0x79, 0x12, 0x1f, 0x0a, 0x1b,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x52, 0x49, 0x4e, 0x49, 0x44, 0x41, 0x44,
	0x5f, 0x41, 0x4e, 0x44, 0x5f, 0x54, 0x4f, 0x42, 0x41, 0x47, 0x4f, 0x10, 0x7a, 0x12, 0x13, 0x0a,
	0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x55, 0x4e, 0x49, 0x53, 0x49, 0x41,
	0x10, 0x7b, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x54, 0x55,
	0x52, 0x4b, 0x45, 0x59, 0x10, 0x7c, 0x12, 0x0f, 0x0a, 0x0b, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52,
	0x59, 0x5f, 0x55, 0x41, 0x45, 0x10, 0x7d, 0x12, 0x0e, 0x0a, 0x0a, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x55, 0x4b, 0x10, 0x7e, 0x12, 0x13, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54,
	0x52, 0x59, 0x5f, 0x55, 0x4b, 0x52, 0x41, 0x49, 0x4e, 0x45, 0x10, 0x7f, 0x12, 0x14, 0x0a, 0x0f,
	0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x55, 0x52, 0x55, 0x47, 0x55, 0x41, 0x59, 0x10,
	0x80, 0x01, 0x12, 0x10, 0x0a, 0x0b, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x55, 0x53,
	0x41, 0x10, 0x81, 0x01, 0x12, 0x17, 0x0a, 0x12, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f,
	0x55, 0x5a, 0x42, 0x45, 0x4b, 0x49, 0x53, 0x54, 0x41, 0x4e, 0x10, 0x82, 0x01, 0x12, 0x16, 0x0a,
	0x11, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59, 0x5f, 0x56, 0x45, 0x4e, 0x45, 0x5a, 0x55, 0x45,
	0x4c, 0x41, 0x10, 0x83, 0x01, 0x12, 0x14, 0x0a, 0x0f, 0x43, 0x4f, 0x55, 0x4e, 0x54, 0x52, 0x59,
	0x5f, 0x56, 0x49, 0x45, 0x54, 0x4e, 0x41, 0x4d, 0x10, 0x84, 0x01, 0x42, 0x34, 0x5a, 0x32, 0x67,
	0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x76, 0x65, 0x72, 0x69, 0x64, 0x69,
	0x6c, 0x2f, 0x69, 0x64, 0x2d, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x2d, 0x73, 0x65, 0x72,
	0x76, 0x69, 0x63, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x64, 0x64, 0x78, 0x2f, 0x76,
	0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_ddx_v1_countries_enum_proto_rawDescOnce sync.Once
	file_proto_ddx_v1_countries_enum_proto_rawDescData = file_proto_ddx_v1_countries_enum_proto_rawDesc
)

func file_proto_ddx_v1_countries_enum_proto_rawDescGZIP() []byte {
	file_proto_ddx_v1_countries_enum_proto_rawDescOnce.Do(func() {
		file_proto_ddx_v1_countries_enum_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_ddx_v1_countries_enum_proto_rawDescData)
	})
	return file_proto_ddx_v1_countries_enum_proto_rawDescData
}

var file_proto_ddx_v1_countries_enum_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_ddx_v1_countries_enum_proto_goTypes = []any{
	(Country)(0), // 0: proto.ddx.v1.Country
}
var file_proto_ddx_v1_countries_enum_proto_depIdxs = []int32{
	0, // [0:0] is the sub-list for method output_type
	0, // [0:0] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_proto_ddx_v1_countries_enum_proto_init() }
func file_proto_ddx_v1_countries_enum_proto_init() {
	if File_proto_ddx_v1_countries_enum_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_ddx_v1_countries_enum_proto_rawDesc,
			NumEnums:      1,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_ddx_v1_countries_enum_proto_goTypes,
		DependencyIndexes: file_proto_ddx_v1_countries_enum_proto_depIdxs,
		EnumInfos:         file_proto_ddx_v1_countries_enum_proto_enumTypes,
	}.Build()
	File_proto_ddx_v1_countries_enum_proto = out.File
	file_proto_ddx_v1_countries_enum_proto_rawDesc = nil
	file_proto_ddx_v1_countries_enum_proto_goTypes = nil
	file_proto_ddx_v1_countries_enum_proto_depIdxs = nil
}
