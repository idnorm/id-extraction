// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/ddx/v1/document_types_enum.proto
// Protobuf Java Version: 4.28.2

package proto.ddx.v1;

public final class DocumentTypesEnum {
  private DocumentTypesEnum() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      DocumentTypesEnum.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   *
   * DocumentType - an enum of supported document types.
   * There are many countries and many document types. To see the full list of
   * supported document types in each country and/or region for our latest release please see
   * the [documentation](https://github.com/idnorm/id-extraction/blob/master/docs/document_types_by_country_and_region.md).
   * </pre>
   *
   * Protobuf enum {@code proto.ddx.v1.DocumentType}
   */
  public enum DocumentType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * Not available
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NOT_AVAILABLE = 0;</code>
     */
    DOCUMENT_TYPE_NOT_AVAILABLE(0),
    /**
     * <pre>
     * ADDRESS_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_ADDRESS_CARD = 1;</code>
     */
    DOCUMENT_TYPE_ADDRESS_CARD(1),
    /**
     * <pre>
     * ALIEN_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_ALIEN_IDENTIFICATION_DOCUMENT = 2;</code>
     */
    DOCUMENT_TYPE_ALIEN_IDENTIFICATION_DOCUMENT(2),
    /**
     * <pre>
     * ASYLUM_SEEKER_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_ASYLUM_SEEKER_CARD = 3;</code>
     */
    DOCUMENT_TYPE_ASYLUM_SEEKER_CARD(3),
    /**
     * <pre>
     * BORDER_CROSSING_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_BORDER_CROSSING_CARD = 4;</code>
     */
    DOCUMENT_TYPE_BORDER_CROSSING_CARD(4),
    /**
     * <pre>
     * CITIZENSHIP_CERTIFICATE
     * </pre>
     *
     * <code>DOCUMENT_TYPE_CITIZENSHIP_CERTIFICATE = 5;</code>
     */
    DOCUMENT_TYPE_CITIZENSHIP_CERTIFICATE(5),
    /**
     * <pre>
     * CONSULAR_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_CONSULAR_IDENTIFICATION_DOCUMENT = 6;</code>
     */
    DOCUMENT_TYPE_CONSULAR_IDENTIFICATION_DOCUMENT(6),
    /**
     * <pre>
     * CONSULAR_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_CONSULAR_PASSPORT = 7;</code>
     */
    DOCUMENT_TYPE_CONSULAR_PASSPORT(7),
    /**
     * <pre>
     * CONSULAR_VOTER_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATION_DOCUMENT = 8;</code>
     */
    DOCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATION_DOCUMENT(8),
    /**
     * <pre>
     * DRIVERS_LICENSE
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVERS_LICENSE = 9;</code>
     */
    DOCUMENT_TYPE_DRIVERS_LICENSE(9),
    /**
     * <pre>
     * DRIVERS_LICENSE_AND_SERVICES_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVERS_LICENSE_AND_SERVICES_CARD = 10;</code>
     */
    DOCUMENT_TYPE_DRIVERS_LICENSE_AND_SERVICES_CARD(10),
    /**
     * <pre>
     * DRIVER_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVER_CARD = 11;</code>
     */
    DOCUMENT_TYPE_DRIVER_CARD(11),
    /**
     * <pre>
     * DRIVER_PRIVILEGE_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVER_PRIVILEGE_CARD = 12;</code>
     */
    DOCUMENT_TYPE_DRIVER_PRIVILEGE_CARD(12),
    /**
     * <pre>
     * DRIVER_QUALIFICATION_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVER_QUALIFICATION_CARD = 13;</code>
     */
    DOCUMENT_TYPE_DRIVER_QUALIFICATION_CARD(13),
    /**
     * <pre>
     * EMPLOYMENT_PASS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_EMPLOYMENT_PASS = 14;</code>
     */
    DOCUMENT_TYPE_EMPLOYMENT_PASS(14),
    /**
     * <pre>
     * EXIT_ENTRY_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_EXIT_ENTRY_PERMIT = 15;</code>
     */
    DOCUMENT_TYPE_EXIT_ENTRY_PERMIT(15),
    /**
     * <pre>
     * E_ID
     * </pre>
     *
     * <code>DOCUMENT_TYPE_E_ID = 16;</code>
     */
    DOCUMENT_TYPE_E_ID(16),
    /**
     * <pre>
     * FIN_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_FIN_CARD = 17;</code>
     */
    DOCUMENT_TYPE_FIN_CARD(17),
    /**
     * <pre>
     * GLOBAL_ENTRY_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_GLOBAL_ENTRY_CARD = 18;</code>
     */
    DOCUMENT_TYPE_GLOBAL_ENTRY_CARD(18),
    /**
     * <pre>
     * GREEN_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_GREEN_CARD = 19;</code>
     */
    DOCUMENT_TYPE_GREEN_CARD(19),
    /**
     * <pre>
     * HEALTH_INSURANCE_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_HEALTH_INSURANCE_CARD = 20;</code>
     */
    DOCUMENT_TYPE_HEALTH_INSURANCE_CARD(20),
    /**
     * <pre>
     * IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_IDENTIFICATION_DOCUMENT = 21;</code>
     */
    DOCUMENT_TYPE_IDENTIFICATION_DOCUMENT(21),
    /**
     * <pre>
     * IMMIGRANT_VISA
     * </pre>
     *
     * <code>DOCUMENT_TYPE_IMMIGRANT_VISA = 22;</code>
     */
    DOCUMENT_TYPE_IMMIGRANT_VISA(22),
    /**
     * <pre>
     * INDIVIDUAL_NUMBER_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_INDIVIDUAL_NUMBER_CARD = 23;</code>
     */
    DOCUMENT_TYPE_INDIVIDUAL_NUMBER_CARD(23),
    /**
     * <pre>
     * INTERNAL_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_INTERNAL_PASSPORT = 24;</code>
     */
    DOCUMENT_TYPE_INTERNAL_PASSPORT(24),
    /**
     * <pre>
     * MAINLAND_TRAVEL_PERMIT_TAIWAN
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MAINLAND_TRAVEL_PERMIT_TAIWAN = 25;</code>
     */
    DOCUMENT_TYPE_MAINLAND_TRAVEL_PERMIT_TAIWAN(25),
    /**
     * <pre>
     * MILITARY_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MILITARY_IDENTIFICATION_DOCUMENT = 26;</code>
     */
    DOCUMENT_TYPE_MILITARY_IDENTIFICATION_DOCUMENT(26),
    /**
     * <pre>
     * MINORS_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MINORS_IDENTIFICATION_DOCUMENT = 27;</code>
     */
    DOCUMENT_TYPE_MINORS_IDENTIFICATION_DOCUMENT(27),
    /**
     * <pre>
     * MINORS_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MINORS_PASSPORT = 28;</code>
     */
    DOCUMENT_TYPE_MINORS_PASSPORT(28),
    /**
     * <pre>
     * MINORS_SERVICES_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MINORS_SERVICES_CARD = 29;</code>
     */
    DOCUMENT_TYPE_MINORS_SERVICES_CARD(29),
    /**
     * <pre>
     * MULTI_PURPOSE_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_DOCUMENT = 30;</code>
     */
    DOCUMENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_DOCUMENT(30),
    /**
     * <pre>
     * MY_KAD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_KAD = 31;</code>
     */
    DOCUMENT_TYPE_MY_KAD(31),
    /**
     * <pre>
     * MY_KAS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_KAS = 32;</code>
     */
    DOCUMENT_TYPE_MY_KAS(32),
    /**
     * <pre>
     * MY_KID
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_KID = 33;</code>
     */
    DOCUMENT_TYPE_MY_KID(33),
    /**
     * <pre>
     * MY_POLIS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_POLIS = 34;</code>
     */
    DOCUMENT_TYPE_MY_POLIS(34),
    /**
     * <pre>
     * MY_PR
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_PR = 35;</code>
     */
    DOCUMENT_TYPE_MY_PR(35),
    /**
     * <pre>
     * MY_TENTERA
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_TENTERA = 36;</code>
     */
    DOCUMENT_TYPE_MY_TENTERA(36),
    /**
     * <pre>
     * NBI_CLEARANCE_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NBI_CLEARANCE_DOCUMENT = 37;</code>
     */
    DOCUMENT_TYPE_NBI_CLEARANCE_DOCUMENT(37),
    /**
     * <pre>
     * NEXT_GEN_ALIEN_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NEXT_GEN_ALIEN_PASSPORT = 38;</code>
     */
    DOCUMENT_TYPE_NEXT_GEN_ALIEN_PASSPORT(38),
    /**
     * <pre>
     * NEXT_GEN_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NEXT_GEN_PASSPORT = 39;</code>
     */
    DOCUMENT_TYPE_NEXT_GEN_PASSPORT(39),
    /**
     * <pre>
     * NEXT_GEN_REFUGEE_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NEXT_GEN_REFUGEE_PASSPORT = 40;</code>
     */
    DOCUMENT_TYPE_NEXT_GEN_REFUGEE_PASSPORT(40),
    /**
     * <pre>
     * NEXUS_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NEXUS_CARD = 41;</code>
     */
    DOCUMENT_TYPE_NEXUS_CARD(41),
    /**
     * <pre>
     * PASS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PASS = 42;</code>
     */
    DOCUMENT_TYPE_PASS(42),
    /**
     * <pre>
     * PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PASSPORT = 43;</code>
     */
    DOCUMENT_TYPE_PASSPORT(43),
    /**
     * <pre>
     * PASSPORT_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PASSPORT_CARD = 44;</code>
     */
    DOCUMENT_TYPE_PASSPORT_CARD(44),
    /**
     * <pre>
     * PERMANENT_ACCOUNT_NUMBER_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PERMANENT_ACCOUNT_NUMBER_CARD = 45;</code>
     */
    DOCUMENT_TYPE_PERMANENT_ACCOUNT_NUMBER_CARD(45),
    /**
     * <pre>
     * POSTAL_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_POSTAL_IDENTIFICATION_DOCUMENT = 46;</code>
     */
    DOCUMENT_TYPE_POSTAL_IDENTIFICATION_DOCUMENT(46),
    /**
     * <pre>
     * PROFESSIONAL_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROFESSIONAL_CARD = 47;</code>
     */
    DOCUMENT_TYPE_PROFESSIONAL_CARD(47),
    /**
     * <pre>
     * PROFESSIONAL_DRIVERS_LICENSE
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROFESSIONAL_DRIVERS_LICENSE = 48;</code>
     */
    DOCUMENT_TYPE_PROFESSIONAL_DRIVERS_LICENSE(48),
    /**
     * <pre>
     * PROOF_OF_AGE_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROOF_OF_AGE_CARD = 49;</code>
     */
    DOCUMENT_TYPE_PROOF_OF_AGE_CARD(49),
    /**
     * <pre>
     * PROOF_OF_REGISTRATION
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROOF_OF_REGISTRATION = 50;</code>
     */
    DOCUMENT_TYPE_PROOF_OF_REGISTRATION(50),
    /**
     * <pre>
     * PROVISIONAL_DRIVERS_LICENSE
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE = 51;</code>
     */
    DOCUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE(51),
    /**
     * <pre>
     * REFUGEE_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_REFUGEE_IDENTIFICATION_DOCUMENT = 52;</code>
     */
    DOCUMENT_TYPE_REFUGEE_IDENTIFICATION_DOCUMENT(52),
    /**
     * <pre>
     * RESIDENCE_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_RESIDENCE_PERMIT = 53;</code>
     */
    DOCUMENT_TYPE_RESIDENCE_PERMIT(53),
    /**
     * <pre>
     * RESIDENT_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_RESIDENT_IDENTIFICATION_DOCUMENT = 54;</code>
     */
    DOCUMENT_TYPE_RESIDENT_IDENTIFICATION_DOCUMENT(54),
    /**
     * <pre>
     * SERVICES_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_SERVICES_CARD = 55;</code>
     */
    DOCUMENT_TYPE_SERVICES_CARD(55),
    /**
     * <pre>
     * SIS_ID
     * </pre>
     *
     * <code>DOCUMENT_TYPE_SIS_ID = 56;</code>
     */
    DOCUMENT_TYPE_SIS_ID(56),
    /**
     * <pre>
     * SOCIAL_SECURITY_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_SOCIAL_SECURITY_CARD = 57;</code>
     */
    DOCUMENT_TYPE_SOCIAL_SECURITY_CARD(57),
    /**
     * <pre>
     * SPECIAL_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_DOCUMENT = 58;</code>
     */
    DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_DOCUMENT(58),
    /**
     * <pre>
     * S_PASS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_S_PASS = 59;</code>
     */
    DOCUMENT_TYPE_S_PASS(59),
    /**
     * <pre>
     * TAX_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMENT = 60;</code>
     */
    DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMENT(60),
    /**
     * <pre>
     * TEMPORARY_PROTECTION_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TEMPORARY_PROTECTION_PERMIT = 61;</code>
     */
    DOCUMENT_TYPE_TEMPORARY_PROTECTION_PERMIT(61),
    /**
     * <pre>
     * TEMPORARY_RESIDENCE_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TEMPORARY_RESIDENCE_PERMIT = 62;</code>
     */
    DOCUMENT_TYPE_TEMPORARY_RESIDENCE_PERMIT(62),
    /**
     * <pre>
     * TRIBAL_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TRIBAL_IDENTIFICATION_DOCUMENT = 63;</code>
     */
    DOCUMENT_TYPE_TRIBAL_IDENTIFICATION_DOCUMENT(63),
    /**
     * <pre>
     * TWIC_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TWIC_CARD = 64;</code>
     */
    DOCUMENT_TYPE_TWIC_CARD(64),
    /**
     * <pre>
     * UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT = 65;</code>
     */
    DOCUMENT_TYPE_UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT(65),
    /**
     * <pre>
     * VETERAN_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DOCUMENT = 66;</code>
     */
    DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DOCUMENT(66),
    /**
     * <pre>
     * VISA
     * </pre>
     *
     * <code>DOCUMENT_TYPE_VISA = 67;</code>
     */
    DOCUMENT_TYPE_VISA(67),
    /**
     * <pre>
     * VOTER_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT = 68;</code>
     */
    DOCUMENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT(68),
    /**
     * <pre>
     * WEAPON_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_WEAPON_PERMIT = 69;</code>
     */
    DOCUMENT_TYPE_WEAPON_PERMIT(69),
    /**
     * <pre>
     * WORK_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_WORK_PERMIT = 70;</code>
     */
    DOCUMENT_TYPE_WORK_PERMIT(70),
    /**
     * <pre>
     * iKAD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_IKAD = 71;</code>
     */
    DOCUMENT_TYPE_IKAD(71),
    UNRECOGNIZED(-1),
    ;

    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DocumentType.class.getName());
    }
    /**
     * <pre>
     * Not available
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NOT_AVAILABLE = 0;</code>
     */
    public static final int DOCUMENT_TYPE_NOT_AVAILABLE_VALUE = 0;
    /**
     * <pre>
     * ADDRESS_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_ADDRESS_CARD = 1;</code>
     */
    public static final int DOCUMENT_TYPE_ADDRESS_CARD_VALUE = 1;
    /**
     * <pre>
     * ALIEN_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_ALIEN_IDENTIFICATION_DOCUMENT = 2;</code>
     */
    public static final int DOCUMENT_TYPE_ALIEN_IDENTIFICATION_DOCUMENT_VALUE = 2;
    /**
     * <pre>
     * ASYLUM_SEEKER_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_ASYLUM_SEEKER_CARD = 3;</code>
     */
    public static final int DOCUMENT_TYPE_ASYLUM_SEEKER_CARD_VALUE = 3;
    /**
     * <pre>
     * BORDER_CROSSING_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_BORDER_CROSSING_CARD = 4;</code>
     */
    public static final int DOCUMENT_TYPE_BORDER_CROSSING_CARD_VALUE = 4;
    /**
     * <pre>
     * CITIZENSHIP_CERTIFICATE
     * </pre>
     *
     * <code>DOCUMENT_TYPE_CITIZENSHIP_CERTIFICATE = 5;</code>
     */
    public static final int DOCUMENT_TYPE_CITIZENSHIP_CERTIFICATE_VALUE = 5;
    /**
     * <pre>
     * CONSULAR_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_CONSULAR_IDENTIFICATION_DOCUMENT = 6;</code>
     */
    public static final int DOCUMENT_TYPE_CONSULAR_IDENTIFICATION_DOCUMENT_VALUE = 6;
    /**
     * <pre>
     * CONSULAR_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_CONSULAR_PASSPORT = 7;</code>
     */
    public static final int DOCUMENT_TYPE_CONSULAR_PASSPORT_VALUE = 7;
    /**
     * <pre>
     * CONSULAR_VOTER_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATION_DOCUMENT = 8;</code>
     */
    public static final int DOCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATION_DOCUMENT_VALUE = 8;
    /**
     * <pre>
     * DRIVERS_LICENSE
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVERS_LICENSE = 9;</code>
     */
    public static final int DOCUMENT_TYPE_DRIVERS_LICENSE_VALUE = 9;
    /**
     * <pre>
     * DRIVERS_LICENSE_AND_SERVICES_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVERS_LICENSE_AND_SERVICES_CARD = 10;</code>
     */
    public static final int DOCUMENT_TYPE_DRIVERS_LICENSE_AND_SERVICES_CARD_VALUE = 10;
    /**
     * <pre>
     * DRIVER_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVER_CARD = 11;</code>
     */
    public static final int DOCUMENT_TYPE_DRIVER_CARD_VALUE = 11;
    /**
     * <pre>
     * DRIVER_PRIVILEGE_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVER_PRIVILEGE_CARD = 12;</code>
     */
    public static final int DOCUMENT_TYPE_DRIVER_PRIVILEGE_CARD_VALUE = 12;
    /**
     * <pre>
     * DRIVER_QUALIFICATION_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_DRIVER_QUALIFICATION_CARD = 13;</code>
     */
    public static final int DOCUMENT_TYPE_DRIVER_QUALIFICATION_CARD_VALUE = 13;
    /**
     * <pre>
     * EMPLOYMENT_PASS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_EMPLOYMENT_PASS = 14;</code>
     */
    public static final int DOCUMENT_TYPE_EMPLOYMENT_PASS_VALUE = 14;
    /**
     * <pre>
     * EXIT_ENTRY_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_EXIT_ENTRY_PERMIT = 15;</code>
     */
    public static final int DOCUMENT_TYPE_EXIT_ENTRY_PERMIT_VALUE = 15;
    /**
     * <pre>
     * E_ID
     * </pre>
     *
     * <code>DOCUMENT_TYPE_E_ID = 16;</code>
     */
    public static final int DOCUMENT_TYPE_E_ID_VALUE = 16;
    /**
     * <pre>
     * FIN_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_FIN_CARD = 17;</code>
     */
    public static final int DOCUMENT_TYPE_FIN_CARD_VALUE = 17;
    /**
     * <pre>
     * GLOBAL_ENTRY_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_GLOBAL_ENTRY_CARD = 18;</code>
     */
    public static final int DOCUMENT_TYPE_GLOBAL_ENTRY_CARD_VALUE = 18;
    /**
     * <pre>
     * GREEN_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_GREEN_CARD = 19;</code>
     */
    public static final int DOCUMENT_TYPE_GREEN_CARD_VALUE = 19;
    /**
     * <pre>
     * HEALTH_INSURANCE_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_HEALTH_INSURANCE_CARD = 20;</code>
     */
    public static final int DOCUMENT_TYPE_HEALTH_INSURANCE_CARD_VALUE = 20;
    /**
     * <pre>
     * IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_IDENTIFICATION_DOCUMENT = 21;</code>
     */
    public static final int DOCUMENT_TYPE_IDENTIFICATION_DOCUMENT_VALUE = 21;
    /**
     * <pre>
     * IMMIGRANT_VISA
     * </pre>
     *
     * <code>DOCUMENT_TYPE_IMMIGRANT_VISA = 22;</code>
     */
    public static final int DOCUMENT_TYPE_IMMIGRANT_VISA_VALUE = 22;
    /**
     * <pre>
     * INDIVIDUAL_NUMBER_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_INDIVIDUAL_NUMBER_CARD = 23;</code>
     */
    public static final int DOCUMENT_TYPE_INDIVIDUAL_NUMBER_CARD_VALUE = 23;
    /**
     * <pre>
     * INTERNAL_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_INTERNAL_PASSPORT = 24;</code>
     */
    public static final int DOCUMENT_TYPE_INTERNAL_PASSPORT_VALUE = 24;
    /**
     * <pre>
     * MAINLAND_TRAVEL_PERMIT_TAIWAN
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MAINLAND_TRAVEL_PERMIT_TAIWAN = 25;</code>
     */
    public static final int DOCUMENT_TYPE_MAINLAND_TRAVEL_PERMIT_TAIWAN_VALUE = 25;
    /**
     * <pre>
     * MILITARY_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MILITARY_IDENTIFICATION_DOCUMENT = 26;</code>
     */
    public static final int DOCUMENT_TYPE_MILITARY_IDENTIFICATION_DOCUMENT_VALUE = 26;
    /**
     * <pre>
     * MINORS_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MINORS_IDENTIFICATION_DOCUMENT = 27;</code>
     */
    public static final int DOCUMENT_TYPE_MINORS_IDENTIFICATION_DOCUMENT_VALUE = 27;
    /**
     * <pre>
     * MINORS_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MINORS_PASSPORT = 28;</code>
     */
    public static final int DOCUMENT_TYPE_MINORS_PASSPORT_VALUE = 28;
    /**
     * <pre>
     * MINORS_SERVICES_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MINORS_SERVICES_CARD = 29;</code>
     */
    public static final int DOCUMENT_TYPE_MINORS_SERVICES_CARD_VALUE = 29;
    /**
     * <pre>
     * MULTI_PURPOSE_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_DOCUMENT = 30;</code>
     */
    public static final int DOCUMENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_DOCUMENT_VALUE = 30;
    /**
     * <pre>
     * MY_KAD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_KAD = 31;</code>
     */
    public static final int DOCUMENT_TYPE_MY_KAD_VALUE = 31;
    /**
     * <pre>
     * MY_KAS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_KAS = 32;</code>
     */
    public static final int DOCUMENT_TYPE_MY_KAS_VALUE = 32;
    /**
     * <pre>
     * MY_KID
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_KID = 33;</code>
     */
    public static final int DOCUMENT_TYPE_MY_KID_VALUE = 33;
    /**
     * <pre>
     * MY_POLIS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_POLIS = 34;</code>
     */
    public static final int DOCUMENT_TYPE_MY_POLIS_VALUE = 34;
    /**
     * <pre>
     * MY_PR
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_PR = 35;</code>
     */
    public static final int DOCUMENT_TYPE_MY_PR_VALUE = 35;
    /**
     * <pre>
     * MY_TENTERA
     * </pre>
     *
     * <code>DOCUMENT_TYPE_MY_TENTERA = 36;</code>
     */
    public static final int DOCUMENT_TYPE_MY_TENTERA_VALUE = 36;
    /**
     * <pre>
     * NBI_CLEARANCE_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NBI_CLEARANCE_DOCUMENT = 37;</code>
     */
    public static final int DOCUMENT_TYPE_NBI_CLEARANCE_DOCUMENT_VALUE = 37;
    /**
     * <pre>
     * NEXT_GEN_ALIEN_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NEXT_GEN_ALIEN_PASSPORT = 38;</code>
     */
    public static final int DOCUMENT_TYPE_NEXT_GEN_ALIEN_PASSPORT_VALUE = 38;
    /**
     * <pre>
     * NEXT_GEN_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NEXT_GEN_PASSPORT = 39;</code>
     */
    public static final int DOCUMENT_TYPE_NEXT_GEN_PASSPORT_VALUE = 39;
    /**
     * <pre>
     * NEXT_GEN_REFUGEE_PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NEXT_GEN_REFUGEE_PASSPORT = 40;</code>
     */
    public static final int DOCUMENT_TYPE_NEXT_GEN_REFUGEE_PASSPORT_VALUE = 40;
    /**
     * <pre>
     * NEXUS_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_NEXUS_CARD = 41;</code>
     */
    public static final int DOCUMENT_TYPE_NEXUS_CARD_VALUE = 41;
    /**
     * <pre>
     * PASS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PASS = 42;</code>
     */
    public static final int DOCUMENT_TYPE_PASS_VALUE = 42;
    /**
     * <pre>
     * PASSPORT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PASSPORT = 43;</code>
     */
    public static final int DOCUMENT_TYPE_PASSPORT_VALUE = 43;
    /**
     * <pre>
     * PASSPORT_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PASSPORT_CARD = 44;</code>
     */
    public static final int DOCUMENT_TYPE_PASSPORT_CARD_VALUE = 44;
    /**
     * <pre>
     * PERMANENT_ACCOUNT_NUMBER_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PERMANENT_ACCOUNT_NUMBER_CARD = 45;</code>
     */
    public static final int DOCUMENT_TYPE_PERMANENT_ACCOUNT_NUMBER_CARD_VALUE = 45;
    /**
     * <pre>
     * POSTAL_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_POSTAL_IDENTIFICATION_DOCUMENT = 46;</code>
     */
    public static final int DOCUMENT_TYPE_POSTAL_IDENTIFICATION_DOCUMENT_VALUE = 46;
    /**
     * <pre>
     * PROFESSIONAL_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROFESSIONAL_CARD = 47;</code>
     */
    public static final int DOCUMENT_TYPE_PROFESSIONAL_CARD_VALUE = 47;
    /**
     * <pre>
     * PROFESSIONAL_DRIVERS_LICENSE
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROFESSIONAL_DRIVERS_LICENSE = 48;</code>
     */
    public static final int DOCUMENT_TYPE_PROFESSIONAL_DRIVERS_LICENSE_VALUE = 48;
    /**
     * <pre>
     * PROOF_OF_AGE_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROOF_OF_AGE_CARD = 49;</code>
     */
    public static final int DOCUMENT_TYPE_PROOF_OF_AGE_CARD_VALUE = 49;
    /**
     * <pre>
     * PROOF_OF_REGISTRATION
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROOF_OF_REGISTRATION = 50;</code>
     */
    public static final int DOCUMENT_TYPE_PROOF_OF_REGISTRATION_VALUE = 50;
    /**
     * <pre>
     * PROVISIONAL_DRIVERS_LICENSE
     * </pre>
     *
     * <code>DOCUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE = 51;</code>
     */
    public static final int DOCUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE_VALUE = 51;
    /**
     * <pre>
     * REFUGEE_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_REFUGEE_IDENTIFICATION_DOCUMENT = 52;</code>
     */
    public static final int DOCUMENT_TYPE_REFUGEE_IDENTIFICATION_DOCUMENT_VALUE = 52;
    /**
     * <pre>
     * RESIDENCE_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_RESIDENCE_PERMIT = 53;</code>
     */
    public static final int DOCUMENT_TYPE_RESIDENCE_PERMIT_VALUE = 53;
    /**
     * <pre>
     * RESIDENT_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_RESIDENT_IDENTIFICATION_DOCUMENT = 54;</code>
     */
    public static final int DOCUMENT_TYPE_RESIDENT_IDENTIFICATION_DOCUMENT_VALUE = 54;
    /**
     * <pre>
     * SERVICES_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_SERVICES_CARD = 55;</code>
     */
    public static final int DOCUMENT_TYPE_SERVICES_CARD_VALUE = 55;
    /**
     * <pre>
     * SIS_ID
     * </pre>
     *
     * <code>DOCUMENT_TYPE_SIS_ID = 56;</code>
     */
    public static final int DOCUMENT_TYPE_SIS_ID_VALUE = 56;
    /**
     * <pre>
     * SOCIAL_SECURITY_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_SOCIAL_SECURITY_CARD = 57;</code>
     */
    public static final int DOCUMENT_TYPE_SOCIAL_SECURITY_CARD_VALUE = 57;
    /**
     * <pre>
     * SPECIAL_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_DOCUMENT = 58;</code>
     */
    public static final int DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_DOCUMENT_VALUE = 58;
    /**
     * <pre>
     * S_PASS
     * </pre>
     *
     * <code>DOCUMENT_TYPE_S_PASS = 59;</code>
     */
    public static final int DOCUMENT_TYPE_S_PASS_VALUE = 59;
    /**
     * <pre>
     * TAX_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMENT = 60;</code>
     */
    public static final int DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMENT_VALUE = 60;
    /**
     * <pre>
     * TEMPORARY_PROTECTION_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TEMPORARY_PROTECTION_PERMIT = 61;</code>
     */
    public static final int DOCUMENT_TYPE_TEMPORARY_PROTECTION_PERMIT_VALUE = 61;
    /**
     * <pre>
     * TEMPORARY_RESIDENCE_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TEMPORARY_RESIDENCE_PERMIT = 62;</code>
     */
    public static final int DOCUMENT_TYPE_TEMPORARY_RESIDENCE_PERMIT_VALUE = 62;
    /**
     * <pre>
     * TRIBAL_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TRIBAL_IDENTIFICATION_DOCUMENT = 63;</code>
     */
    public static final int DOCUMENT_TYPE_TRIBAL_IDENTIFICATION_DOCUMENT_VALUE = 63;
    /**
     * <pre>
     * TWIC_CARD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_TWIC_CARD = 64;</code>
     */
    public static final int DOCUMENT_TYPE_TWIC_CARD_VALUE = 64;
    /**
     * <pre>
     * UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT = 65;</code>
     */
    public static final int DOCUMENT_TYPE_UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT_VALUE = 65;
    /**
     * <pre>
     * VETERAN_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DOCUMENT = 66;</code>
     */
    public static final int DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DOCUMENT_VALUE = 66;
    /**
     * <pre>
     * VISA
     * </pre>
     *
     * <code>DOCUMENT_TYPE_VISA = 67;</code>
     */
    public static final int DOCUMENT_TYPE_VISA_VALUE = 67;
    /**
     * <pre>
     * VOTER_IDENTIFICATION_DOCUMENT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT = 68;</code>
     */
    public static final int DOCUMENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT_VALUE = 68;
    /**
     * <pre>
     * WEAPON_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_WEAPON_PERMIT = 69;</code>
     */
    public static final int DOCUMENT_TYPE_WEAPON_PERMIT_VALUE = 69;
    /**
     * <pre>
     * WORK_PERMIT
     * </pre>
     *
     * <code>DOCUMENT_TYPE_WORK_PERMIT = 70;</code>
     */
    public static final int DOCUMENT_TYPE_WORK_PERMIT_VALUE = 70;
    /**
     * <pre>
     * iKAD
     * </pre>
     *
     * <code>DOCUMENT_TYPE_IKAD = 71;</code>
     */
    public static final int DOCUMENT_TYPE_IKAD_VALUE = 71;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DocumentType valueOf(int value) {
      return forNumber(value);
    }

    /**
     * @param value The numeric wire value of the corresponding enum entry.
     * @return The enum associated with the given numeric wire value.
     */
    public static DocumentType forNumber(int value) {
      switch (value) {
        case 0: return DOCUMENT_TYPE_NOT_AVAILABLE;
        case 1: return DOCUMENT_TYPE_ADDRESS_CARD;
        case 2: return DOCUMENT_TYPE_ALIEN_IDENTIFICATION_DOCUMENT;
        case 3: return DOCUMENT_TYPE_ASYLUM_SEEKER_CARD;
        case 4: return DOCUMENT_TYPE_BORDER_CROSSING_CARD;
        case 5: return DOCUMENT_TYPE_CITIZENSHIP_CERTIFICATE;
        case 6: return DOCUMENT_TYPE_CONSULAR_IDENTIFICATION_DOCUMENT;
        case 7: return DOCUMENT_TYPE_CONSULAR_PASSPORT;
        case 8: return DOCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATION_DOCUMENT;
        case 9: return DOCUMENT_TYPE_DRIVERS_LICENSE;
        case 10: return DOCUMENT_TYPE_DRIVERS_LICENSE_AND_SERVICES_CARD;
        case 11: return DOCUMENT_TYPE_DRIVER_CARD;
        case 12: return DOCUMENT_TYPE_DRIVER_PRIVILEGE_CARD;
        case 13: return DOCUMENT_TYPE_DRIVER_QUALIFICATION_CARD;
        case 14: return DOCUMENT_TYPE_EMPLOYMENT_PASS;
        case 15: return DOCUMENT_TYPE_EXIT_ENTRY_PERMIT;
        case 16: return DOCUMENT_TYPE_E_ID;
        case 17: return DOCUMENT_TYPE_FIN_CARD;
        case 18: return DOCUMENT_TYPE_GLOBAL_ENTRY_CARD;
        case 19: return DOCUMENT_TYPE_GREEN_CARD;
        case 20: return DOCUMENT_TYPE_HEALTH_INSURANCE_CARD;
        case 21: return DOCUMENT_TYPE_IDENTIFICATION_DOCUMENT;
        case 22: return DOCUMENT_TYPE_IMMIGRANT_VISA;
        case 23: return DOCUMENT_TYPE_INDIVIDUAL_NUMBER_CARD;
        case 24: return DOCUMENT_TYPE_INTERNAL_PASSPORT;
        case 25: return DOCUMENT_TYPE_MAINLAND_TRAVEL_PERMIT_TAIWAN;
        case 26: return DOCUMENT_TYPE_MILITARY_IDENTIFICATION_DOCUMENT;
        case 27: return DOCUMENT_TYPE_MINORS_IDENTIFICATION_DOCUMENT;
        case 28: return DOCUMENT_TYPE_MINORS_PASSPORT;
        case 29: return DOCUMENT_TYPE_MINORS_SERVICES_CARD;
        case 30: return DOCUMENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_DOCUMENT;
        case 31: return DOCUMENT_TYPE_MY_KAD;
        case 32: return DOCUMENT_TYPE_MY_KAS;
        case 33: return DOCUMENT_TYPE_MY_KID;
        case 34: return DOCUMENT_TYPE_MY_POLIS;
        case 35: return DOCUMENT_TYPE_MY_PR;
        case 36: return DOCUMENT_TYPE_MY_TENTERA;
        case 37: return DOCUMENT_TYPE_NBI_CLEARANCE_DOCUMENT;
        case 38: return DOCUMENT_TYPE_NEXT_GEN_ALIEN_PASSPORT;
        case 39: return DOCUMENT_TYPE_NEXT_GEN_PASSPORT;
        case 40: return DOCUMENT_TYPE_NEXT_GEN_REFUGEE_PASSPORT;
        case 41: return DOCUMENT_TYPE_NEXUS_CARD;
        case 42: return DOCUMENT_TYPE_PASS;
        case 43: return DOCUMENT_TYPE_PASSPORT;
        case 44: return DOCUMENT_TYPE_PASSPORT_CARD;
        case 45: return DOCUMENT_TYPE_PERMANENT_ACCOUNT_NUMBER_CARD;
        case 46: return DOCUMENT_TYPE_POSTAL_IDENTIFICATION_DOCUMENT;
        case 47: return DOCUMENT_TYPE_PROFESSIONAL_CARD;
        case 48: return DOCUMENT_TYPE_PROFESSIONAL_DRIVERS_LICENSE;
        case 49: return DOCUMENT_TYPE_PROOF_OF_AGE_CARD;
        case 50: return DOCUMENT_TYPE_PROOF_OF_REGISTRATION;
        case 51: return DOCUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE;
        case 52: return DOCUMENT_TYPE_REFUGEE_IDENTIFICATION_DOCUMENT;
        case 53: return DOCUMENT_TYPE_RESIDENCE_PERMIT;
        case 54: return DOCUMENT_TYPE_RESIDENT_IDENTIFICATION_DOCUMENT;
        case 55: return DOCUMENT_TYPE_SERVICES_CARD;
        case 56: return DOCUMENT_TYPE_SIS_ID;
        case 57: return DOCUMENT_TYPE_SOCIAL_SECURITY_CARD;
        case 58: return DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_DOCUMENT;
        case 59: return DOCUMENT_TYPE_S_PASS;
        case 60: return DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMENT;
        case 61: return DOCUMENT_TYPE_TEMPORARY_PROTECTION_PERMIT;
        case 62: return DOCUMENT_TYPE_TEMPORARY_RESIDENCE_PERMIT;
        case 63: return DOCUMENT_TYPE_TRIBAL_IDENTIFICATION_DOCUMENT;
        case 64: return DOCUMENT_TYPE_TWIC_CARD;
        case 65: return DOCUMENT_TYPE_UNIFORMED_SERVICES_IDENTIFICATION_DOCUMENT;
        case 66: return DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DOCUMENT;
        case 67: return DOCUMENT_TYPE_VISA;
        case 68: return DOCUMENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT;
        case 69: return DOCUMENT_TYPE_WEAPON_PERMIT;
        case 70: return DOCUMENT_TYPE_WORK_PERMIT;
        case 71: return DOCUMENT_TYPE_IKAD;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DocumentType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DocumentType> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DocumentType>() {
            public DocumentType findValueByNumber(int number) {
              return DocumentType.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalStateException(
            "Can't get the descriptor of an unrecognized enum value.");
      }
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return proto.ddx.v1.DocumentTypesEnum.getDescriptor().getEnumTypes().get(0);
    }

    private static final DocumentType[] VALUES = values();

    public static DocumentType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DocumentType(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:proto.ddx.v1.DocumentType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n&proto/ddx/v1/document_types_enum.proto" +
      "\022\014proto.ddx.v1*\220\026\n\014DocumentType\022\037\n\033DOCUM" +
      "ENT_TYPE_NOT_AVAILABLE\020\000\022\036\n\032DOCUMENT_TYP" +
      "E_ADDRESS_CARD\020\001\022/\n+DOCUMENT_TYPE_ALIEN_" +
      "IDENTIFICATION_DOCUMENT\020\002\022$\n DOCUMENT_TY" +
      "PE_ASYLUM_SEEKER_CARD\020\003\022&\n\"DOCUMENT_TYPE" +
      "_BORDER_CROSSING_CARD\020\004\022)\n%DOCUMENT_TYPE" +
      "_CITIZENSHIP_CERTIFICATE\020\005\0222\n.DOCUMENT_T" +
      "YPE_CONSULAR_IDENTIFICATION_DOCUMENT\020\006\022#" +
      "\n\037DOCUMENT_TYPE_CONSULAR_PASSPORT\020\007\0228\n4D" +
      "OCUMENT_TYPE_CONSULAR_VOTER_IDENTIFICATI" +
      "ON_DOCUMENT\020\010\022!\n\035DOCUMENT_TYPE_DRIVERS_L" +
      "ICENSE\020\t\0223\n/DOCUMENT_TYPE_DRIVERS_LICENS" +
      "E_AND_SERVICES_CARD\020\n\022\035\n\031DOCUMENT_TYPE_D" +
      "RIVER_CARD\020\013\022\'\n#DOCUMENT_TYPE_DRIVER_PRI" +
      "VILEGE_CARD\020\014\022+\n\'DOCUMENT_TYPE_DRIVER_QU" +
      "ALIFICATION_CARD\020\r\022!\n\035DOCUMENT_TYPE_EMPL" +
      "OYMENT_PASS\020\016\022#\n\037DOCUMENT_TYPE_EXIT_ENTR" +
      "Y_PERMIT\020\017\022\026\n\022DOCUMENT_TYPE_E_ID\020\020\022\032\n\026DO" +
      "CUMENT_TYPE_FIN_CARD\020\021\022#\n\037DOCUMENT_TYPE_" +
      "GLOBAL_ENTRY_CARD\020\022\022\034\n\030DOCUMENT_TYPE_GRE" +
      "EN_CARD\020\023\022\'\n#DOCUMENT_TYPE_HEALTH_INSURA" +
      "NCE_CARD\020\024\022)\n%DOCUMENT_TYPE_IDENTIFICATI" +
      "ON_DOCUMENT\020\025\022 \n\034DOCUMENT_TYPE_IMMIGRANT" +
      "_VISA\020\026\022(\n$DOCUMENT_TYPE_INDIVIDUAL_NUMB" +
      "ER_CARD\020\027\022#\n\037DOCUMENT_TYPE_INTERNAL_PASS" +
      "PORT\020\030\022/\n+DOCUMENT_TYPE_MAINLAND_TRAVEL_" +
      "PERMIT_TAIWAN\020\031\0222\n.DOCUMENT_TYPE_MILITAR" +
      "Y_IDENTIFICATION_DOCUMENT\020\032\0220\n,DOCUMENT_" +
      "TYPE_MINORS_IDENTIFICATION_DOCUMENT\020\033\022!\n" +
      "\035DOCUMENT_TYPE_MINORS_PASSPORT\020\034\022&\n\"DOCU" +
      "MENT_TYPE_MINORS_SERVICES_CARD\020\035\0227\n3DOCU" +
      "MENT_TYPE_MULTI_PURPOSE_IDENTIFICATION_D" +
      "OCUMENT\020\036\022\030\n\024DOCUMENT_TYPE_MY_KAD\020\037\022\030\n\024D" +
      "OCUMENT_TYPE_MY_KAS\020 \022\030\n\024DOCUMENT_TYPE_M" +
      "Y_KID\020!\022\032\n\026DOCUMENT_TYPE_MY_POLIS\020\"\022\027\n\023D" +
      "OCUMENT_TYPE_MY_PR\020#\022\034\n\030DOCUMENT_TYPE_MY" +
      "_TENTERA\020$\022(\n$DOCUMENT_TYPE_NBI_CLEARANC" +
      "E_DOCUMENT\020%\022)\n%DOCUMENT_TYPE_NEXT_GEN_A" +
      "LIEN_PASSPORT\020&\022#\n\037DOCUMENT_TYPE_NEXT_GE" +
      "N_PASSPORT\020\'\022+\n\'DOCUMENT_TYPE_NEXT_GEN_R" +
      "EFUGEE_PASSPORT\020(\022\034\n\030DOCUMENT_TYPE_NEXUS" +
      "_CARD\020)\022\026\n\022DOCUMENT_TYPE_PASS\020*\022\032\n\026DOCUM" +
      "ENT_TYPE_PASSPORT\020+\022\037\n\033DOCUMENT_TYPE_PAS" +
      "SPORT_CARD\020,\022/\n+DOCUMENT_TYPE_PERMANENT_" +
      "ACCOUNT_NUMBER_CARD\020-\0220\n,DOCUMENT_TYPE_P" +
      "OSTAL_IDENTIFICATION_DOCUMENT\020.\022#\n\037DOCUM" +
      "ENT_TYPE_PROFESSIONAL_CARD\020/\022.\n*DOCUMENT" +
      "_TYPE_PROFESSIONAL_DRIVERS_LICENSE\0200\022#\n\037" +
      "DOCUMENT_TYPE_PROOF_OF_AGE_CARD\0201\022\'\n#DOC" +
      "UMENT_TYPE_PROOF_OF_REGISTRATION\0202\022-\n)DO" +
      "CUMENT_TYPE_PROVISIONAL_DRIVERS_LICENSE\020" +
      "3\0221\n-DOCUMENT_TYPE_REFUGEE_IDENTIFICATIO" +
      "N_DOCUMENT\0204\022\"\n\036DOCUMENT_TYPE_RESIDENCE_" +
      "PERMIT\0205\0222\n.DOCUMENT_TYPE_RESIDENT_IDENT" +
      "IFICATION_DOCUMENT\0206\022\037\n\033DOCUMENT_TYPE_SE" +
      "RVICES_CARD\0207\022\030\n\024DOCUMENT_TYPE_SIS_ID\0208\022" +
      "&\n\"DOCUMENT_TYPE_SOCIAL_SECURITY_CARD\0209\022" +
      "1\n-DOCUMENT_TYPE_SPECIAL_IDENTIFICATION_" +
      "DOCUMENT\020:\022\030\n\024DOCUMENT_TYPE_S_PASS\020;\022-\n)" +
      "DOCUMENT_TYPE_TAX_IDENTIFICATION_DOCUMEN" +
      "T\020<\022-\n)DOCUMENT_TYPE_TEMPORARY_PROTECTIO" +
      "N_PERMIT\020=\022,\n(DOCUMENT_TYPE_TEMPORARY_RE" +
      "SIDENCE_PERMIT\020>\0220\n,DOCUMENT_TYPE_TRIBAL" +
      "_IDENTIFICATION_DOCUMENT\020?\022\033\n\027DOCUMENT_T" +
      "YPE_TWIC_CARD\020@\022<\n8DOCUMENT_TYPE_UNIFORM" +
      "ED_SERVICES_IDENTIFICATION_DOCUMENT\020A\0221\n" +
      "-DOCUMENT_TYPE_VETERAN_IDENTIFICATION_DO" +
      "CUMENT\020B\022\026\n\022DOCUMENT_TYPE_VISA\020C\022/\n+DOCU" +
      "MENT_TYPE_VOTER_IDENTIFICATION_DOCUMENT\020" +
      "D\022\037\n\033DOCUMENT_TYPE_WEAPON_PERMIT\020E\022\035\n\031DO" +
      "CUMENT_TYPE_WORK_PERMIT\020F\022\026\n\022DOCUMENT_TY" +
      "PE_IKAD\020GB4Z2github.com/veridil/id-extra" +
      "ct-service/proto/ddx/v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    descriptor.resolveAllFeaturesImmutable();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
