// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: proto/ddx/v1/service.proto
// Protobuf Java Version: 4.28.2

package proto.ddx.v1;

public final class Service {
  private Service() {}
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 28,
      /* patch= */ 2,
      /* suffix= */ "",
      Service.class.getName());
  }
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface DocumentClassOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.DocumentClass)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Document type
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
     * @return The enum numeric value on the wire for type.
     */
    int getTypeValue();
    /**
     * <pre>
     * Document type
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
     * @return The type.
     */
    proto.ddx.v1.DocumentTypesEnum.DocumentType getType();

    /**
     * <pre>
     * Country
     * </pre>
     *
     * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
     * @return The enum numeric value on the wire for country.
     */
    int getCountryValue();
    /**
     * <pre>
     * Country
     * </pre>
     *
     * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
     * @return The country.
     */
    proto.ddx.v1.CountriesEnum.Country getCountry();

    /**
     * <pre>
     * Territory
     * </pre>
     *
     * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
     * @return The enum numeric value on the wire for territory.
     */
    int getTerritoryValue();
    /**
     * <pre>
     * Territory
     * </pre>
     *
     * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
     * @return The territory.
     */
    proto.ddx.v1.TerritoryEnum.Territory getTerritory();
  }
  /**
   * <pre>
   * DocumentClass
   * </pre>
   *
   * Protobuf type {@code proto.ddx.v1.DocumentClass}
   */
  public static final class DocumentClass extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.DocumentClass)
      DocumentClassOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DocumentClass.class.getName());
    }
    // Use DocumentClass.newBuilder() to construct.
    private DocumentClass(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DocumentClass() {
      type_ = 0;
      country_ = 0;
      territory_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentClass_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentClass_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.DocumentClass.class, proto.ddx.v1.Service.DocumentClass.Builder.class);
    }

    public static final int TYPE_FIELD_NUMBER = 3;
    private int type_ = 0;
    /**
     * <pre>
     * Document type
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
     * @return The enum numeric value on the wire for type.
     */
    @java.lang.Override public int getTypeValue() {
      return type_;
    }
    /**
     * <pre>
     * Document type
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
     * @return The type.
     */
    @java.lang.Override public proto.ddx.v1.DocumentTypesEnum.DocumentType getType() {
      proto.ddx.v1.DocumentTypesEnum.DocumentType result = proto.ddx.v1.DocumentTypesEnum.DocumentType.forNumber(type_);
      return result == null ? proto.ddx.v1.DocumentTypesEnum.DocumentType.UNRECOGNIZED : result;
    }

    public static final int COUNTRY_FIELD_NUMBER = 4;
    private int country_ = 0;
    /**
     * <pre>
     * Country
     * </pre>
     *
     * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
     * @return The enum numeric value on the wire for country.
     */
    @java.lang.Override public int getCountryValue() {
      return country_;
    }
    /**
     * <pre>
     * Country
     * </pre>
     *
     * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
     * @return The country.
     */
    @java.lang.Override public proto.ddx.v1.CountriesEnum.Country getCountry() {
      proto.ddx.v1.CountriesEnum.Country result = proto.ddx.v1.CountriesEnum.Country.forNumber(country_);
      return result == null ? proto.ddx.v1.CountriesEnum.Country.UNRECOGNIZED : result;
    }

    public static final int TERRITORY_FIELD_NUMBER = 5;
    private int territory_ = 0;
    /**
     * <pre>
     * Territory
     * </pre>
     *
     * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
     * @return The enum numeric value on the wire for territory.
     */
    @java.lang.Override public int getTerritoryValue() {
      return territory_;
    }
    /**
     * <pre>
     * Territory
     * </pre>
     *
     * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
     * @return The territory.
     */
    @java.lang.Override public proto.ddx.v1.TerritoryEnum.Territory getTerritory() {
      proto.ddx.v1.TerritoryEnum.Territory result = proto.ddx.v1.TerritoryEnum.Territory.forNumber(territory_);
      return result == null ? proto.ddx.v1.TerritoryEnum.Territory.UNRECOGNIZED : result;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (type_ != proto.ddx.v1.DocumentTypesEnum.DocumentType.DOCUMENT_TYPE_NOT_AVAILABLE.getNumber()) {
        output.writeEnum(3, type_);
      }
      if (country_ != proto.ddx.v1.CountriesEnum.Country.COUNTRY_NOT_AVAILABLE.getNumber()) {
        output.writeEnum(4, country_);
      }
      if (territory_ != proto.ddx.v1.TerritoryEnum.Territory.TERRITORY_NOT_AVAILABLE.getNumber()) {
        output.writeEnum(5, territory_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (type_ != proto.ddx.v1.DocumentTypesEnum.DocumentType.DOCUMENT_TYPE_NOT_AVAILABLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, type_);
      }
      if (country_ != proto.ddx.v1.CountriesEnum.Country.COUNTRY_NOT_AVAILABLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, country_);
      }
      if (territory_ != proto.ddx.v1.TerritoryEnum.Territory.TERRITORY_NOT_AVAILABLE.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, territory_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.DocumentClass)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.DocumentClass other = (proto.ddx.v1.Service.DocumentClass) obj;

      if (type_ != other.type_) return false;
      if (country_ != other.country_) return false;
      if (territory_ != other.territory_) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + TYPE_FIELD_NUMBER;
      hash = (53 * hash) + type_;
      hash = (37 * hash) + COUNTRY_FIELD_NUMBER;
      hash = (53 * hash) + country_;
      hash = (37 * hash) + TERRITORY_FIELD_NUMBER;
      hash = (53 * hash) + territory_;
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.DocumentClass parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.DocumentClass parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.DocumentClass parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.DocumentClass parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.DocumentClass prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * DocumentClass
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.DocumentClass}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.DocumentClass)
        proto.ddx.v1.Service.DocumentClassOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentClass_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentClass_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.DocumentClass.class, proto.ddx.v1.Service.DocumentClass.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.DocumentClass.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        type_ = 0;
        country_ = 0;
        territory_ = 0;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentClass_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.DocumentClass getDefaultInstanceForType() {
        return proto.ddx.v1.Service.DocumentClass.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.DocumentClass build() {
        proto.ddx.v1.Service.DocumentClass result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.DocumentClass buildPartial() {
        proto.ddx.v1.Service.DocumentClass result = new proto.ddx.v1.Service.DocumentClass(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.ddx.v1.Service.DocumentClass result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.type_ = type_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.country_ = country_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.territory_ = territory_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.DocumentClass) {
          return mergeFrom((proto.ddx.v1.Service.DocumentClass)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.DocumentClass other) {
        if (other == proto.ddx.v1.Service.DocumentClass.getDefaultInstance()) return this;
        if (other.type_ != 0) {
          setTypeValue(other.getTypeValue());
        }
        if (other.country_ != 0) {
          setCountryValue(other.getCountryValue());
        }
        if (other.territory_ != 0) {
          setTerritoryValue(other.getTerritoryValue());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 24: {
                type_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 24
              case 32: {
                country_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 32
              case 40: {
                territory_ = input.readEnum();
                bitField0_ |= 0x00000004;
                break;
              } // case 40
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int type_ = 0;
      /**
       * <pre>
       * Document type
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
       * @return The enum numeric value on the wire for type.
       */
      @java.lang.Override public int getTypeValue() {
        return type_;
      }
      /**
       * <pre>
       * Document type
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
       * @param value The enum numeric value on the wire for type to set.
       * @return This builder for chaining.
       */
      public Builder setTypeValue(int value) {
        type_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Document type
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
       * @return The type.
       */
      @java.lang.Override
      public proto.ddx.v1.DocumentTypesEnum.DocumentType getType() {
        proto.ddx.v1.DocumentTypesEnum.DocumentType result = proto.ddx.v1.DocumentTypesEnum.DocumentType.forNumber(type_);
        return result == null ? proto.ddx.v1.DocumentTypesEnum.DocumentType.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Document type
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
       * @param value The type to set.
       * @return This builder for chaining.
       */
      public Builder setType(proto.ddx.v1.DocumentTypesEnum.DocumentType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Document type
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentType type = 3 [json_name = "type"];</code>
       * @return This builder for chaining.
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = 0;
        onChanged();
        return this;
      }

      private int country_ = 0;
      /**
       * <pre>
       * Country
       * </pre>
       *
       * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
       * @return The enum numeric value on the wire for country.
       */
      @java.lang.Override public int getCountryValue() {
        return country_;
      }
      /**
       * <pre>
       * Country
       * </pre>
       *
       * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
       * @param value The enum numeric value on the wire for country to set.
       * @return This builder for chaining.
       */
      public Builder setCountryValue(int value) {
        country_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Country
       * </pre>
       *
       * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
       * @return The country.
       */
      @java.lang.Override
      public proto.ddx.v1.CountriesEnum.Country getCountry() {
        proto.ddx.v1.CountriesEnum.Country result = proto.ddx.v1.CountriesEnum.Country.forNumber(country_);
        return result == null ? proto.ddx.v1.CountriesEnum.Country.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Country
       * </pre>
       *
       * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
       * @param value The country to set.
       * @return This builder for chaining.
       */
      public Builder setCountry(proto.ddx.v1.CountriesEnum.Country value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        country_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Country
       * </pre>
       *
       * <code>.proto.ddx.v1.Country country = 4 [json_name = "country"];</code>
       * @return This builder for chaining.
       */
      public Builder clearCountry() {
        bitField0_ = (bitField0_ & ~0x00000002);
        country_ = 0;
        onChanged();
        return this;
      }

      private int territory_ = 0;
      /**
       * <pre>
       * Territory
       * </pre>
       *
       * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
       * @return The enum numeric value on the wire for territory.
       */
      @java.lang.Override public int getTerritoryValue() {
        return territory_;
      }
      /**
       * <pre>
       * Territory
       * </pre>
       *
       * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
       * @param value The enum numeric value on the wire for territory to set.
       * @return This builder for chaining.
       */
      public Builder setTerritoryValue(int value) {
        territory_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Territory
       * </pre>
       *
       * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
       * @return The territory.
       */
      @java.lang.Override
      public proto.ddx.v1.TerritoryEnum.Territory getTerritory() {
        proto.ddx.v1.TerritoryEnum.Territory result = proto.ddx.v1.TerritoryEnum.Territory.forNumber(territory_);
        return result == null ? proto.ddx.v1.TerritoryEnum.Territory.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Territory
       * </pre>
       *
       * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
       * @param value The territory to set.
       * @return This builder for chaining.
       */
      public Builder setTerritory(proto.ddx.v1.TerritoryEnum.Territory value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        territory_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Territory
       * </pre>
       *
       * <code>.proto.ddx.v1.Territory territory = 5 [json_name = "territory"];</code>
       * @return This builder for chaining.
       */
      public Builder clearTerritory() {
        bitField0_ = (bitField0_ & ~0x00000004);
        territory_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.DocumentClass)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.DocumentClass)
    private static final proto.ddx.v1.Service.DocumentClass DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.DocumentClass();
    }

    public static proto.ddx.v1.Service.DocumentClass getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DocumentClass>
        PARSER = new com.google.protobuf.AbstractParser<DocumentClass>() {
      @java.lang.Override
      public DocumentClass parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DocumentClass> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DocumentClass> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.DocumentClass getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScanConfigOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanConfig)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * returnDetectedImage - must be set if you want server to return the image of the detected document.
     * used to specify to the server to return detected document
     * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
     * this due to its computational and data overhead.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
     * @return Whether the returnDocumentImage field is set.
     */
    boolean hasReturnDocumentImage();
    /**
     * <pre>
     * returnDetectedImage - must be set if you want server to return the image of the detected document.
     * used to specify to the server to return detected document
     * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
     * this due to its computational and data overhead.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
     * @return The returnDocumentImage.
     */
    proto.ddx.v1.Service.ScanConfig.ReturnImage getReturnDocumentImage();
    /**
     * <pre>
     * returnDetectedImage - must be set if you want server to return the image of the detected document.
     * used to specify to the server to return detected document
     * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
     * this due to its computational and data overhead.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
     */
    proto.ddx.v1.Service.ScanConfig.ReturnImageOrBuilder getReturnDocumentImageOrBuilder();

    /**
     * <pre>
     * returnFieldImages - must be set if you want server to return the images of the detected text fields.
     * leaving this empty means that server will NOT return any text field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
     * @return Whether the returnTextFieldImages field is set.
     */
    boolean hasReturnTextFieldImages();
    /**
     * <pre>
     * returnFieldImages - must be set if you want server to return the images of the detected text fields.
     * leaving this empty means that server will NOT return any text field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
     * @return The returnTextFieldImages.
     */
    proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages getReturnTextFieldImages();
    /**
     * <pre>
     * returnFieldImages - must be set if you want server to return the images of the detected text fields.
     * leaving this empty means that server will NOT return any text field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
     */
    proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImagesOrBuilder getReturnTextFieldImagesOrBuilder();

    /**
     * <pre>
     * returnVisualFields - specify visual fields to return.
     * if left empty, NO visual fields will be returned.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
     * @return Whether the returnVisualFields field is set.
     */
    boolean hasReturnVisualFields();
    /**
     * <pre>
     * returnVisualFields - specify visual fields to return.
     * if left empty, NO visual fields will be returned.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
     * @return The returnVisualFields.
     */
    proto.ddx.v1.Service.ScanConfig.ReturnVisualFields getReturnVisualFields();
    /**
     * <pre>
     * returnVisualFields - specify visual fields to return.
     * if left empty, NO visual fields will be returned.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
     */
    proto.ddx.v1.Service.ScanConfig.ReturnVisualFieldsOrBuilder getReturnVisualFieldsOrBuilder();

    /**
     * <pre>
     * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
     * leaving this empty means that server will NOT return any date field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
     * @return Whether the returnDateFieldImages field is set.
     */
    boolean hasReturnDateFieldImages();
    /**
     * <pre>
     * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
     * leaving this empty means that server will NOT return any date field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
     * @return The returnDateFieldImages.
     */
    proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages getReturnDateFieldImages();
    /**
     * <pre>
     * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
     * leaving this empty means that server will NOT return any date field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
     */
    proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImagesOrBuilder getReturnDateFieldImagesOrBuilder();

    /**
     * <pre>
     * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
     * leaving this empty means that server will NOT return any sex field images (text and enum only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
     * @return Whether the returnSexFieldImages field is set.
     */
    boolean hasReturnSexFieldImages();
    /**
     * <pre>
     * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
     * leaving this empty means that server will NOT return any sex field images (text and enum only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
     * @return The returnSexFieldImages.
     */
    proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages getReturnSexFieldImages();
    /**
     * <pre>
     * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
     * leaving this empty means that server will NOT return any sex field images (text and enum only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
     */
    proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImagesOrBuilder getReturnSexFieldImagesOrBuilder();

    /**
     * <pre>
     * skipDocumentDetection - if you want to "skip" document detection, set this to true.
     * if you already have a full-size image of a document (or already cropped image of a document)
     * set this to true.
     * </pre>
     *
     * <code>bool skipDocumentDetection = 6 [json_name = "skipDocumentDetection"];</code>
     * @return The skipDocumentDetection.
     */
    boolean getSkipDocumentDetection();
  }
  /**
   * <pre>
   * ScanConfig - used to define if you want server to return the detected document
   * image as well as the images of different detected fields.
   * </pre>
   *
   * Protobuf type {@code proto.ddx.v1.ScanConfig}
   */
  public static final class ScanConfig extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanConfig)
      ScanConfigOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ScanConfig.class.getName());
    }
    // Use ScanConfig.newBuilder() to construct.
    private ScanConfig(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ScanConfig() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.ScanConfig.class, proto.ddx.v1.Service.ScanConfig.Builder.class);
    }

    public interface ImgResolutionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanConfig.ImgResolution)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * width or "columns" of an image.
       * </pre>
       *
       * <code>uint32 width = 1 [json_name = "width"];</code>
       * @return The width.
       */
      int getWidth();

      /**
       * <pre>
       * height or "rows" of an image.
       * </pre>
       *
       * <code>uint32 height = 2 [json_name = "height"];</code>
       * @return The height.
       */
      int getHeight();
    }
    /**
     * <pre>
     * ImgResolution - used to define the resolution of the returning image. 
     * If only one dimension is set (only one of height or width) the other will be
     * computed whilst maintaining the detections aspect ratio.
     * Max target resolution is bound by input image resolution (won't upscale the detected image
     * if you specified resolution greater then input image).
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.ScanConfig.ImgResolution}
     */
    public static final class ImgResolution extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanConfig.ImgResolution)
        ImgResolutionOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          ImgResolution.class.getName());
      }
      // Use ImgResolution.newBuilder() to construct.
      private ImgResolution(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ImgResolution() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ImgResolution_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ImgResolution_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanConfig.ImgResolution.class, proto.ddx.v1.Service.ScanConfig.ImgResolution.Builder.class);
      }

      public static final int WIDTH_FIELD_NUMBER = 1;
      private int width_ = 0;
      /**
       * <pre>
       * width or "columns" of an image.
       * </pre>
       *
       * <code>uint32 width = 1 [json_name = "width"];</code>
       * @return The width.
       */
      @java.lang.Override
      public int getWidth() {
        return width_;
      }

      public static final int HEIGHT_FIELD_NUMBER = 2;
      private int height_ = 0;
      /**
       * <pre>
       * height or "rows" of an image.
       * </pre>
       *
       * <code>uint32 height = 2 [json_name = "height"];</code>
       * @return The height.
       */
      @java.lang.Override
      public int getHeight() {
        return height_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (width_ != 0) {
          output.writeUInt32(1, width_);
        }
        if (height_ != 0) {
          output.writeUInt32(2, height_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (width_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, width_);
        }
        if (height_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, height_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.ddx.v1.Service.ScanConfig.ImgResolution)) {
          return super.equals(obj);
        }
        proto.ddx.v1.Service.ScanConfig.ImgResolution other = (proto.ddx.v1.Service.ScanConfig.ImgResolution) obj;

        if (getWidth()
            != other.getWidth()) return false;
        if (getHeight()
            != other.getHeight()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + WIDTH_FIELD_NUMBER;
        hash = (53 * hash) + getWidth();
        hash = (37 * hash) + HEIGHT_FIELD_NUMBER;
        hash = (53 * hash) + getHeight();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ImgResolution parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.ddx.v1.Service.ScanConfig.ImgResolution prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * ImgResolution - used to define the resolution of the returning image. 
       * If only one dimension is set (only one of height or width) the other will be
       * computed whilst maintaining the detections aspect ratio.
       * Max target resolution is bound by input image resolution (won't upscale the detected image
       * if you specified resolution greater then input image).
       * </pre>
       *
       * Protobuf type {@code proto.ddx.v1.ScanConfig.ImgResolution}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanConfig.ImgResolution)
          proto.ddx.v1.Service.ScanConfig.ImgResolutionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ImgResolution_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ImgResolution_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.ddx.v1.Service.ScanConfig.ImgResolution.class, proto.ddx.v1.Service.ScanConfig.ImgResolution.Builder.class);
        }

        // Construct using proto.ddx.v1.Service.ScanConfig.ImgResolution.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          width_ = 0;
          height_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ImgResolution_descriptor;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ImgResolution getDefaultInstanceForType() {
          return proto.ddx.v1.Service.ScanConfig.ImgResolution.getDefaultInstance();
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ImgResolution build() {
          proto.ddx.v1.Service.ScanConfig.ImgResolution result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ImgResolution buildPartial() {
          proto.ddx.v1.Service.ScanConfig.ImgResolution result = new proto.ddx.v1.Service.ScanConfig.ImgResolution(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(proto.ddx.v1.Service.ScanConfig.ImgResolution result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.width_ = width_;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.height_ = height_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.ddx.v1.Service.ScanConfig.ImgResolution) {
            return mergeFrom((proto.ddx.v1.Service.ScanConfig.ImgResolution)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.ddx.v1.Service.ScanConfig.ImgResolution other) {
          if (other == proto.ddx.v1.Service.ScanConfig.ImgResolution.getDefaultInstance()) return this;
          if (other.getWidth() != 0) {
            setWidth(other.getWidth());
          }
          if (other.getHeight() != 0) {
            setHeight(other.getHeight());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  width_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 16: {
                  height_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int width_ ;
        /**
         * <pre>
         * width or "columns" of an image.
         * </pre>
         *
         * <code>uint32 width = 1 [json_name = "width"];</code>
         * @return The width.
         */
        @java.lang.Override
        public int getWidth() {
          return width_;
        }
        /**
         * <pre>
         * width or "columns" of an image.
         * </pre>
         *
         * <code>uint32 width = 1 [json_name = "width"];</code>
         * @param value The width to set.
         * @return This builder for chaining.
         */
        public Builder setWidth(int value) {

          width_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * width or "columns" of an image.
         * </pre>
         *
         * <code>uint32 width = 1 [json_name = "width"];</code>
         * @return This builder for chaining.
         */
        public Builder clearWidth() {
          bitField0_ = (bitField0_ & ~0x00000001);
          width_ = 0;
          onChanged();
          return this;
        }

        private int height_ ;
        /**
         * <pre>
         * height or "rows" of an image.
         * </pre>
         *
         * <code>uint32 height = 2 [json_name = "height"];</code>
         * @return The height.
         */
        @java.lang.Override
        public int getHeight() {
          return height_;
        }
        /**
         * <pre>
         * height or "rows" of an image.
         * </pre>
         *
         * <code>uint32 height = 2 [json_name = "height"];</code>
         * @param value The height to set.
         * @return This builder for chaining.
         */
        public Builder setHeight(int value) {

          height_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * height or "rows" of an image.
         * </pre>
         *
         * <code>uint32 height = 2 [json_name = "height"];</code>
         * @return This builder for chaining.
         */
        public Builder clearHeight() {
          bitField0_ = (bitField0_ & ~0x00000002);
          height_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanConfig.ImgResolution)
      }

      // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanConfig.ImgResolution)
      private static final proto.ddx.v1.Service.ScanConfig.ImgResolution DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanConfig.ImgResolution();
      }

      public static proto.ddx.v1.Service.ScanConfig.ImgResolution getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ImgResolution>
          PARSER = new com.google.protobuf.AbstractParser<ImgResolution>() {
        @java.lang.Override
        public ImgResolution parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ImgResolution> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ImgResolution> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig.ImgResolution getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ReturnImageOrBuilder extends
        // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanConfig.ReturnImage)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * the resolution you want the returning image to have. If left empty we use predefined server value.
       * if the resolution is greater then the available input image, we do not upscale the result, but
       * rather use the largest possible resolution available in your input image.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
       * @return Whether the targetResolution field is set.
       */
      boolean hasTargetResolution();
      /**
       * <pre>
       * the resolution you want the returning image to have. If left empty we use predefined server value.
       * if the resolution is greater then the available input image, we do not upscale the result, but
       * rather use the largest possible resolution available in your input image.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
       * @return The targetResolution.
       */
      proto.ddx.v1.Service.ScanConfig.ImgResolution getTargetResolution();
      /**
       * <pre>
       * the resolution you want the returning image to have. If left empty we use predefined server value.
       * if the resolution is greater then the available input image, we do not upscale the result, but
       * rather use the largest possible resolution available in your input image.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
       */
      proto.ddx.v1.Service.ScanConfig.ImgResolutionOrBuilder getTargetResolutionOrBuilder();

      /**
       * <pre>
       * Image is returned as an encoded jpeg, this is the parameter used for jpeg compression. 
       * If left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      int getJpegImageQuality();
    }
    /**
     * <pre>
     * ReturnImage - used to specify parameters for the returned image.
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnImage}
     */
    public static final class ReturnImage extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanConfig.ReturnImage)
        ReturnImageOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          ReturnImage.class.getName());
      }
      // Use ReturnImage.newBuilder() to construct.
      private ReturnImage(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ReturnImage() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnImage_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnImage_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanConfig.ReturnImage.class, proto.ddx.v1.Service.ScanConfig.ReturnImage.Builder.class);
      }

      private int bitField0_;
      public static final int TARGETRESOLUTION_FIELD_NUMBER = 1;
      private proto.ddx.v1.Service.ScanConfig.ImgResolution targetResolution_;
      /**
       * <pre>
       * the resolution you want the returning image to have. If left empty we use predefined server value.
       * if the resolution is greater then the available input image, we do not upscale the result, but
       * rather use the largest possible resolution available in your input image.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
       * @return Whether the targetResolution field is set.
       */
      @java.lang.Override
      public boolean hasTargetResolution() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * the resolution you want the returning image to have. If left empty we use predefined server value.
       * if the resolution is greater then the available input image, we do not upscale the result, but
       * rather use the largest possible resolution available in your input image.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
       * @return The targetResolution.
       */
      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig.ImgResolution getTargetResolution() {
        return targetResolution_ == null ? proto.ddx.v1.Service.ScanConfig.ImgResolution.getDefaultInstance() : targetResolution_;
      }
      /**
       * <pre>
       * the resolution you want the returning image to have. If left empty we use predefined server value.
       * if the resolution is greater then the available input image, we do not upscale the result, but
       * rather use the largest possible resolution available in your input image.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
       */
      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig.ImgResolutionOrBuilder getTargetResolutionOrBuilder() {
        return targetResolution_ == null ? proto.ddx.v1.Service.ScanConfig.ImgResolution.getDefaultInstance() : targetResolution_;
      }

      public static final int JPEGIMAGEQUALITY_FIELD_NUMBER = 2;
      private int jpegImageQuality_ = 0;
      /**
       * <pre>
       * Image is returned as an encoded jpeg, this is the parameter used for jpeg compression. 
       * If left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      @java.lang.Override
      public int getJpegImageQuality() {
        return jpegImageQuality_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeMessage(1, getTargetResolution());
        }
        if (jpegImageQuality_ != 0) {
          output.writeUInt32(2, jpegImageQuality_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, getTargetResolution());
        }
        if (jpegImageQuality_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, jpegImageQuality_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.ddx.v1.Service.ScanConfig.ReturnImage)) {
          return super.equals(obj);
        }
        proto.ddx.v1.Service.ScanConfig.ReturnImage other = (proto.ddx.v1.Service.ScanConfig.ReturnImage) obj;

        if (hasTargetResolution() != other.hasTargetResolution()) return false;
        if (hasTargetResolution()) {
          if (!getTargetResolution()
              .equals(other.getTargetResolution())) return false;
        }
        if (getJpegImageQuality()
            != other.getJpegImageQuality()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasTargetResolution()) {
          hash = (37 * hash) + TARGETRESOLUTION_FIELD_NUMBER;
          hash = (53 * hash) + getTargetResolution().hashCode();
        }
        hash = (37 * hash) + JPEGIMAGEQUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getJpegImageQuality();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnImage parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.ddx.v1.Service.ScanConfig.ReturnImage prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * ReturnImage - used to specify parameters for the returned image.
       * </pre>
       *
       * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnImage}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanConfig.ReturnImage)
          proto.ddx.v1.Service.ScanConfig.ReturnImageOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnImage_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnImage_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.ddx.v1.Service.ScanConfig.ReturnImage.class, proto.ddx.v1.Service.ScanConfig.ReturnImage.Builder.class);
        }

        // Construct using proto.ddx.v1.Service.ScanConfig.ReturnImage.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage
                  .alwaysUseFieldBuilders) {
            getTargetResolutionFieldBuilder();
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          targetResolution_ = null;
          if (targetResolutionBuilder_ != null) {
            targetResolutionBuilder_.dispose();
            targetResolutionBuilder_ = null;
          }
          jpegImageQuality_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnImage_descriptor;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnImage getDefaultInstanceForType() {
          return proto.ddx.v1.Service.ScanConfig.ReturnImage.getDefaultInstance();
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnImage build() {
          proto.ddx.v1.Service.ScanConfig.ReturnImage result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnImage buildPartial() {
          proto.ddx.v1.Service.ScanConfig.ReturnImage result = new proto.ddx.v1.Service.ScanConfig.ReturnImage(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(proto.ddx.v1.Service.ScanConfig.ReturnImage result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.targetResolution_ = targetResolutionBuilder_ == null
                ? targetResolution_
                : targetResolutionBuilder_.build();
            to_bitField0_ |= 0x00000001;
          }
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.jpegImageQuality_ = jpegImageQuality_;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.ddx.v1.Service.ScanConfig.ReturnImage) {
            return mergeFrom((proto.ddx.v1.Service.ScanConfig.ReturnImage)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.ddx.v1.Service.ScanConfig.ReturnImage other) {
          if (other == proto.ddx.v1.Service.ScanConfig.ReturnImage.getDefaultInstance()) return this;
          if (other.hasTargetResolution()) {
            mergeTargetResolution(other.getTargetResolution());
          }
          if (other.getJpegImageQuality() != 0) {
            setJpegImageQuality(other.getJpegImageQuality());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  input.readMessage(
                      getTargetResolutionFieldBuilder().getBuilder(),
                      extensionRegistry);
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                case 16: {
                  jpegImageQuality_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private proto.ddx.v1.Service.ScanConfig.ImgResolution targetResolution_;
        private com.google.protobuf.SingleFieldBuilder<
            proto.ddx.v1.Service.ScanConfig.ImgResolution, proto.ddx.v1.Service.ScanConfig.ImgResolution.Builder, proto.ddx.v1.Service.ScanConfig.ImgResolutionOrBuilder> targetResolutionBuilder_;
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         * @return Whether the targetResolution field is set.
         */
        public boolean hasTargetResolution() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         * @return The targetResolution.
         */
        public proto.ddx.v1.Service.ScanConfig.ImgResolution getTargetResolution() {
          if (targetResolutionBuilder_ == null) {
            return targetResolution_ == null ? proto.ddx.v1.Service.ScanConfig.ImgResolution.getDefaultInstance() : targetResolution_;
          } else {
            return targetResolutionBuilder_.getMessage();
          }
        }
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         */
        public Builder setTargetResolution(proto.ddx.v1.Service.ScanConfig.ImgResolution value) {
          if (targetResolutionBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            targetResolution_ = value;
          } else {
            targetResolutionBuilder_.setMessage(value);
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         */
        public Builder setTargetResolution(
            proto.ddx.v1.Service.ScanConfig.ImgResolution.Builder builderForValue) {
          if (targetResolutionBuilder_ == null) {
            targetResolution_ = builderForValue.build();
          } else {
            targetResolutionBuilder_.setMessage(builderForValue.build());
          }
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         */
        public Builder mergeTargetResolution(proto.ddx.v1.Service.ScanConfig.ImgResolution value) {
          if (targetResolutionBuilder_ == null) {
            if (((bitField0_ & 0x00000001) != 0) &&
              targetResolution_ != null &&
              targetResolution_ != proto.ddx.v1.Service.ScanConfig.ImgResolution.getDefaultInstance()) {
              getTargetResolutionBuilder().mergeFrom(value);
            } else {
              targetResolution_ = value;
            }
          } else {
            targetResolutionBuilder_.mergeFrom(value);
          }
          if (targetResolution_ != null) {
            bitField0_ |= 0x00000001;
            onChanged();
          }
          return this;
        }
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         */
        public Builder clearTargetResolution() {
          bitField0_ = (bitField0_ & ~0x00000001);
          targetResolution_ = null;
          if (targetResolutionBuilder_ != null) {
            targetResolutionBuilder_.dispose();
            targetResolutionBuilder_ = null;
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         */
        public proto.ddx.v1.Service.ScanConfig.ImgResolution.Builder getTargetResolutionBuilder() {
          bitField0_ |= 0x00000001;
          onChanged();
          return getTargetResolutionFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         */
        public proto.ddx.v1.Service.ScanConfig.ImgResolutionOrBuilder getTargetResolutionOrBuilder() {
          if (targetResolutionBuilder_ != null) {
            return targetResolutionBuilder_.getMessageOrBuilder();
          } else {
            return targetResolution_ == null ?
                proto.ddx.v1.Service.ScanConfig.ImgResolution.getDefaultInstance() : targetResolution_;
          }
        }
        /**
         * <pre>
         * the resolution you want the returning image to have. If left empty we use predefined server value.
         * if the resolution is greater then the available input image, we do not upscale the result, but
         * rather use the largest possible resolution available in your input image.
         * </pre>
         *
         * <code>.proto.ddx.v1.ScanConfig.ImgResolution targetResolution = 1 [json_name = "targetResolution"];</code>
         */
        private com.google.protobuf.SingleFieldBuilder<
            proto.ddx.v1.Service.ScanConfig.ImgResolution, proto.ddx.v1.Service.ScanConfig.ImgResolution.Builder, proto.ddx.v1.Service.ScanConfig.ImgResolutionOrBuilder> 
            getTargetResolutionFieldBuilder() {
          if (targetResolutionBuilder_ == null) {
            targetResolutionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
                proto.ddx.v1.Service.ScanConfig.ImgResolution, proto.ddx.v1.Service.ScanConfig.ImgResolution.Builder, proto.ddx.v1.Service.ScanConfig.ImgResolutionOrBuilder>(
                    getTargetResolution(),
                    getParentForChildren(),
                    isClean());
            targetResolution_ = null;
          }
          return targetResolutionBuilder_;
        }

        private int jpegImageQuality_ ;
        /**
         * <pre>
         * Image is returned as an encoded jpeg, this is the parameter used for jpeg compression. 
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @return The jpegImageQuality.
         */
        @java.lang.Override
        public int getJpegImageQuality() {
          return jpegImageQuality_;
        }
        /**
         * <pre>
         * Image is returned as an encoded jpeg, this is the parameter used for jpeg compression. 
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @param value The jpegImageQuality to set.
         * @return This builder for chaining.
         */
        public Builder setJpegImageQuality(int value) {

          jpegImageQuality_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Image is returned as an encoded jpeg, this is the parameter used for jpeg compression. 
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @return This builder for chaining.
         */
        public Builder clearJpegImageQuality() {
          bitField0_ = (bitField0_ & ~0x00000002);
          jpegImageQuality_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanConfig.ReturnImage)
      }

      // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanConfig.ReturnImage)
      private static final proto.ddx.v1.Service.ScanConfig.ReturnImage DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanConfig.ReturnImage();
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnImage getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ReturnImage>
          PARSER = new com.google.protobuf.AbstractParser<ReturnImage>() {
        @java.lang.Override
        public ReturnImage parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ReturnImage> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ReturnImage> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig.ReturnImage getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ReturnTextFieldImagesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanConfig.ReturnTextFieldImages)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the typeFilter.
       */
      java.util.List<proto.ddx.v1.Fields.TextField.Type> getTypeFilterList();
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return The count of typeFilter.
       */
      int getTypeFilterCount();
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the element to return.
       * @return The typeFilter at the given index.
       */
      proto.ddx.v1.Fields.TextField.Type getTypeFilter(int index);
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the enum numeric values on the wire for typeFilter.
       */
      java.util.List<java.lang.Integer>
      getTypeFilterValueList();
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of typeFilter at the given index.
       */
      int getTypeFilterValue(int index);

      /**
       * <pre>
       * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
       * If left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      int getJpegImageQuality();
    }
    /**
     * <pre>
     * ReturnTextFieldImages - used to specify to the server to return images of fields
     * detected on the document (select type of interest using targetTypes field).
     * Unless this is a HARD REQUIREMENT we do not recommend to use this due to its
     * computational and data overhead.
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnTextFieldImages}
     */
    public static final class ReturnTextFieldImages extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanConfig.ReturnTextFieldImages)
        ReturnTextFieldImagesOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          ReturnTextFieldImages.class.getName());
      }
      // Use ReturnTextFieldImages.newBuilder() to construct.
      private ReturnTextFieldImages(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ReturnTextFieldImages() {
        typeFilter_ = emptyIntList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.class, proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.Builder.class);
      }

      public static final int TYPEFILTER_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList typeFilter_;
      private static final com.google.protobuf.Internal.IntListAdapter.IntConverter<
          proto.ddx.v1.Fields.TextField.Type> typeFilter_converter_ =
              new com.google.protobuf.Internal.IntListAdapter.IntConverter<
                  proto.ddx.v1.Fields.TextField.Type>() {
                public proto.ddx.v1.Fields.TextField.Type convert(int from) {
                  proto.ddx.v1.Fields.TextField.Type result = proto.ddx.v1.Fields.TextField.Type.forNumber(from);
                  return result == null ? proto.ddx.v1.Fields.TextField.Type.UNRECOGNIZED : result;
                }
              };
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the typeFilter.
       */
      @java.lang.Override
      public java.util.List<proto.ddx.v1.Fields.TextField.Type> getTypeFilterList() {
        return new com.google.protobuf.Internal.IntListAdapter<
            proto.ddx.v1.Fields.TextField.Type>(typeFilter_, typeFilter_converter_);
      }
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return The count of typeFilter.
       */
      @java.lang.Override
      public int getTypeFilterCount() {
        return typeFilter_.size();
      }
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the element to return.
       * @return The typeFilter at the given index.
       */
      @java.lang.Override
      public proto.ddx.v1.Fields.TextField.Type getTypeFilter(int index) {
        return typeFilter_converter_.convert(typeFilter_.getInt(index));
      }
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the enum numeric values on the wire for typeFilter.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
      getTypeFilterValueList() {
        return typeFilter_;
      }
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of typeFilter at the given index.
       */
      @java.lang.Override
      public int getTypeFilterValue(int index) {
        return typeFilter_.getInt(index);
      }
      private int typeFilterMemoizedSerializedSize;

      public static final int JPEGIMAGEQUALITY_FIELD_NUMBER = 2;
      private int jpegImageQuality_ = 0;
      /**
       * <pre>
       * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
       * If left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      @java.lang.Override
      public int getJpegImageQuality() {
        return jpegImageQuality_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getTypeFilterList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(typeFilterMemoizedSerializedSize);
        }
        for (int i = 0; i < typeFilter_.size(); i++) {
          output.writeEnumNoTag(typeFilter_.getInt(i));
        }
        if (jpegImageQuality_ != 0) {
          output.writeUInt32(2, jpegImageQuality_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < typeFilter_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(typeFilter_.getInt(i));
          }
          size += dataSize;
          if (!getTypeFilterList().isEmpty()) {  size += 1;
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(dataSize);
          }typeFilterMemoizedSerializedSize = dataSize;
        }
        if (jpegImageQuality_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, jpegImageQuality_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages)) {
          return super.equals(obj);
        }
        proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages other = (proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages) obj;

        if (!typeFilter_.equals(other.typeFilter_)) return false;
        if (getJpegImageQuality()
            != other.getJpegImageQuality()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getTypeFilterCount() > 0) {
          hash = (37 * hash) + TYPEFILTER_FIELD_NUMBER;
          hash = (53 * hash) + typeFilter_.hashCode();
        }
        hash = (37 * hash) + JPEGIMAGEQUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getJpegImageQuality();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * ReturnTextFieldImages - used to specify to the server to return images of fields
       * detected on the document (select type of interest using targetTypes field).
       * Unless this is a HARD REQUIREMENT we do not recommend to use this due to its
       * computational and data overhead.
       * </pre>
       *
       * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnTextFieldImages}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanConfig.ReturnTextFieldImages)
          proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImagesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.class, proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.Builder.class);
        }

        // Construct using proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          typeFilter_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          jpegImageQuality_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_descriptor;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages getDefaultInstanceForType() {
          return proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.getDefaultInstance();
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages build() {
          proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages buildPartial() {
          proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages result = new proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages result) {
          if (((bitField0_ & 0x00000001) != 0)) {
            typeFilter_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.typeFilter_ = typeFilter_;
        }

        private void buildPartial0(proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.jpegImageQuality_ = jpegImageQuality_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages) {
            return mergeFrom((proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages other) {
          if (other == proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.getDefaultInstance()) return this;
          if (!other.typeFilter_.isEmpty()) {
            if (typeFilter_.isEmpty()) {
              typeFilter_ = other.typeFilter_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTypeFilterIsMutable();
              typeFilter_.addAll(other.typeFilter_);
            }
            onChanged();
          }
          if (other.getJpegImageQuality() != 0) {
            setJpegImageQuality(other.getJpegImageQuality());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int tmpRaw = input.readEnum();
                  ensureTypeFilterIsMutable();
                  typeFilter_.addInt(tmpRaw);
                  break;
                } // case 8
                case 10: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int tmpRaw = input.readEnum();
                    ensureTypeFilterIsMutable();
                    typeFilter_.addInt(tmpRaw);
                  }
                  input.popLimit(oldLimit);
                  break;
                } // case 10
                case 16: {
                  jpegImageQuality_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.IntList typeFilter_ =
          emptyIntList();
        private void ensureTypeFilterIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            typeFilter_ = makeMutableCopy(typeFilter_);
            bitField0_ |= 0x00000001;
          }
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return A list containing the typeFilter.
         */
        public java.util.List<proto.ddx.v1.Fields.TextField.Type> getTypeFilterList() {
          return new com.google.protobuf.Internal.IntListAdapter<
              proto.ddx.v1.Fields.TextField.Type>(typeFilter_, typeFilter_converter_);
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return The count of typeFilter.
         */
        public int getTypeFilterCount() {
          return typeFilter_.size();
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index of the element to return.
         * @return The typeFilter at the given index.
         */
        public proto.ddx.v1.Fields.TextField.Type getTypeFilter(int index) {
          return typeFilter_converter_.convert(typeFilter_.getInt(index));
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index to set the value at.
         * @param value The typeFilter to set.
         * @return This builder for chaining.
         */
        public Builder setTypeFilter(
            int index, proto.ddx.v1.Fields.TextField.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeFilterIsMutable();
          typeFilter_.setInt(index, value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param value The typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addTypeFilter(proto.ddx.v1.Fields.TextField.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeFilterIsMutable();
          typeFilter_.addInt(value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param values The typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addAllTypeFilter(
            java.lang.Iterable<? extends proto.ddx.v1.Fields.TextField.Type> values) {
          ensureTypeFilterIsMutable();
          for (proto.ddx.v1.Fields.TextField.Type value : values) {
            typeFilter_.addInt(value.getNumber());
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return This builder for chaining.
         */
        public Builder clearTypeFilter() {
          typeFilter_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return A list containing the enum numeric values on the wire for typeFilter.
         */
        public java.util.List<java.lang.Integer>
        getTypeFilterValueList() {
          return java.util.Collections.unmodifiableList(typeFilter_);
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of typeFilter at the given index.
         */
        public int getTypeFilterValue(int index) {
          return typeFilter_.getInt(index);
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index to set the value at.
         * @param value The enum numeric value on the wire for typeFilter to set.
         * @return This builder for chaining.
         */
        public Builder setTypeFilterValue(
            int index, int value) {
          ensureTypeFilterIsMutable();
          typeFilter_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param value The enum numeric value on the wire for typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addTypeFilterValue(int value) {
          ensureTypeFilterIsMutable();
          typeFilter_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.TextField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param values The enum numeric values on the wire for typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addAllTypeFilterValue(
            java.lang.Iterable<java.lang.Integer> values) {
          ensureTypeFilterIsMutable();
          for (int value : values) {
            typeFilter_.addInt(value);
          }
          onChanged();
          return this;
        }

        private int jpegImageQuality_ ;
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @return The jpegImageQuality.
         */
        @java.lang.Override
        public int getJpegImageQuality() {
          return jpegImageQuality_;
        }
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @param value The jpegImageQuality to set.
         * @return This builder for chaining.
         */
        public Builder setJpegImageQuality(int value) {

          jpegImageQuality_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @return This builder for chaining.
         */
        public Builder clearJpegImageQuality() {
          bitField0_ = (bitField0_ & ~0x00000002);
          jpegImageQuality_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanConfig.ReturnTextFieldImages)
      }

      // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanConfig.ReturnTextFieldImages)
      private static final proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages();
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ReturnTextFieldImages>
          PARSER = new com.google.protobuf.AbstractParser<ReturnTextFieldImages>() {
        @java.lang.Override
        public ReturnTextFieldImages parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ReturnTextFieldImages> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ReturnTextFieldImages> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ReturnDateFieldImagesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanConfig.ReturnDateFieldImages)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the typeFilter.
       */
      java.util.List<proto.ddx.v1.Fields.DateField.Type> getTypeFilterList();
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return The count of typeFilter.
       */
      int getTypeFilterCount();
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the element to return.
       * @return The typeFilter at the given index.
       */
      proto.ddx.v1.Fields.DateField.Type getTypeFilter(int index);
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the enum numeric values on the wire for typeFilter.
       */
      java.util.List<java.lang.Integer>
      getTypeFilterValueList();
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of typeFilter at the given index.
       */
      int getTypeFilterValue(int index);

      /**
       * <pre>
       * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
       * If left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      int getJpegImageQuality();
    }
    /**
     * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnDateFieldImages}
     */
    public static final class ReturnDateFieldImages extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanConfig.ReturnDateFieldImages)
        ReturnDateFieldImagesOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          ReturnDateFieldImages.class.getName());
      }
      // Use ReturnDateFieldImages.newBuilder() to construct.
      private ReturnDateFieldImages(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ReturnDateFieldImages() {
        typeFilter_ = emptyIntList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.class, proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.Builder.class);
      }

      public static final int TYPEFILTER_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList typeFilter_;
      private static final com.google.protobuf.Internal.IntListAdapter.IntConverter<
          proto.ddx.v1.Fields.DateField.Type> typeFilter_converter_ =
              new com.google.protobuf.Internal.IntListAdapter.IntConverter<
                  proto.ddx.v1.Fields.DateField.Type>() {
                public proto.ddx.v1.Fields.DateField.Type convert(int from) {
                  proto.ddx.v1.Fields.DateField.Type result = proto.ddx.v1.Fields.DateField.Type.forNumber(from);
                  return result == null ? proto.ddx.v1.Fields.DateField.Type.UNRECOGNIZED : result;
                }
              };
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the typeFilter.
       */
      @java.lang.Override
      public java.util.List<proto.ddx.v1.Fields.DateField.Type> getTypeFilterList() {
        return new com.google.protobuf.Internal.IntListAdapter<
            proto.ddx.v1.Fields.DateField.Type>(typeFilter_, typeFilter_converter_);
      }
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return The count of typeFilter.
       */
      @java.lang.Override
      public int getTypeFilterCount() {
        return typeFilter_.size();
      }
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the element to return.
       * @return The typeFilter at the given index.
       */
      @java.lang.Override
      public proto.ddx.v1.Fields.DateField.Type getTypeFilter(int index) {
        return typeFilter_converter_.convert(typeFilter_.getInt(index));
      }
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the enum numeric values on the wire for typeFilter.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
      getTypeFilterValueList() {
        return typeFilter_;
      }
      /**
       * <pre>
       * typeFilter - only images of specified field types are returned.
       * if left empty, all field type images will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of typeFilter at the given index.
       */
      @java.lang.Override
      public int getTypeFilterValue(int index) {
        return typeFilter_.getInt(index);
      }
      private int typeFilterMemoizedSerializedSize;

      public static final int JPEGIMAGEQUALITY_FIELD_NUMBER = 2;
      private int jpegImageQuality_ = 0;
      /**
       * <pre>
       * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
       * If left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      @java.lang.Override
      public int getJpegImageQuality() {
        return jpegImageQuality_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getTypeFilterList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(typeFilterMemoizedSerializedSize);
        }
        for (int i = 0; i < typeFilter_.size(); i++) {
          output.writeEnumNoTag(typeFilter_.getInt(i));
        }
        if (jpegImageQuality_ != 0) {
          output.writeUInt32(2, jpegImageQuality_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < typeFilter_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(typeFilter_.getInt(i));
          }
          size += dataSize;
          if (!getTypeFilterList().isEmpty()) {  size += 1;
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(dataSize);
          }typeFilterMemoizedSerializedSize = dataSize;
        }
        if (jpegImageQuality_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, jpegImageQuality_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages)) {
          return super.equals(obj);
        }
        proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages other = (proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages) obj;

        if (!typeFilter_.equals(other.typeFilter_)) return false;
        if (getJpegImageQuality()
            != other.getJpegImageQuality()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getTypeFilterCount() > 0) {
          hash = (37 * hash) + TYPEFILTER_FIELD_NUMBER;
          hash = (53 * hash) + typeFilter_.hashCode();
        }
        hash = (37 * hash) + JPEGIMAGEQUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getJpegImageQuality();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnDateFieldImages}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanConfig.ReturnDateFieldImages)
          proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImagesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.class, proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.Builder.class);
        }

        // Construct using proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          typeFilter_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          jpegImageQuality_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_descriptor;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages getDefaultInstanceForType() {
          return proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.getDefaultInstance();
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages build() {
          proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages buildPartial() {
          proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages result = new proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages result) {
          if (((bitField0_ & 0x00000001) != 0)) {
            typeFilter_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.typeFilter_ = typeFilter_;
        }

        private void buildPartial0(proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.jpegImageQuality_ = jpegImageQuality_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages) {
            return mergeFrom((proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages other) {
          if (other == proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.getDefaultInstance()) return this;
          if (!other.typeFilter_.isEmpty()) {
            if (typeFilter_.isEmpty()) {
              typeFilter_ = other.typeFilter_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTypeFilterIsMutable();
              typeFilter_.addAll(other.typeFilter_);
            }
            onChanged();
          }
          if (other.getJpegImageQuality() != 0) {
            setJpegImageQuality(other.getJpegImageQuality());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int tmpRaw = input.readEnum();
                  ensureTypeFilterIsMutable();
                  typeFilter_.addInt(tmpRaw);
                  break;
                } // case 8
                case 10: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int tmpRaw = input.readEnum();
                    ensureTypeFilterIsMutable();
                    typeFilter_.addInt(tmpRaw);
                  }
                  input.popLimit(oldLimit);
                  break;
                } // case 10
                case 16: {
                  jpegImageQuality_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.IntList typeFilter_ =
          emptyIntList();
        private void ensureTypeFilterIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            typeFilter_ = makeMutableCopy(typeFilter_);
            bitField0_ |= 0x00000001;
          }
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return A list containing the typeFilter.
         */
        public java.util.List<proto.ddx.v1.Fields.DateField.Type> getTypeFilterList() {
          return new com.google.protobuf.Internal.IntListAdapter<
              proto.ddx.v1.Fields.DateField.Type>(typeFilter_, typeFilter_converter_);
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return The count of typeFilter.
         */
        public int getTypeFilterCount() {
          return typeFilter_.size();
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index of the element to return.
         * @return The typeFilter at the given index.
         */
        public proto.ddx.v1.Fields.DateField.Type getTypeFilter(int index) {
          return typeFilter_converter_.convert(typeFilter_.getInt(index));
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index to set the value at.
         * @param value The typeFilter to set.
         * @return This builder for chaining.
         */
        public Builder setTypeFilter(
            int index, proto.ddx.v1.Fields.DateField.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeFilterIsMutable();
          typeFilter_.setInt(index, value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param value The typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addTypeFilter(proto.ddx.v1.Fields.DateField.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeFilterIsMutable();
          typeFilter_.addInt(value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param values The typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addAllTypeFilter(
            java.lang.Iterable<? extends proto.ddx.v1.Fields.DateField.Type> values) {
          ensureTypeFilterIsMutable();
          for (proto.ddx.v1.Fields.DateField.Type value : values) {
            typeFilter_.addInt(value.getNumber());
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return This builder for chaining.
         */
        public Builder clearTypeFilter() {
          typeFilter_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return A list containing the enum numeric values on the wire for typeFilter.
         */
        public java.util.List<java.lang.Integer>
        getTypeFilterValueList() {
          return java.util.Collections.unmodifiableList(typeFilter_);
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of typeFilter at the given index.
         */
        public int getTypeFilterValue(int index) {
          return typeFilter_.getInt(index);
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index to set the value at.
         * @param value The enum numeric value on the wire for typeFilter to set.
         * @return This builder for chaining.
         */
        public Builder setTypeFilterValue(
            int index, int value) {
          ensureTypeFilterIsMutable();
          typeFilter_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param value The enum numeric value on the wire for typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addTypeFilterValue(int value) {
          ensureTypeFilterIsMutable();
          typeFilter_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - only images of specified field types are returned.
         * if left empty, all field type images will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.DateField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param values The enum numeric values on the wire for typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addAllTypeFilterValue(
            java.lang.Iterable<java.lang.Integer> values) {
          ensureTypeFilterIsMutable();
          for (int value : values) {
            typeFilter_.addInt(value);
          }
          onChanged();
          return this;
        }

        private int jpegImageQuality_ ;
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @return The jpegImageQuality.
         */
        @java.lang.Override
        public int getJpegImageQuality() {
          return jpegImageQuality_;
        }
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @param value The jpegImageQuality to set.
         * @return This builder for chaining.
         */
        public Builder setJpegImageQuality(int value) {

          jpegImageQuality_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @return This builder for chaining.
         */
        public Builder clearJpegImageQuality() {
          bitField0_ = (bitField0_ & ~0x00000002);
          jpegImageQuality_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanConfig.ReturnDateFieldImages)
      }

      // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanConfig.ReturnDateFieldImages)
      private static final proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages();
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ReturnDateFieldImages>
          PARSER = new com.google.protobuf.AbstractParser<ReturnDateFieldImages>() {
        @java.lang.Override
        public ReturnDateFieldImages parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ReturnDateFieldImages> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ReturnDateFieldImages> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ReturnVisualFieldsOrBuilder extends
        // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanConfig.ReturnVisualFields)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the typeFilter.
       */
      java.util.List<proto.ddx.v1.Fields.VisualField.Type> getTypeFilterList();
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return The count of typeFilter.
       */
      int getTypeFilterCount();
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the element to return.
       * @return The typeFilter at the given index.
       */
      proto.ddx.v1.Fields.VisualField.Type getTypeFilter(int index);
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the enum numeric values on the wire for typeFilter.
       */
      java.util.List<java.lang.Integer>
      getTypeFilterValueList();
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of typeFilter at the given index.
       */
      int getTypeFilterValue(int index);

      /**
       * <pre>
       * jpegImageQuality - if left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      int getJpegImageQuality();
    }
    /**
     * <pre>
     * ReturnVisualFields - specify visual fields to return.
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnVisualFields}
     */
    public static final class ReturnVisualFields extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanConfig.ReturnVisualFields)
        ReturnVisualFieldsOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          ReturnVisualFields.class.getName());
      }
      // Use ReturnVisualFields.newBuilder() to construct.
      private ReturnVisualFields(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ReturnVisualFields() {
        typeFilter_ = emptyIntList();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.class, proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.Builder.class);
      }

      public static final int TYPEFILTER_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private com.google.protobuf.Internal.IntList typeFilter_;
      private static final com.google.protobuf.Internal.IntListAdapter.IntConverter<
          proto.ddx.v1.Fields.VisualField.Type> typeFilter_converter_ =
              new com.google.protobuf.Internal.IntListAdapter.IntConverter<
                  proto.ddx.v1.Fields.VisualField.Type>() {
                public proto.ddx.v1.Fields.VisualField.Type convert(int from) {
                  proto.ddx.v1.Fields.VisualField.Type result = proto.ddx.v1.Fields.VisualField.Type.forNumber(from);
                  return result == null ? proto.ddx.v1.Fields.VisualField.Type.UNRECOGNIZED : result;
                }
              };
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the typeFilter.
       */
      @java.lang.Override
      public java.util.List<proto.ddx.v1.Fields.VisualField.Type> getTypeFilterList() {
        return new com.google.protobuf.Internal.IntListAdapter<
            proto.ddx.v1.Fields.VisualField.Type>(typeFilter_, typeFilter_converter_);
      }
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return The count of typeFilter.
       */
      @java.lang.Override
      public int getTypeFilterCount() {
        return typeFilter_.size();
      }
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the element to return.
       * @return The typeFilter at the given index.
       */
      @java.lang.Override
      public proto.ddx.v1.Fields.VisualField.Type getTypeFilter(int index) {
        return typeFilter_converter_.convert(typeFilter_.getInt(index));
      }
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @return A list containing the enum numeric values on the wire for typeFilter.
       */
      @java.lang.Override
      public java.util.List<java.lang.Integer>
      getTypeFilterValueList() {
        return typeFilter_;
      }
      /**
       * <pre>
       * typeFilter - used to specify to the server to return visual fields of specified types.
       * if left empty, all visual field types will be returned.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
       * @param index The index of the value to return.
       * @return The enum numeric value on the wire of typeFilter at the given index.
       */
      @java.lang.Override
      public int getTypeFilterValue(int index) {
        return typeFilter_.getInt(index);
      }
      private int typeFilterMemoizedSerializedSize;

      public static final int JPEGIMAGEQUALITY_FIELD_NUMBER = 2;
      private int jpegImageQuality_ = 0;
      /**
       * <pre>
       * jpegImageQuality - if left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      @java.lang.Override
      public int getJpegImageQuality() {
        return jpegImageQuality_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (getTypeFilterList().size() > 0) {
          output.writeUInt32NoTag(10);
          output.writeUInt32NoTag(typeFilterMemoizedSerializedSize);
        }
        for (int i = 0; i < typeFilter_.size(); i++) {
          output.writeEnumNoTag(typeFilter_.getInt(i));
        }
        if (jpegImageQuality_ != 0) {
          output.writeUInt32(2, jpegImageQuality_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        {
          int dataSize = 0;
          for (int i = 0; i < typeFilter_.size(); i++) {
            dataSize += com.google.protobuf.CodedOutputStream
              .computeEnumSizeNoTag(typeFilter_.getInt(i));
          }
          size += dataSize;
          if (!getTypeFilterList().isEmpty()) {  size += 1;
            size += com.google.protobuf.CodedOutputStream
              .computeUInt32SizeNoTag(dataSize);
          }typeFilterMemoizedSerializedSize = dataSize;
        }
        if (jpegImageQuality_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, jpegImageQuality_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.ddx.v1.Service.ScanConfig.ReturnVisualFields)) {
          return super.equals(obj);
        }
        proto.ddx.v1.Service.ScanConfig.ReturnVisualFields other = (proto.ddx.v1.Service.ScanConfig.ReturnVisualFields) obj;

        if (!typeFilter_.equals(other.typeFilter_)) return false;
        if (getJpegImageQuality()
            != other.getJpegImageQuality()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (getTypeFilterCount() > 0) {
          hash = (37 * hash) + TYPEFILTER_FIELD_NUMBER;
          hash = (53 * hash) + typeFilter_.hashCode();
        }
        hash = (37 * hash) + JPEGIMAGEQUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getJpegImageQuality();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.ddx.v1.Service.ScanConfig.ReturnVisualFields prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * ReturnVisualFields - specify visual fields to return.
       * </pre>
       *
       * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnVisualFields}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanConfig.ReturnVisualFields)
          proto.ddx.v1.Service.ScanConfig.ReturnVisualFieldsOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.class, proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.Builder.class);
        }

        // Construct using proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          typeFilter_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          jpegImageQuality_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_descriptor;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnVisualFields getDefaultInstanceForType() {
          return proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.getDefaultInstance();
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnVisualFields build() {
          proto.ddx.v1.Service.ScanConfig.ReturnVisualFields result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnVisualFields buildPartial() {
          proto.ddx.v1.Service.ScanConfig.ReturnVisualFields result = new proto.ddx.v1.Service.ScanConfig.ReturnVisualFields(this);
          buildPartialRepeatedFields(result);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartialRepeatedFields(proto.ddx.v1.Service.ScanConfig.ReturnVisualFields result) {
          if (((bitField0_ & 0x00000001) != 0)) {
            typeFilter_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.typeFilter_ = typeFilter_;
        }

        private void buildPartial0(proto.ddx.v1.Service.ScanConfig.ReturnVisualFields result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000002) != 0)) {
            result.jpegImageQuality_ = jpegImageQuality_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.ddx.v1.Service.ScanConfig.ReturnVisualFields) {
            return mergeFrom((proto.ddx.v1.Service.ScanConfig.ReturnVisualFields)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.ddx.v1.Service.ScanConfig.ReturnVisualFields other) {
          if (other == proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.getDefaultInstance()) return this;
          if (!other.typeFilter_.isEmpty()) {
            if (typeFilter_.isEmpty()) {
              typeFilter_ = other.typeFilter_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTypeFilterIsMutable();
              typeFilter_.addAll(other.typeFilter_);
            }
            onChanged();
          }
          if (other.getJpegImageQuality() != 0) {
            setJpegImageQuality(other.getJpegImageQuality());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int tmpRaw = input.readEnum();
                  ensureTypeFilterIsMutable();
                  typeFilter_.addInt(tmpRaw);
                  break;
                } // case 8
                case 10: {
                  int length = input.readRawVarint32();
                  int oldLimit = input.pushLimit(length);
                  while(input.getBytesUntilLimit() > 0) {
                    int tmpRaw = input.readEnum();
                    ensureTypeFilterIsMutable();
                    typeFilter_.addInt(tmpRaw);
                  }
                  input.popLimit(oldLimit);
                  break;
                } // case 10
                case 16: {
                  jpegImageQuality_ = input.readUInt32();
                  bitField0_ |= 0x00000002;
                  break;
                } // case 16
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private com.google.protobuf.Internal.IntList typeFilter_ =
          emptyIntList();
        private void ensureTypeFilterIsMutable() {
          if (!((bitField0_ & 0x00000001) != 0)) {
            typeFilter_ = makeMutableCopy(typeFilter_);
            bitField0_ |= 0x00000001;
          }
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return A list containing the typeFilter.
         */
        public java.util.List<proto.ddx.v1.Fields.VisualField.Type> getTypeFilterList() {
          return new com.google.protobuf.Internal.IntListAdapter<
              proto.ddx.v1.Fields.VisualField.Type>(typeFilter_, typeFilter_converter_);
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return The count of typeFilter.
         */
        public int getTypeFilterCount() {
          return typeFilter_.size();
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index of the element to return.
         * @return The typeFilter at the given index.
         */
        public proto.ddx.v1.Fields.VisualField.Type getTypeFilter(int index) {
          return typeFilter_converter_.convert(typeFilter_.getInt(index));
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index to set the value at.
         * @param value The typeFilter to set.
         * @return This builder for chaining.
         */
        public Builder setTypeFilter(
            int index, proto.ddx.v1.Fields.VisualField.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeFilterIsMutable();
          typeFilter_.setInt(index, value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param value The typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addTypeFilter(proto.ddx.v1.Fields.VisualField.Type value) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTypeFilterIsMutable();
          typeFilter_.addInt(value.getNumber());
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param values The typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addAllTypeFilter(
            java.lang.Iterable<? extends proto.ddx.v1.Fields.VisualField.Type> values) {
          ensureTypeFilterIsMutable();
          for (proto.ddx.v1.Fields.VisualField.Type value : values) {
            typeFilter_.addInt(value.getNumber());
          }
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return This builder for chaining.
         */
        public Builder clearTypeFilter() {
          typeFilter_ = emptyIntList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @return A list containing the enum numeric values on the wire for typeFilter.
         */
        public java.util.List<java.lang.Integer>
        getTypeFilterValueList() {
          return java.util.Collections.unmodifiableList(typeFilter_);
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index of the value to return.
         * @return The enum numeric value on the wire of typeFilter at the given index.
         */
        public int getTypeFilterValue(int index) {
          return typeFilter_.getInt(index);
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param index The index to set the value at.
         * @param value The enum numeric value on the wire for typeFilter to set.
         * @return This builder for chaining.
         */
        public Builder setTypeFilterValue(
            int index, int value) {
          ensureTypeFilterIsMutable();
          typeFilter_.setInt(index, value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param value The enum numeric value on the wire for typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addTypeFilterValue(int value) {
          ensureTypeFilterIsMutable();
          typeFilter_.addInt(value);
          onChanged();
          return this;
        }
        /**
         * <pre>
         * typeFilter - used to specify to the server to return visual fields of specified types.
         * if left empty, all visual field types will be returned.
         * </pre>
         *
         * <code>repeated .proto.ddx.v1.VisualField.Type typeFilter = 1 [json_name = "typeFilter"];</code>
         * @param values The enum numeric values on the wire for typeFilter to add.
         * @return This builder for chaining.
         */
        public Builder addAllTypeFilterValue(
            java.lang.Iterable<java.lang.Integer> values) {
          ensureTypeFilterIsMutable();
          for (int value : values) {
            typeFilter_.addInt(value);
          }
          onChanged();
          return this;
        }

        private int jpegImageQuality_ ;
        /**
         * <pre>
         * jpegImageQuality - if left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @return The jpegImageQuality.
         */
        @java.lang.Override
        public int getJpegImageQuality() {
          return jpegImageQuality_;
        }
        /**
         * <pre>
         * jpegImageQuality - if left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @param value The jpegImageQuality to set.
         * @return This builder for chaining.
         */
        public Builder setJpegImageQuality(int value) {

          jpegImageQuality_ = value;
          bitField0_ |= 0x00000002;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * jpegImageQuality - if left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 2 [json_name = "jpegImageQuality"];</code>
         * @return This builder for chaining.
         */
        public Builder clearJpegImageQuality() {
          bitField0_ = (bitField0_ & ~0x00000002);
          jpegImageQuality_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanConfig.ReturnVisualFields)
      }

      // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanConfig.ReturnVisualFields)
      private static final proto.ddx.v1.Service.ScanConfig.ReturnVisualFields DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanConfig.ReturnVisualFields();
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnVisualFields getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ReturnVisualFields>
          PARSER = new com.google.protobuf.AbstractParser<ReturnVisualFields>() {
        @java.lang.Override
        public ReturnVisualFields parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ReturnVisualFields> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ReturnVisualFields> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig.ReturnVisualFields getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public interface ReturnSexFieldImagesOrBuilder extends
        // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanConfig.ReturnSexFieldImages)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
       * If left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 1 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      int getJpegImageQuality();
    }
    /**
     * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnSexFieldImages}
     */
    public static final class ReturnSexFieldImages extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanConfig.ReturnSexFieldImages)
        ReturnSexFieldImagesOrBuilder {
    private static final long serialVersionUID = 0L;
      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          ReturnSexFieldImages.class.getName());
      }
      // Use ReturnSexFieldImages.newBuilder() to construct.
      private ReturnSexFieldImages(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
      }
      private ReturnSexFieldImages() {
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.class, proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.Builder.class);
      }

      public static final int JPEGIMAGEQUALITY_FIELD_NUMBER = 1;
      private int jpegImageQuality_ = 0;
      /**
       * <pre>
       * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
       * If left undefined, we use the default value of 80.
       * </pre>
       *
       * <code>uint32 jpegImageQuality = 1 [json_name = "jpegImageQuality"];</code>
       * @return The jpegImageQuality.
       */
      @java.lang.Override
      public int getJpegImageQuality() {
        return jpegImageQuality_;
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (jpegImageQuality_ != 0) {
          output.writeUInt32(1, jpegImageQuality_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (jpegImageQuality_ != 0) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, jpegImageQuality_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages)) {
          return super.equals(obj);
        }
        proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages other = (proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages) obj;

        if (getJpegImageQuality()
            != other.getJpegImageQuality()) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        hash = (37 * hash) + JPEGIMAGEQUALITY_FIELD_NUMBER;
        hash = (53 * hash) + getJpegImageQuality();
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input);
      }
      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessage
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code proto.ddx.v1.ScanConfig.ReturnSexFieldImages}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanConfig.ReturnSexFieldImages)
          proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImagesOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.class, proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.Builder.class);
        }

        // Construct using proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          jpegImageQuality_ = 0;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_descriptor;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages getDefaultInstanceForType() {
          return proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.getDefaultInstance();
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages build() {
          proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages buildPartial() {
          proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages result = new proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages result) {
          int from_bitField0_ = bitField0_;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.jpegImageQuality_ = jpegImageQuality_;
          }
        }

        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages) {
            return mergeFrom((proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages other) {
          if (other == proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.getDefaultInstance()) return this;
          if (other.getJpegImageQuality() != 0) {
            setJpegImageQuality(other.getJpegImageQuality());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  jpegImageQuality_ = input.readUInt32();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private int jpegImageQuality_ ;
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 1 [json_name = "jpegImageQuality"];</code>
         * @return The jpegImageQuality.
         */
        @java.lang.Override
        public int getJpegImageQuality() {
          return jpegImageQuality_;
        }
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 1 [json_name = "jpegImageQuality"];</code>
         * @param value The jpegImageQuality to set.
         * @return This builder for chaining.
         */
        public Builder setJpegImageQuality(int value) {

          jpegImageQuality_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <pre>
         * Image is returned as encoded jpeg, this is the parameter used for jpeg compression.
         * If left undefined, we use the default value of 80.
         * </pre>
         *
         * <code>uint32 jpegImageQuality = 1 [json_name = "jpegImageQuality"];</code>
         * @return This builder for chaining.
         */
        public Builder clearJpegImageQuality() {
          bitField0_ = (bitField0_ & ~0x00000001);
          jpegImageQuality_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanConfig.ReturnSexFieldImages)
      }

      // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanConfig.ReturnSexFieldImages)
      private static final proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages();
      }

      public static proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<ReturnSexFieldImages>
          PARSER = new com.google.protobuf.AbstractParser<ReturnSexFieldImages>() {
        @java.lang.Override
        public ReturnSexFieldImages parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<ReturnSexFieldImages> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<ReturnSexFieldImages> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int RETURNDOCUMENTIMAGE_FIELD_NUMBER = 1;
    private proto.ddx.v1.Service.ScanConfig.ReturnImage returnDocumentImage_;
    /**
     * <pre>
     * returnDetectedImage - must be set if you want server to return the image of the detected document.
     * used to specify to the server to return detected document
     * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
     * this due to its computational and data overhead.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
     * @return Whether the returnDocumentImage field is set.
     */
    @java.lang.Override
    public boolean hasReturnDocumentImage() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * returnDetectedImage - must be set if you want server to return the image of the detected document.
     * used to specify to the server to return detected document
     * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
     * this due to its computational and data overhead.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
     * @return The returnDocumentImage.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnImage getReturnDocumentImage() {
      return returnDocumentImage_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnImage.getDefaultInstance() : returnDocumentImage_;
    }
    /**
     * <pre>
     * returnDetectedImage - must be set if you want server to return the image of the detected document.
     * used to specify to the server to return detected document
     * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
     * this due to its computational and data overhead.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnImageOrBuilder getReturnDocumentImageOrBuilder() {
      return returnDocumentImage_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnImage.getDefaultInstance() : returnDocumentImage_;
    }

    public static final int RETURNTEXTFIELDIMAGES_FIELD_NUMBER = 2;
    private proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages returnTextFieldImages_;
    /**
     * <pre>
     * returnFieldImages - must be set if you want server to return the images of the detected text fields.
     * leaving this empty means that server will NOT return any text field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
     * @return Whether the returnTextFieldImages field is set.
     */
    @java.lang.Override
    public boolean hasReturnTextFieldImages() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * returnFieldImages - must be set if you want server to return the images of the detected text fields.
     * leaving this empty means that server will NOT return any text field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
     * @return The returnTextFieldImages.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages getReturnTextFieldImages() {
      return returnTextFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.getDefaultInstance() : returnTextFieldImages_;
    }
    /**
     * <pre>
     * returnFieldImages - must be set if you want server to return the images of the detected text fields.
     * leaving this empty means that server will NOT return any text field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImagesOrBuilder getReturnTextFieldImagesOrBuilder() {
      return returnTextFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.getDefaultInstance() : returnTextFieldImages_;
    }

    public static final int RETURNVISUALFIELDS_FIELD_NUMBER = 3;
    private proto.ddx.v1.Service.ScanConfig.ReturnVisualFields returnVisualFields_;
    /**
     * <pre>
     * returnVisualFields - specify visual fields to return.
     * if left empty, NO visual fields will be returned.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
     * @return Whether the returnVisualFields field is set.
     */
    @java.lang.Override
    public boolean hasReturnVisualFields() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * returnVisualFields - specify visual fields to return.
     * if left empty, NO visual fields will be returned.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
     * @return The returnVisualFields.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnVisualFields getReturnVisualFields() {
      return returnVisualFields_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.getDefaultInstance() : returnVisualFields_;
    }
    /**
     * <pre>
     * returnVisualFields - specify visual fields to return.
     * if left empty, NO visual fields will be returned.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnVisualFieldsOrBuilder getReturnVisualFieldsOrBuilder() {
      return returnVisualFields_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.getDefaultInstance() : returnVisualFields_;
    }

    public static final int RETURNDATEFIELDIMAGES_FIELD_NUMBER = 4;
    private proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages returnDateFieldImages_;
    /**
     * <pre>
     * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
     * leaving this empty means that server will NOT return any date field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
     * @return Whether the returnDateFieldImages field is set.
     */
    @java.lang.Override
    public boolean hasReturnDateFieldImages() {
      return ((bitField0_ & 0x00000008) != 0);
    }
    /**
     * <pre>
     * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
     * leaving this empty means that server will NOT return any date field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
     * @return The returnDateFieldImages.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages getReturnDateFieldImages() {
      return returnDateFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.getDefaultInstance() : returnDateFieldImages_;
    }
    /**
     * <pre>
     * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
     * leaving this empty means that server will NOT return any date field images (text only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImagesOrBuilder getReturnDateFieldImagesOrBuilder() {
      return returnDateFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.getDefaultInstance() : returnDateFieldImages_;
    }

    public static final int RETURNSEXFIELDIMAGES_FIELD_NUMBER = 5;
    private proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages returnSexFieldImages_;
    /**
     * <pre>
     * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
     * leaving this empty means that server will NOT return any sex field images (text and enum only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
     * @return Whether the returnSexFieldImages field is set.
     */
    @java.lang.Override
    public boolean hasReturnSexFieldImages() {
      return ((bitField0_ & 0x00000010) != 0);
    }
    /**
     * <pre>
     * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
     * leaving this empty means that server will NOT return any sex field images (text and enum only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
     * @return The returnSexFieldImages.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages getReturnSexFieldImages() {
      return returnSexFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.getDefaultInstance() : returnSexFieldImages_;
    }
    /**
     * <pre>
     * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
     * leaving this empty means that server will NOT return any sex field images (text and enum only).
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImagesOrBuilder getReturnSexFieldImagesOrBuilder() {
      return returnSexFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.getDefaultInstance() : returnSexFieldImages_;
    }

    public static final int SKIPDOCUMENTDETECTION_FIELD_NUMBER = 6;
    private boolean skipDocumentDetection_ = false;
    /**
     * <pre>
     * skipDocumentDetection - if you want to "skip" document detection, set this to true.
     * if you already have a full-size image of a document (or already cropped image of a document)
     * set this to true.
     * </pre>
     *
     * <code>bool skipDocumentDetection = 6 [json_name = "skipDocumentDetection"];</code>
     * @return The skipDocumentDetection.
     */
    @java.lang.Override
    public boolean getSkipDocumentDetection() {
      return skipDocumentDetection_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(1, getReturnDocumentImage());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(2, getReturnTextFieldImages());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(3, getReturnVisualFields());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        output.writeMessage(4, getReturnDateFieldImages());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        output.writeMessage(5, getReturnSexFieldImages());
      }
      if (skipDocumentDetection_ != false) {
        output.writeBool(6, skipDocumentDetection_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getReturnDocumentImage());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getReturnTextFieldImages());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getReturnVisualFields());
      }
      if (((bitField0_ & 0x00000008) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getReturnDateFieldImages());
      }
      if (((bitField0_ & 0x00000010) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getReturnSexFieldImages());
      }
      if (skipDocumentDetection_ != false) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(6, skipDocumentDetection_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.ScanConfig)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.ScanConfig other = (proto.ddx.v1.Service.ScanConfig) obj;

      if (hasReturnDocumentImage() != other.hasReturnDocumentImage()) return false;
      if (hasReturnDocumentImage()) {
        if (!getReturnDocumentImage()
            .equals(other.getReturnDocumentImage())) return false;
      }
      if (hasReturnTextFieldImages() != other.hasReturnTextFieldImages()) return false;
      if (hasReturnTextFieldImages()) {
        if (!getReturnTextFieldImages()
            .equals(other.getReturnTextFieldImages())) return false;
      }
      if (hasReturnVisualFields() != other.hasReturnVisualFields()) return false;
      if (hasReturnVisualFields()) {
        if (!getReturnVisualFields()
            .equals(other.getReturnVisualFields())) return false;
      }
      if (hasReturnDateFieldImages() != other.hasReturnDateFieldImages()) return false;
      if (hasReturnDateFieldImages()) {
        if (!getReturnDateFieldImages()
            .equals(other.getReturnDateFieldImages())) return false;
      }
      if (hasReturnSexFieldImages() != other.hasReturnSexFieldImages()) return false;
      if (hasReturnSexFieldImages()) {
        if (!getReturnSexFieldImages()
            .equals(other.getReturnSexFieldImages())) return false;
      }
      if (getSkipDocumentDetection()
          != other.getSkipDocumentDetection()) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasReturnDocumentImage()) {
        hash = (37 * hash) + RETURNDOCUMENTIMAGE_FIELD_NUMBER;
        hash = (53 * hash) + getReturnDocumentImage().hashCode();
      }
      if (hasReturnTextFieldImages()) {
        hash = (37 * hash) + RETURNTEXTFIELDIMAGES_FIELD_NUMBER;
        hash = (53 * hash) + getReturnTextFieldImages().hashCode();
      }
      if (hasReturnVisualFields()) {
        hash = (37 * hash) + RETURNVISUALFIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getReturnVisualFields().hashCode();
      }
      if (hasReturnDateFieldImages()) {
        hash = (37 * hash) + RETURNDATEFIELDIMAGES_FIELD_NUMBER;
        hash = (53 * hash) + getReturnDateFieldImages().hashCode();
      }
      if (hasReturnSexFieldImages()) {
        hash = (37 * hash) + RETURNSEXFIELDIMAGES_FIELD_NUMBER;
        hash = (53 * hash) + getReturnSexFieldImages().hashCode();
      }
      hash = (37 * hash) + SKIPDOCUMENTDETECTION_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
          getSkipDocumentDetection());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.ScanConfig parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.ScanConfig parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.ScanConfig parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanConfig parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.ScanConfig prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ScanConfig - used to define if you want server to return the detected document
     * image as well as the images of different detected fields.
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.ScanConfig}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanConfig)
        proto.ddx.v1.Service.ScanConfigOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanConfig.class, proto.ddx.v1.Service.ScanConfig.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.ScanConfig.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getReturnDocumentImageFieldBuilder();
          getReturnTextFieldImagesFieldBuilder();
          getReturnVisualFieldsFieldBuilder();
          getReturnDateFieldImagesFieldBuilder();
          getReturnSexFieldImagesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        returnDocumentImage_ = null;
        if (returnDocumentImageBuilder_ != null) {
          returnDocumentImageBuilder_.dispose();
          returnDocumentImageBuilder_ = null;
        }
        returnTextFieldImages_ = null;
        if (returnTextFieldImagesBuilder_ != null) {
          returnTextFieldImagesBuilder_.dispose();
          returnTextFieldImagesBuilder_ = null;
        }
        returnVisualFields_ = null;
        if (returnVisualFieldsBuilder_ != null) {
          returnVisualFieldsBuilder_.dispose();
          returnVisualFieldsBuilder_ = null;
        }
        returnDateFieldImages_ = null;
        if (returnDateFieldImagesBuilder_ != null) {
          returnDateFieldImagesBuilder_.dispose();
          returnDateFieldImagesBuilder_ = null;
        }
        returnSexFieldImages_ = null;
        if (returnSexFieldImagesBuilder_ != null) {
          returnSexFieldImagesBuilder_.dispose();
          returnSexFieldImagesBuilder_ = null;
        }
        skipDocumentDetection_ = false;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanConfig_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig getDefaultInstanceForType() {
        return proto.ddx.v1.Service.ScanConfig.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig build() {
        proto.ddx.v1.Service.ScanConfig result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanConfig buildPartial() {
        proto.ddx.v1.Service.ScanConfig result = new proto.ddx.v1.Service.ScanConfig(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.ddx.v1.Service.ScanConfig result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.returnDocumentImage_ = returnDocumentImageBuilder_ == null
              ? returnDocumentImage_
              : returnDocumentImageBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.returnTextFieldImages_ = returnTextFieldImagesBuilder_ == null
              ? returnTextFieldImages_
              : returnTextFieldImagesBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.returnVisualFields_ = returnVisualFieldsBuilder_ == null
              ? returnVisualFields_
              : returnVisualFieldsBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.returnDateFieldImages_ = returnDateFieldImagesBuilder_ == null
              ? returnDateFieldImages_
              : returnDateFieldImagesBuilder_.build();
          to_bitField0_ |= 0x00000008;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.returnSexFieldImages_ = returnSexFieldImagesBuilder_ == null
              ? returnSexFieldImages_
              : returnSexFieldImagesBuilder_.build();
          to_bitField0_ |= 0x00000010;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.skipDocumentDetection_ = skipDocumentDetection_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.ScanConfig) {
          return mergeFrom((proto.ddx.v1.Service.ScanConfig)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.ScanConfig other) {
        if (other == proto.ddx.v1.Service.ScanConfig.getDefaultInstance()) return this;
        if (other.hasReturnDocumentImage()) {
          mergeReturnDocumentImage(other.getReturnDocumentImage());
        }
        if (other.hasReturnTextFieldImages()) {
          mergeReturnTextFieldImages(other.getReturnTextFieldImages());
        }
        if (other.hasReturnVisualFields()) {
          mergeReturnVisualFields(other.getReturnVisualFields());
        }
        if (other.hasReturnDateFieldImages()) {
          mergeReturnDateFieldImages(other.getReturnDateFieldImages());
        }
        if (other.hasReturnSexFieldImages()) {
          mergeReturnSexFieldImages(other.getReturnSexFieldImages());
        }
        if (other.getSkipDocumentDetection() != false) {
          setSkipDocumentDetection(other.getSkipDocumentDetection());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                input.readMessage(
                    getReturnDocumentImageFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getReturnTextFieldImagesFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getReturnVisualFieldsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getReturnDateFieldImagesFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getReturnSexFieldImagesFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 48: {
                skipDocumentDetection_ = input.readBool();
                bitField0_ |= 0x00000020;
                break;
              } // case 48
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private proto.ddx.v1.Service.ScanConfig.ReturnImage returnDocumentImage_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnImage, proto.ddx.v1.Service.ScanConfig.ReturnImage.Builder, proto.ddx.v1.Service.ScanConfig.ReturnImageOrBuilder> returnDocumentImageBuilder_;
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       * @return Whether the returnDocumentImage field is set.
       */
      public boolean hasReturnDocumentImage() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       * @return The returnDocumentImage.
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnImage getReturnDocumentImage() {
        if (returnDocumentImageBuilder_ == null) {
          return returnDocumentImage_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnImage.getDefaultInstance() : returnDocumentImage_;
        } else {
          return returnDocumentImageBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       */
      public Builder setReturnDocumentImage(proto.ddx.v1.Service.ScanConfig.ReturnImage value) {
        if (returnDocumentImageBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnDocumentImage_ = value;
        } else {
          returnDocumentImageBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       */
      public Builder setReturnDocumentImage(
          proto.ddx.v1.Service.ScanConfig.ReturnImage.Builder builderForValue) {
        if (returnDocumentImageBuilder_ == null) {
          returnDocumentImage_ = builderForValue.build();
        } else {
          returnDocumentImageBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       */
      public Builder mergeReturnDocumentImage(proto.ddx.v1.Service.ScanConfig.ReturnImage value) {
        if (returnDocumentImageBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0) &&
            returnDocumentImage_ != null &&
            returnDocumentImage_ != proto.ddx.v1.Service.ScanConfig.ReturnImage.getDefaultInstance()) {
            getReturnDocumentImageBuilder().mergeFrom(value);
          } else {
            returnDocumentImage_ = value;
          }
        } else {
          returnDocumentImageBuilder_.mergeFrom(value);
        }
        if (returnDocumentImage_ != null) {
          bitField0_ |= 0x00000001;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       */
      public Builder clearReturnDocumentImage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        returnDocumentImage_ = null;
        if (returnDocumentImageBuilder_ != null) {
          returnDocumentImageBuilder_.dispose();
          returnDocumentImageBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnImage.Builder getReturnDocumentImageBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getReturnDocumentImageFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnImageOrBuilder getReturnDocumentImageOrBuilder() {
        if (returnDocumentImageBuilder_ != null) {
          return returnDocumentImageBuilder_.getMessageOrBuilder();
        } else {
          return returnDocumentImage_ == null ?
              proto.ddx.v1.Service.ScanConfig.ReturnImage.getDefaultInstance() : returnDocumentImage_;
        }
      }
      /**
       * <pre>
       * returnDetectedImage - must be set if you want server to return the image of the detected document.
       * used to specify to the server to return detected document
       * dewarped image. Unless this is a HARD REQUIREMENT we do not recommend to use
       * this due to its computational and data overhead.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnImage returnDocumentImage = 1 [json_name = "returnDocumentImage"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnImage, proto.ddx.v1.Service.ScanConfig.ReturnImage.Builder, proto.ddx.v1.Service.ScanConfig.ReturnImageOrBuilder> 
          getReturnDocumentImageFieldBuilder() {
        if (returnDocumentImageBuilder_ == null) {
          returnDocumentImageBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.ScanConfig.ReturnImage, proto.ddx.v1.Service.ScanConfig.ReturnImage.Builder, proto.ddx.v1.Service.ScanConfig.ReturnImageOrBuilder>(
                  getReturnDocumentImage(),
                  getParentForChildren(),
                  isClean());
          returnDocumentImage_ = null;
        }
        return returnDocumentImageBuilder_;
      }

      private proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages returnTextFieldImages_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImagesOrBuilder> returnTextFieldImagesBuilder_;
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       * @return Whether the returnTextFieldImages field is set.
       */
      public boolean hasReturnTextFieldImages() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       * @return The returnTextFieldImages.
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages getReturnTextFieldImages() {
        if (returnTextFieldImagesBuilder_ == null) {
          return returnTextFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.getDefaultInstance() : returnTextFieldImages_;
        } else {
          return returnTextFieldImagesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       */
      public Builder setReturnTextFieldImages(proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages value) {
        if (returnTextFieldImagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnTextFieldImages_ = value;
        } else {
          returnTextFieldImagesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       */
      public Builder setReturnTextFieldImages(
          proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.Builder builderForValue) {
        if (returnTextFieldImagesBuilder_ == null) {
          returnTextFieldImages_ = builderForValue.build();
        } else {
          returnTextFieldImagesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       */
      public Builder mergeReturnTextFieldImages(proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages value) {
        if (returnTextFieldImagesBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            returnTextFieldImages_ != null &&
            returnTextFieldImages_ != proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.getDefaultInstance()) {
            getReturnTextFieldImagesBuilder().mergeFrom(value);
          } else {
            returnTextFieldImages_ = value;
          }
        } else {
          returnTextFieldImagesBuilder_.mergeFrom(value);
        }
        if (returnTextFieldImages_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       */
      public Builder clearReturnTextFieldImages() {
        bitField0_ = (bitField0_ & ~0x00000002);
        returnTextFieldImages_ = null;
        if (returnTextFieldImagesBuilder_ != null) {
          returnTextFieldImagesBuilder_.dispose();
          returnTextFieldImagesBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.Builder getReturnTextFieldImagesBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getReturnTextFieldImagesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImagesOrBuilder getReturnTextFieldImagesOrBuilder() {
        if (returnTextFieldImagesBuilder_ != null) {
          return returnTextFieldImagesBuilder_.getMessageOrBuilder();
        } else {
          return returnTextFieldImages_ == null ?
              proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.getDefaultInstance() : returnTextFieldImages_;
        }
      }
      /**
       * <pre>
       * returnFieldImages - must be set if you want server to return the images of the detected text fields.
       * leaving this empty means that server will NOT return any text field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnTextFieldImages returnTextFieldImages = 2 [json_name = "returnTextFieldImages"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImagesOrBuilder> 
          getReturnTextFieldImagesFieldBuilder() {
        if (returnTextFieldImagesBuilder_ == null) {
          returnTextFieldImagesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnTextFieldImagesOrBuilder>(
                  getReturnTextFieldImages(),
                  getParentForChildren(),
                  isClean());
          returnTextFieldImages_ = null;
        }
        return returnTextFieldImagesBuilder_;
      }

      private proto.ddx.v1.Service.ScanConfig.ReturnVisualFields returnVisualFields_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnVisualFields, proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.Builder, proto.ddx.v1.Service.ScanConfig.ReturnVisualFieldsOrBuilder> returnVisualFieldsBuilder_;
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       * @return Whether the returnVisualFields field is set.
       */
      public boolean hasReturnVisualFields() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       * @return The returnVisualFields.
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnVisualFields getReturnVisualFields() {
        if (returnVisualFieldsBuilder_ == null) {
          return returnVisualFields_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.getDefaultInstance() : returnVisualFields_;
        } else {
          return returnVisualFieldsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       */
      public Builder setReturnVisualFields(proto.ddx.v1.Service.ScanConfig.ReturnVisualFields value) {
        if (returnVisualFieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnVisualFields_ = value;
        } else {
          returnVisualFieldsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       */
      public Builder setReturnVisualFields(
          proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.Builder builderForValue) {
        if (returnVisualFieldsBuilder_ == null) {
          returnVisualFields_ = builderForValue.build();
        } else {
          returnVisualFieldsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       */
      public Builder mergeReturnVisualFields(proto.ddx.v1.Service.ScanConfig.ReturnVisualFields value) {
        if (returnVisualFieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            returnVisualFields_ != null &&
            returnVisualFields_ != proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.getDefaultInstance()) {
            getReturnVisualFieldsBuilder().mergeFrom(value);
          } else {
            returnVisualFields_ = value;
          }
        } else {
          returnVisualFieldsBuilder_.mergeFrom(value);
        }
        if (returnVisualFields_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       */
      public Builder clearReturnVisualFields() {
        bitField0_ = (bitField0_ & ~0x00000004);
        returnVisualFields_ = null;
        if (returnVisualFieldsBuilder_ != null) {
          returnVisualFieldsBuilder_.dispose();
          returnVisualFieldsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.Builder getReturnVisualFieldsBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getReturnVisualFieldsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnVisualFieldsOrBuilder getReturnVisualFieldsOrBuilder() {
        if (returnVisualFieldsBuilder_ != null) {
          return returnVisualFieldsBuilder_.getMessageOrBuilder();
        } else {
          return returnVisualFields_ == null ?
              proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.getDefaultInstance() : returnVisualFields_;
        }
      }
      /**
       * <pre>
       * returnVisualFields - specify visual fields to return.
       * if left empty, NO visual fields will be returned.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnVisualFields returnVisualFields = 3 [json_name = "returnVisualFields"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnVisualFields, proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.Builder, proto.ddx.v1.Service.ScanConfig.ReturnVisualFieldsOrBuilder> 
          getReturnVisualFieldsFieldBuilder() {
        if (returnVisualFieldsBuilder_ == null) {
          returnVisualFieldsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.ScanConfig.ReturnVisualFields, proto.ddx.v1.Service.ScanConfig.ReturnVisualFields.Builder, proto.ddx.v1.Service.ScanConfig.ReturnVisualFieldsOrBuilder>(
                  getReturnVisualFields(),
                  getParentForChildren(),
                  isClean());
          returnVisualFields_ = null;
        }
        return returnVisualFieldsBuilder_;
      }

      private proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages returnDateFieldImages_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImagesOrBuilder> returnDateFieldImagesBuilder_;
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       * @return Whether the returnDateFieldImages field is set.
       */
      public boolean hasReturnDateFieldImages() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       * @return The returnDateFieldImages.
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages getReturnDateFieldImages() {
        if (returnDateFieldImagesBuilder_ == null) {
          return returnDateFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.getDefaultInstance() : returnDateFieldImages_;
        } else {
          return returnDateFieldImagesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       */
      public Builder setReturnDateFieldImages(proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages value) {
        if (returnDateFieldImagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnDateFieldImages_ = value;
        } else {
          returnDateFieldImagesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       */
      public Builder setReturnDateFieldImages(
          proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.Builder builderForValue) {
        if (returnDateFieldImagesBuilder_ == null) {
          returnDateFieldImages_ = builderForValue.build();
        } else {
          returnDateFieldImagesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       */
      public Builder mergeReturnDateFieldImages(proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages value) {
        if (returnDateFieldImagesBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            returnDateFieldImages_ != null &&
            returnDateFieldImages_ != proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.getDefaultInstance()) {
            getReturnDateFieldImagesBuilder().mergeFrom(value);
          } else {
            returnDateFieldImages_ = value;
          }
        } else {
          returnDateFieldImagesBuilder_.mergeFrom(value);
        }
        if (returnDateFieldImages_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       */
      public Builder clearReturnDateFieldImages() {
        bitField0_ = (bitField0_ & ~0x00000008);
        returnDateFieldImages_ = null;
        if (returnDateFieldImagesBuilder_ != null) {
          returnDateFieldImagesBuilder_.dispose();
          returnDateFieldImagesBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.Builder getReturnDateFieldImagesBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getReturnDateFieldImagesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImagesOrBuilder getReturnDateFieldImagesOrBuilder() {
        if (returnDateFieldImagesBuilder_ != null) {
          return returnDateFieldImagesBuilder_.getMessageOrBuilder();
        } else {
          return returnDateFieldImages_ == null ?
              proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.getDefaultInstance() : returnDateFieldImages_;
        }
      }
      /**
       * <pre>
       * returnDateFieldImages - must be se set if you want server to return the images of the detected date fields.
       * leaving this empty means that server will NOT return any date field images (text only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnDateFieldImages returnDateFieldImages = 4 [json_name = "returnDateFieldImages"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImagesOrBuilder> 
          getReturnDateFieldImagesFieldBuilder() {
        if (returnDateFieldImagesBuilder_ == null) {
          returnDateFieldImagesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnDateFieldImagesOrBuilder>(
                  getReturnDateFieldImages(),
                  getParentForChildren(),
                  isClean());
          returnDateFieldImages_ = null;
        }
        return returnDateFieldImagesBuilder_;
      }

      private proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages returnSexFieldImages_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImagesOrBuilder> returnSexFieldImagesBuilder_;
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       * @return Whether the returnSexFieldImages field is set.
       */
      public boolean hasReturnSexFieldImages() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       * @return The returnSexFieldImages.
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages getReturnSexFieldImages() {
        if (returnSexFieldImagesBuilder_ == null) {
          return returnSexFieldImages_ == null ? proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.getDefaultInstance() : returnSexFieldImages_;
        } else {
          return returnSexFieldImagesBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       */
      public Builder setReturnSexFieldImages(proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages value) {
        if (returnSexFieldImagesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          returnSexFieldImages_ = value;
        } else {
          returnSexFieldImagesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       */
      public Builder setReturnSexFieldImages(
          proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.Builder builderForValue) {
        if (returnSexFieldImagesBuilder_ == null) {
          returnSexFieldImages_ = builderForValue.build();
        } else {
          returnSexFieldImagesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       */
      public Builder mergeReturnSexFieldImages(proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages value) {
        if (returnSexFieldImagesBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            returnSexFieldImages_ != null &&
            returnSexFieldImages_ != proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.getDefaultInstance()) {
            getReturnSexFieldImagesBuilder().mergeFrom(value);
          } else {
            returnSexFieldImages_ = value;
          }
        } else {
          returnSexFieldImagesBuilder_.mergeFrom(value);
        }
        if (returnSexFieldImages_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       */
      public Builder clearReturnSexFieldImages() {
        bitField0_ = (bitField0_ & ~0x00000010);
        returnSexFieldImages_ = null;
        if (returnSexFieldImagesBuilder_ != null) {
          returnSexFieldImagesBuilder_.dispose();
          returnSexFieldImagesBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.Builder getReturnSexFieldImagesBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getReturnSexFieldImagesFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImagesOrBuilder getReturnSexFieldImagesOrBuilder() {
        if (returnSexFieldImagesBuilder_ != null) {
          return returnSexFieldImagesBuilder_.getMessageOrBuilder();
        } else {
          return returnSexFieldImages_ == null ?
              proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.getDefaultInstance() : returnSexFieldImages_;
        }
      }
      /**
       * <pre>
       * returnSexFieldImages - must be set if you want server to return the images of the detected sex fields.
       * leaving this empty means that server will NOT return any sex field images (text and enum only).
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig.ReturnSexFieldImages returnSexFieldImages = 5 [json_name = "returnSexFieldImages"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImagesOrBuilder> 
          getReturnSexFieldImagesFieldBuilder() {
        if (returnSexFieldImagesBuilder_ == null) {
          returnSexFieldImagesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages, proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImages.Builder, proto.ddx.v1.Service.ScanConfig.ReturnSexFieldImagesOrBuilder>(
                  getReturnSexFieldImages(),
                  getParentForChildren(),
                  isClean());
          returnSexFieldImages_ = null;
        }
        return returnSexFieldImagesBuilder_;
      }

      private boolean skipDocumentDetection_ ;
      /**
       * <pre>
       * skipDocumentDetection - if you want to "skip" document detection, set this to true.
       * if you already have a full-size image of a document (or already cropped image of a document)
       * set this to true.
       * </pre>
       *
       * <code>bool skipDocumentDetection = 6 [json_name = "skipDocumentDetection"];</code>
       * @return The skipDocumentDetection.
       */
      @java.lang.Override
      public boolean getSkipDocumentDetection() {
        return skipDocumentDetection_;
      }
      /**
       * <pre>
       * skipDocumentDetection - if you want to "skip" document detection, set this to true.
       * if you already have a full-size image of a document (or already cropped image of a document)
       * set this to true.
       * </pre>
       *
       * <code>bool skipDocumentDetection = 6 [json_name = "skipDocumentDetection"];</code>
       * @param value The skipDocumentDetection to set.
       * @return This builder for chaining.
       */
      public Builder setSkipDocumentDetection(boolean value) {

        skipDocumentDetection_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * skipDocumentDetection - if you want to "skip" document detection, set this to true.
       * if you already have a full-size image of a document (or already cropped image of a document)
       * set this to true.
       * </pre>
       *
       * <code>bool skipDocumentDetection = 6 [json_name = "skipDocumentDetection"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSkipDocumentDetection() {
        bitField0_ = (bitField0_ & ~0x00000020);
        skipDocumentDetection_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanConfig)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanConfig)
    private static final proto.ddx.v1.Service.ScanConfig DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanConfig();
    }

    public static proto.ddx.v1.Service.ScanConfig getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScanConfig>
        PARSER = new com.google.protobuf.AbstractParser<ScanConfig>() {
      @java.lang.Override
      public ScanConfig parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ScanConfig> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScanConfig> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScanDocumentRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanDocumentRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
     * </pre>
     *
     * <code>bytes imageJpeg = 1 [json_name = "imageJpeg"];</code>
     * @return The imageJpeg.
     */
    com.google.protobuf.ByteString getImageJpeg();

    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
     * @return Whether the config field is set.
     */
    boolean hasConfig();
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
     * @return The config.
     */
    proto.ddx.v1.Service.ScanConfig getConfig();
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
     */
    proto.ddx.v1.Service.ScanConfigOrBuilder getConfigOrBuilder();
  }
  /**
   * <pre>
   * ScanDocumentRequest
   * </pre>
   *
   * Protobuf type {@code proto.ddx.v1.ScanDocumentRequest}
   */
  public static final class ScanDocumentRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanDocumentRequest)
      ScanDocumentRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ScanDocumentRequest.class.getName());
    }
    // Use ScanDocumentRequest.newBuilder() to construct.
    private ScanDocumentRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ScanDocumentRequest() {
      imageJpeg_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.ScanDocumentRequest.class, proto.ddx.v1.Service.ScanDocumentRequest.Builder.class);
    }

    private int bitField0_;
    public static final int IMAGEJPEG_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString imageJpeg_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
     * </pre>
     *
     * <code>bytes imageJpeg = 1 [json_name = "imageJpeg"];</code>
     * @return The imageJpeg.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getImageJpeg() {
      return imageJpeg_;
    }

    public static final int CONFIG_FIELD_NUMBER = 2;
    private proto.ddx.v1.Service.ScanConfig config_;
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
     * @return Whether the config field is set.
     */
    @java.lang.Override
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
     * @return The config.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig getConfig() {
      return config_ == null ? proto.ddx.v1.Service.ScanConfig.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfigOrBuilder getConfigOrBuilder() {
      return config_ == null ? proto.ddx.v1.Service.ScanConfig.getDefaultInstance() : config_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!imageJpeg_.isEmpty()) {
        output.writeBytes(1, imageJpeg_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getConfig());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!imageJpeg_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, imageJpeg_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getConfig());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.ScanDocumentRequest)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.ScanDocumentRequest other = (proto.ddx.v1.Service.ScanDocumentRequest) obj;

      if (!getImageJpeg()
          .equals(other.getImageJpeg())) return false;
      if (hasConfig() != other.hasConfig()) return false;
      if (hasConfig()) {
        if (!getConfig()
            .equals(other.getConfig())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + IMAGEJPEG_FIELD_NUMBER;
      hash = (53 * hash) + getImageJpeg().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.ScanDocumentRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.ScanDocumentRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanDocumentRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.ScanDocumentRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ScanDocumentRequest
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.ScanDocumentRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanDocumentRequest)
        proto.ddx.v1.Service.ScanDocumentRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanDocumentRequest.class, proto.ddx.v1.Service.ScanDocumentRequest.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.ScanDocumentRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getConfigFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        imageJpeg_ = com.google.protobuf.ByteString.EMPTY;
        config_ = null;
        if (configBuilder_ != null) {
          configBuilder_.dispose();
          configBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentRequest_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanDocumentRequest getDefaultInstanceForType() {
        return proto.ddx.v1.Service.ScanDocumentRequest.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanDocumentRequest build() {
        proto.ddx.v1.Service.ScanDocumentRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanDocumentRequest buildPartial() {
        proto.ddx.v1.Service.ScanDocumentRequest result = new proto.ddx.v1.Service.ScanDocumentRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.ddx.v1.Service.ScanDocumentRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.imageJpeg_ = imageJpeg_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.config_ = configBuilder_ == null
              ? config_
              : configBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.ScanDocumentRequest) {
          return mergeFrom((proto.ddx.v1.Service.ScanDocumentRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.ScanDocumentRequest other) {
        if (other == proto.ddx.v1.Service.ScanDocumentRequest.getDefaultInstance()) return this;
        if (other.getImageJpeg() != com.google.protobuf.ByteString.EMPTY) {
          setImageJpeg(other.getImageJpeg());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                imageJpeg_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                input.readMessage(
                    getConfigFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString imageJpeg_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes imageJpeg = 1 [json_name = "imageJpeg"];</code>
       * @return The imageJpeg.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getImageJpeg() {
        return imageJpeg_;
      }
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes imageJpeg = 1 [json_name = "imageJpeg"];</code>
       * @param value The imageJpeg to set.
       * @return This builder for chaining.
       */
      public Builder setImageJpeg(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        imageJpeg_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes imageJpeg = 1 [json_name = "imageJpeg"];</code>
       * @return This builder for chaining.
       */
      public Builder clearImageJpeg() {
        bitField0_ = (bitField0_ & ~0x00000001);
        imageJpeg_ = getDefaultInstance().getImageJpeg();
        onChanged();
        return this;
      }

      private proto.ddx.v1.Service.ScanConfig config_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig, proto.ddx.v1.Service.ScanConfig.Builder, proto.ddx.v1.Service.ScanConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       * @return Whether the config field is set.
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       * @return The config.
       */
      public proto.ddx.v1.Service.ScanConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? proto.ddx.v1.Service.ScanConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       */
      public Builder setConfig(proto.ddx.v1.Service.ScanConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       */
      public Builder setConfig(
          proto.ddx.v1.Service.ScanConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       */
      public Builder mergeConfig(proto.ddx.v1.Service.ScanConfig value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            config_ != null &&
            config_ != proto.ddx.v1.Service.ScanConfig.getDefaultInstance()) {
            getConfigBuilder().mergeFrom(value);
          } else {
            config_ = value;
          }
        } else {
          configBuilder_.mergeFrom(value);
        }
        if (config_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       */
      public Builder clearConfig() {
        bitField0_ = (bitField0_ & ~0x00000002);
        config_ = null;
        if (configBuilder_ != null) {
          configBuilder_.dispose();
          configBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.Builder getConfigBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       */
      public proto.ddx.v1.Service.ScanConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              proto.ddx.v1.Service.ScanConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 2 [json_name = "config"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig, proto.ddx.v1.Service.ScanConfig.Builder, proto.ddx.v1.Service.ScanConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.ScanConfig, proto.ddx.v1.Service.ScanConfig.Builder, proto.ddx.v1.Service.ScanConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanDocumentRequest)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanDocumentRequest)
    private static final proto.ddx.v1.Service.ScanDocumentRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanDocumentRequest();
    }

    public static proto.ddx.v1.Service.ScanDocumentRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScanDocumentRequest>
        PARSER = new com.google.protobuf.AbstractParser<ScanDocumentRequest>() {
      @java.lang.Override
      public ScanDocumentRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ScanDocumentRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScanDocumentRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.ScanDocumentRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface QuadOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.Quad)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>float x1 = 1 [json_name = "x1"];</code>
     * @return The x1.
     */
    float getX1();

    /**
     * <code>float y1 = 2 [json_name = "y1"];</code>
     * @return The y1.
     */
    float getY1();

    /**
     * <code>float x2 = 3 [json_name = "x2"];</code>
     * @return The x2.
     */
    float getX2();

    /**
     * <code>float y2 = 4 [json_name = "y2"];</code>
     * @return The y2.
     */
    float getY2();

    /**
     * <code>float x3 = 5 [json_name = "x3"];</code>
     * @return The x3.
     */
    float getX3();

    /**
     * <code>float y3 = 6 [json_name = "y3"];</code>
     * @return The y3.
     */
    float getY3();

    /**
     * <code>float x4 = 7 [json_name = "x4"];</code>
     * @return The x4.
     */
    float getX4();

    /**
     * <code>float y4 = 8 [json_name = "y4"];</code>
     * @return The y4.
     */
    float getY4();
  }
  /**
   * <pre>
   * Quad
   * </pre>
   *
   * Protobuf type {@code proto.ddx.v1.Quad}
   */
  public static final class Quad extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.Quad)
      QuadOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Quad.class.getName());
    }
    // Use Quad.newBuilder() to construct.
    private Quad(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Quad() {
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Quad_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Quad_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.Quad.class, proto.ddx.v1.Service.Quad.Builder.class);
    }

    public static final int X1_FIELD_NUMBER = 1;
    private float x1_ = 0F;
    /**
     * <code>float x1 = 1 [json_name = "x1"];</code>
     * @return The x1.
     */
    @java.lang.Override
    public float getX1() {
      return x1_;
    }

    public static final int Y1_FIELD_NUMBER = 2;
    private float y1_ = 0F;
    /**
     * <code>float y1 = 2 [json_name = "y1"];</code>
     * @return The y1.
     */
    @java.lang.Override
    public float getY1() {
      return y1_;
    }

    public static final int X2_FIELD_NUMBER = 3;
    private float x2_ = 0F;
    /**
     * <code>float x2 = 3 [json_name = "x2"];</code>
     * @return The x2.
     */
    @java.lang.Override
    public float getX2() {
      return x2_;
    }

    public static final int Y2_FIELD_NUMBER = 4;
    private float y2_ = 0F;
    /**
     * <code>float y2 = 4 [json_name = "y2"];</code>
     * @return The y2.
     */
    @java.lang.Override
    public float getY2() {
      return y2_;
    }

    public static final int X3_FIELD_NUMBER = 5;
    private float x3_ = 0F;
    /**
     * <code>float x3 = 5 [json_name = "x3"];</code>
     * @return The x3.
     */
    @java.lang.Override
    public float getX3() {
      return x3_;
    }

    public static final int Y3_FIELD_NUMBER = 6;
    private float y3_ = 0F;
    /**
     * <code>float y3 = 6 [json_name = "y3"];</code>
     * @return The y3.
     */
    @java.lang.Override
    public float getY3() {
      return y3_;
    }

    public static final int X4_FIELD_NUMBER = 7;
    private float x4_ = 0F;
    /**
     * <code>float x4 = 7 [json_name = "x4"];</code>
     * @return The x4.
     */
    @java.lang.Override
    public float getX4() {
      return x4_;
    }

    public static final int Y4_FIELD_NUMBER = 8;
    private float y4_ = 0F;
    /**
     * <code>float y4 = 8 [json_name = "y4"];</code>
     * @return The y4.
     */
    @java.lang.Override
    public float getY4() {
      return y4_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (java.lang.Float.floatToRawIntBits(x1_) != 0) {
        output.writeFloat(1, x1_);
      }
      if (java.lang.Float.floatToRawIntBits(y1_) != 0) {
        output.writeFloat(2, y1_);
      }
      if (java.lang.Float.floatToRawIntBits(x2_) != 0) {
        output.writeFloat(3, x2_);
      }
      if (java.lang.Float.floatToRawIntBits(y2_) != 0) {
        output.writeFloat(4, y2_);
      }
      if (java.lang.Float.floatToRawIntBits(x3_) != 0) {
        output.writeFloat(5, x3_);
      }
      if (java.lang.Float.floatToRawIntBits(y3_) != 0) {
        output.writeFloat(6, y3_);
      }
      if (java.lang.Float.floatToRawIntBits(x4_) != 0) {
        output.writeFloat(7, x4_);
      }
      if (java.lang.Float.floatToRawIntBits(y4_) != 0) {
        output.writeFloat(8, y4_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (java.lang.Float.floatToRawIntBits(x1_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(1, x1_);
      }
      if (java.lang.Float.floatToRawIntBits(y1_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(2, y1_);
      }
      if (java.lang.Float.floatToRawIntBits(x2_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(3, x2_);
      }
      if (java.lang.Float.floatToRawIntBits(y2_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(4, y2_);
      }
      if (java.lang.Float.floatToRawIntBits(x3_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(5, x3_);
      }
      if (java.lang.Float.floatToRawIntBits(y3_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(6, y3_);
      }
      if (java.lang.Float.floatToRawIntBits(x4_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(7, x4_);
      }
      if (java.lang.Float.floatToRawIntBits(y4_) != 0) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(8, y4_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.Quad)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.Quad other = (proto.ddx.v1.Service.Quad) obj;

      if (java.lang.Float.floatToIntBits(getX1())
          != java.lang.Float.floatToIntBits(
              other.getX1())) return false;
      if (java.lang.Float.floatToIntBits(getY1())
          != java.lang.Float.floatToIntBits(
              other.getY1())) return false;
      if (java.lang.Float.floatToIntBits(getX2())
          != java.lang.Float.floatToIntBits(
              other.getX2())) return false;
      if (java.lang.Float.floatToIntBits(getY2())
          != java.lang.Float.floatToIntBits(
              other.getY2())) return false;
      if (java.lang.Float.floatToIntBits(getX3())
          != java.lang.Float.floatToIntBits(
              other.getX3())) return false;
      if (java.lang.Float.floatToIntBits(getY3())
          != java.lang.Float.floatToIntBits(
              other.getY3())) return false;
      if (java.lang.Float.floatToIntBits(getX4())
          != java.lang.Float.floatToIntBits(
              other.getX4())) return false;
      if (java.lang.Float.floatToIntBits(getY4())
          != java.lang.Float.floatToIntBits(
              other.getY4())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + X1_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX1());
      hash = (37 * hash) + Y1_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY1());
      hash = (37 * hash) + X2_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX2());
      hash = (37 * hash) + Y2_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY2());
      hash = (37 * hash) + X3_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX3());
      hash = (37 * hash) + Y3_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY3());
      hash = (37 * hash) + X4_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getX4());
      hash = (37 * hash) + Y4_FIELD_NUMBER;
      hash = (53 * hash) + java.lang.Float.floatToIntBits(
          getY4());
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.Quad parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.Quad parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.Quad parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.Quad parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.Quad prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * Quad
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.Quad}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.Quad)
        proto.ddx.v1.Service.QuadOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Quad_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Quad_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.Quad.class, proto.ddx.v1.Service.Quad.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.Quad.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        x1_ = 0F;
        y1_ = 0F;
        x2_ = 0F;
        y2_ = 0F;
        x3_ = 0F;
        y3_ = 0F;
        x4_ = 0F;
        y4_ = 0F;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Quad_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.Quad getDefaultInstanceForType() {
        return proto.ddx.v1.Service.Quad.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.Quad build() {
        proto.ddx.v1.Service.Quad result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.Quad buildPartial() {
        proto.ddx.v1.Service.Quad result = new proto.ddx.v1.Service.Quad(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.ddx.v1.Service.Quad result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.x1_ = x1_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.y1_ = y1_;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.x2_ = x2_;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.y2_ = y2_;
        }
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.x3_ = x3_;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.y3_ = y3_;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.x4_ = x4_;
        }
        if (((from_bitField0_ & 0x00000080) != 0)) {
          result.y4_ = y4_;
        }
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.Quad) {
          return mergeFrom((proto.ddx.v1.Service.Quad)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.Quad other) {
        if (other == proto.ddx.v1.Service.Quad.getDefaultInstance()) return this;
        if (other.getX1() != 0F) {
          setX1(other.getX1());
        }
        if (other.getY1() != 0F) {
          setY1(other.getY1());
        }
        if (other.getX2() != 0F) {
          setX2(other.getX2());
        }
        if (other.getY2() != 0F) {
          setY2(other.getY2());
        }
        if (other.getX3() != 0F) {
          setX3(other.getX3());
        }
        if (other.getY3() != 0F) {
          setY3(other.getY3());
        }
        if (other.getX4() != 0F) {
          setX4(other.getX4());
        }
        if (other.getY4() != 0F) {
          setY4(other.getY4());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 13: {
                x1_ = input.readFloat();
                bitField0_ |= 0x00000001;
                break;
              } // case 13
              case 21: {
                y1_ = input.readFloat();
                bitField0_ |= 0x00000002;
                break;
              } // case 21
              case 29: {
                x2_ = input.readFloat();
                bitField0_ |= 0x00000004;
                break;
              } // case 29
              case 37: {
                y2_ = input.readFloat();
                bitField0_ |= 0x00000008;
                break;
              } // case 37
              case 45: {
                x3_ = input.readFloat();
                bitField0_ |= 0x00000010;
                break;
              } // case 45
              case 53: {
                y3_ = input.readFloat();
                bitField0_ |= 0x00000020;
                break;
              } // case 53
              case 61: {
                x4_ = input.readFloat();
                bitField0_ |= 0x00000040;
                break;
              } // case 61
              case 69: {
                y4_ = input.readFloat();
                bitField0_ |= 0x00000080;
                break;
              } // case 69
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private float x1_ ;
      /**
       * <code>float x1 = 1 [json_name = "x1"];</code>
       * @return The x1.
       */
      @java.lang.Override
      public float getX1() {
        return x1_;
      }
      /**
       * <code>float x1 = 1 [json_name = "x1"];</code>
       * @param value The x1 to set.
       * @return This builder for chaining.
       */
      public Builder setX1(float value) {

        x1_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>float x1 = 1 [json_name = "x1"];</code>
       * @return This builder for chaining.
       */
      public Builder clearX1() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x1_ = 0F;
        onChanged();
        return this;
      }

      private float y1_ ;
      /**
       * <code>float y1 = 2 [json_name = "y1"];</code>
       * @return The y1.
       */
      @java.lang.Override
      public float getY1() {
        return y1_;
      }
      /**
       * <code>float y1 = 2 [json_name = "y1"];</code>
       * @param value The y1 to set.
       * @return This builder for chaining.
       */
      public Builder setY1(float value) {

        y1_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>float y1 = 2 [json_name = "y1"];</code>
       * @return This builder for chaining.
       */
      public Builder clearY1() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y1_ = 0F;
        onChanged();
        return this;
      }

      private float x2_ ;
      /**
       * <code>float x2 = 3 [json_name = "x2"];</code>
       * @return The x2.
       */
      @java.lang.Override
      public float getX2() {
        return x2_;
      }
      /**
       * <code>float x2 = 3 [json_name = "x2"];</code>
       * @param value The x2 to set.
       * @return This builder for chaining.
       */
      public Builder setX2(float value) {

        x2_ = value;
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <code>float x2 = 3 [json_name = "x2"];</code>
       * @return This builder for chaining.
       */
      public Builder clearX2() {
        bitField0_ = (bitField0_ & ~0x00000004);
        x2_ = 0F;
        onChanged();
        return this;
      }

      private float y2_ ;
      /**
       * <code>float y2 = 4 [json_name = "y2"];</code>
       * @return The y2.
       */
      @java.lang.Override
      public float getY2() {
        return y2_;
      }
      /**
       * <code>float y2 = 4 [json_name = "y2"];</code>
       * @param value The y2 to set.
       * @return This builder for chaining.
       */
      public Builder setY2(float value) {

        y2_ = value;
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>float y2 = 4 [json_name = "y2"];</code>
       * @return This builder for chaining.
       */
      public Builder clearY2() {
        bitField0_ = (bitField0_ & ~0x00000008);
        y2_ = 0F;
        onChanged();
        return this;
      }

      private float x3_ ;
      /**
       * <code>float x3 = 5 [json_name = "x3"];</code>
       * @return The x3.
       */
      @java.lang.Override
      public float getX3() {
        return x3_;
      }
      /**
       * <code>float x3 = 5 [json_name = "x3"];</code>
       * @param value The x3 to set.
       * @return This builder for chaining.
       */
      public Builder setX3(float value) {

        x3_ = value;
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <code>float x3 = 5 [json_name = "x3"];</code>
       * @return This builder for chaining.
       */
      public Builder clearX3() {
        bitField0_ = (bitField0_ & ~0x00000010);
        x3_ = 0F;
        onChanged();
        return this;
      }

      private float y3_ ;
      /**
       * <code>float y3 = 6 [json_name = "y3"];</code>
       * @return The y3.
       */
      @java.lang.Override
      public float getY3() {
        return y3_;
      }
      /**
       * <code>float y3 = 6 [json_name = "y3"];</code>
       * @param value The y3 to set.
       * @return This builder for chaining.
       */
      public Builder setY3(float value) {

        y3_ = value;
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <code>float y3 = 6 [json_name = "y3"];</code>
       * @return This builder for chaining.
       */
      public Builder clearY3() {
        bitField0_ = (bitField0_ & ~0x00000020);
        y3_ = 0F;
        onChanged();
        return this;
      }

      private float x4_ ;
      /**
       * <code>float x4 = 7 [json_name = "x4"];</code>
       * @return The x4.
       */
      @java.lang.Override
      public float getX4() {
        return x4_;
      }
      /**
       * <code>float x4 = 7 [json_name = "x4"];</code>
       * @param value The x4 to set.
       * @return This builder for chaining.
       */
      public Builder setX4(float value) {

        x4_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <code>float x4 = 7 [json_name = "x4"];</code>
       * @return This builder for chaining.
       */
      public Builder clearX4() {
        bitField0_ = (bitField0_ & ~0x00000040);
        x4_ = 0F;
        onChanged();
        return this;
      }

      private float y4_ ;
      /**
       * <code>float y4 = 8 [json_name = "y4"];</code>
       * @return The y4.
       */
      @java.lang.Override
      public float getY4() {
        return y4_;
      }
      /**
       * <code>float y4 = 8 [json_name = "y4"];</code>
       * @param value The y4 to set.
       * @return This builder for chaining.
       */
      public Builder setY4(float value) {

        y4_ = value;
        bitField0_ |= 0x00000080;
        onChanged();
        return this;
      }
      /**
       * <code>float y4 = 8 [json_name = "y4"];</code>
       * @return This builder for chaining.
       */
      public Builder clearY4() {
        bitField0_ = (bitField0_ & ~0x00000080);
        y4_ = 0F;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.Quad)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.Quad)
    private static final proto.ddx.v1.Service.Quad DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.Quad();
    }

    public static proto.ddx.v1.Service.Quad getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Quad>
        PARSER = new com.google.protobuf.AbstractParser<Quad>() {
      @java.lang.Override
      public Quad parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Quad> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Quad> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.Quad getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface MrzOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.Mrz)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * Mrz status
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <pre>
     * Mrz status
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
     * @return The status.
     */
    proto.ddx.v1.Service.Mrz.Status getStatus();

    /**
     * <pre>
     * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
     * </pre>
     *
     * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
     * @return Whether the fields field is set.
     */
    boolean hasFields();
    /**
     * <pre>
     * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
     * </pre>
     *
     * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
     * @return The fields.
     */
    proto.ddx.v1.Mrz.MrzFields getFields();
    /**
     * <pre>
     * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
     * </pre>
     *
     * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
     */
    proto.ddx.v1.Mrz.MrzFieldsOrBuilder getFieldsOrBuilder();

    /**
     * <pre>
     * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
     * Depending on MRZ type, this field will contain one, two or three string values.
     * </pre>
     *
     * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
     * @return A list containing the mrzCode.
     */
    java.util.List<java.lang.String>
        getMrzCodeList();
    /**
     * <pre>
     * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
     * Depending on MRZ type, this field will contain one, two or three string values.
     * </pre>
     *
     * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
     * @return The count of mrzCode.
     */
    int getMrzCodeCount();
    /**
     * <pre>
     * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
     * Depending on MRZ type, this field will contain one, two or three string values.
     * </pre>
     *
     * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
     * @param index The index of the element to return.
     * @return The mrzCode at the given index.
     */
    java.lang.String getMrzCode(int index);
    /**
     * <pre>
     * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
     * Depending on MRZ type, this field will contain one, two or three string values.
     * </pre>
     *
     * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the mrzCode at the given index.
     */
    com.google.protobuf.ByteString
        getMrzCodeBytes(int index);
  }
  /**
   * <pre>
   * MrzResult
   * </pre>
   *
   * Protobuf type {@code proto.ddx.v1.Mrz}
   */
  public static final class Mrz extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.Mrz)
      MrzOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        Mrz.class.getName());
    }
    // Use Mrz.newBuilder() to construct.
    private Mrz(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private Mrz() {
      status_ = 0;
      mrzCode_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Mrz_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Mrz_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.Mrz.class, proto.ddx.v1.Service.Mrz.Builder.class);
    }

    /**
     * <pre>
     * Mrz Status
     * </pre>
     *
     * Protobuf enum {@code proto.ddx.v1.Mrz.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Mrz successfully detected, read and parsed
       * </pre>
       *
       * <code>STATUS_OK = 0;</code>
       */
      STATUS_OK(0),
      /**
       * <pre>
       * Mrz successfully detected, but value that was OCR-ed was not a valid MRZ format
       * </pre>
       *
       * <code>STATUS_INVALID_FORMAT = 1;</code>
       */
      STATUS_INVALID_FORMAT(1),
      /**
       * <pre>
       * Mrz successfully detected, read but checksum digits did not match the content encoded in the MRZ
       * </pre>
       *
       * <code>STATUS_CHECK_DIGIT_INVALID = 2;</code>
       */
      STATUS_CHECK_DIGIT_INVALID(2),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          Status.class.getName());
      }
      /**
       * <pre>
       * Mrz successfully detected, read and parsed
       * </pre>
       *
       * <code>STATUS_OK = 0;</code>
       */
      public static final int STATUS_OK_VALUE = 0;
      /**
       * <pre>
       * Mrz successfully detected, but value that was OCR-ed was not a valid MRZ format
       * </pre>
       *
       * <code>STATUS_INVALID_FORMAT = 1;</code>
       */
      public static final int STATUS_INVALID_FORMAT_VALUE = 1;
      /**
       * <pre>
       * Mrz successfully detected, read but checksum digits did not match the content encoded in the MRZ
       * </pre>
       *
       * <code>STATUS_CHECK_DIGIT_INVALID = 2;</code>
       */
      public static final int STATUS_CHECK_DIGIT_INVALID_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Status forNumber(int value) {
        switch (value) {
          case 0: return STATUS_OK;
          case 1: return STATUS_INVALID_FORMAT;
          case 2: return STATUS_CHECK_DIGIT_INVALID;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return proto.ddx.v1.Service.Mrz.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.ddx.v1.Mrz.Status)
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_ = 0;
    /**
     * <pre>
     * Mrz status
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <pre>
     * Mrz status
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
     * @return The status.
     */
    @java.lang.Override public proto.ddx.v1.Service.Mrz.Status getStatus() {
      proto.ddx.v1.Service.Mrz.Status result = proto.ddx.v1.Service.Mrz.Status.forNumber(status_);
      return result == null ? proto.ddx.v1.Service.Mrz.Status.UNRECOGNIZED : result;
    }

    public static final int FIELDS_FIELD_NUMBER = 2;
    private proto.ddx.v1.Mrz.MrzFields fields_;
    /**
     * <pre>
     * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
     * </pre>
     *
     * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
     * @return Whether the fields field is set.
     */
    @java.lang.Override
    public boolean hasFields() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
     * </pre>
     *
     * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
     * @return The fields.
     */
    @java.lang.Override
    public proto.ddx.v1.Mrz.MrzFields getFields() {
      return fields_ == null ? proto.ddx.v1.Mrz.MrzFields.getDefaultInstance() : fields_;
    }
    /**
     * <pre>
     * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
     * </pre>
     *
     * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Mrz.MrzFieldsOrBuilder getFieldsOrBuilder() {
      return fields_ == null ? proto.ddx.v1.Mrz.MrzFields.getDefaultInstance() : fields_;
    }

    public static final int MRZ_CODE_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.LazyStringArrayList mrzCode_ =
        com.google.protobuf.LazyStringArrayList.emptyList();
    /**
     * <pre>
     * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
     * Depending on MRZ type, this field will contain one, two or three string values.
     * </pre>
     *
     * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
     * @return A list containing the mrzCode.
     */
    public com.google.protobuf.ProtocolStringList
        getMrzCodeList() {
      return mrzCode_;
    }
    /**
     * <pre>
     * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
     * Depending on MRZ type, this field will contain one, two or three string values.
     * </pre>
     *
     * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
     * @return The count of mrzCode.
     */
    public int getMrzCodeCount() {
      return mrzCode_.size();
    }
    /**
     * <pre>
     * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
     * Depending on MRZ type, this field will contain one, two or three string values.
     * </pre>
     *
     * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
     * @param index The index of the element to return.
     * @return The mrzCode at the given index.
     */
    public java.lang.String getMrzCode(int index) {
      return mrzCode_.get(index);
    }
    /**
     * <pre>
     * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
     * Depending on MRZ type, this field will contain one, two or three string values.
     * </pre>
     *
     * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
     * @param index The index of the value to return.
     * @return The bytes of the mrzCode at the given index.
     */
    public com.google.protobuf.ByteString
        getMrzCodeBytes(int index) {
      return mrzCode_.getByteString(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != proto.ddx.v1.Service.Mrz.Status.STATUS_OK.getNumber()) {
        output.writeEnum(1, status_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getFields());
      }
      for (int i = 0; i < mrzCode_.size(); i++) {
        com.google.protobuf.GeneratedMessage.writeString(output, 3, mrzCode_.getRaw(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != proto.ddx.v1.Service.Mrz.Status.STATUS_OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getFields());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mrzCode_.size(); i++) {
          dataSize += computeStringSizeNoTag(mrzCode_.getRaw(i));
        }
        size += dataSize;
        size += 1 * getMrzCodeList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.Mrz)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.Mrz other = (proto.ddx.v1.Service.Mrz) obj;

      if (status_ != other.status_) return false;
      if (hasFields() != other.hasFields()) return false;
      if (hasFields()) {
        if (!getFields()
            .equals(other.getFields())) return false;
      }
      if (!getMrzCodeList()
          .equals(other.getMrzCodeList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      if (hasFields()) {
        hash = (37 * hash) + FIELDS_FIELD_NUMBER;
        hash = (53 * hash) + getFields().hashCode();
      }
      if (getMrzCodeCount() > 0) {
        hash = (37 * hash) + MRZ_CODE_FIELD_NUMBER;
        hash = (53 * hash) + getMrzCodeList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.Mrz parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.Mrz parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.Mrz parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.Mrz parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.Mrz prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * MrzResult
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.Mrz}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.Mrz)
        proto.ddx.v1.Service.MrzOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Mrz_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Mrz_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.Mrz.class, proto.ddx.v1.Service.Mrz.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.Mrz.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getFieldsFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        status_ = 0;
        fields_ = null;
        if (fieldsBuilder_ != null) {
          fieldsBuilder_.dispose();
          fieldsBuilder_ = null;
        }
        mrzCode_ =
            com.google.protobuf.LazyStringArrayList.emptyList();
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_Mrz_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.Mrz getDefaultInstanceForType() {
        return proto.ddx.v1.Service.Mrz.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.Mrz build() {
        proto.ddx.v1.Service.Mrz result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.Mrz buildPartial() {
        proto.ddx.v1.Service.Mrz result = new proto.ddx.v1.Service.Mrz(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.ddx.v1.Service.Mrz result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.status_ = status_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.fields_ = fieldsBuilder_ == null
              ? fields_
              : fieldsBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          mrzCode_.makeImmutable();
          result.mrzCode_ = mrzCode_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.Mrz) {
          return mergeFrom((proto.ddx.v1.Service.Mrz)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.Mrz other) {
        if (other == proto.ddx.v1.Service.Mrz.getDefaultInstance()) return this;
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.hasFields()) {
          mergeFields(other.getFields());
        }
        if (!other.mrzCode_.isEmpty()) {
          if (mrzCode_.isEmpty()) {
            mrzCode_ = other.mrzCode_;
            bitField0_ |= 0x00000004;
          } else {
            ensureMrzCodeIsMutable();
            mrzCode_.addAll(other.mrzCode_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                status_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getFieldsFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                java.lang.String s = input.readStringRequireUtf8();
                ensureMrzCodeIsMutable();
                mrzCode_.add(s);
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int status_ = 0;
      /**
       * <pre>
       * Mrz status
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
       * @return The enum numeric value on the wire for status.
       */
      @java.lang.Override public int getStatusValue() {
        return status_;
      }
      /**
       * <pre>
       * Mrz status
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mrz status
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
       * @return The status.
       */
      @java.lang.Override
      public proto.ddx.v1.Service.Mrz.Status getStatus() {
        proto.ddx.v1.Service.Mrz.Status result = proto.ddx.v1.Service.Mrz.Status.forNumber(status_);
        return result == null ? proto.ddx.v1.Service.Mrz.Status.UNRECOGNIZED : result;
      }
      /**
       * <pre>
       * Mrz status
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(proto.ddx.v1.Service.Mrz.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Mrz status
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz.Status status = 1 [json_name = "status"];</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      private proto.ddx.v1.Mrz.MrzFields fields_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Mrz.MrzFields, proto.ddx.v1.Mrz.MrzFields.Builder, proto.ddx.v1.Mrz.MrzFieldsOrBuilder> fieldsBuilder_;
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       * @return Whether the fields field is set.
       */
      public boolean hasFields() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       * @return The fields.
       */
      public proto.ddx.v1.Mrz.MrzFields getFields() {
        if (fieldsBuilder_ == null) {
          return fields_ == null ? proto.ddx.v1.Mrz.MrzFields.getDefaultInstance() : fields_;
        } else {
          return fieldsBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       */
      public Builder setFields(proto.ddx.v1.Mrz.MrzFields value) {
        if (fieldsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          fields_ = value;
        } else {
          fieldsBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       */
      public Builder setFields(
          proto.ddx.v1.Mrz.MrzFields.Builder builderForValue) {
        if (fieldsBuilder_ == null) {
          fields_ = builderForValue.build();
        } else {
          fieldsBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       */
      public Builder mergeFields(proto.ddx.v1.Mrz.MrzFields value) {
        if (fieldsBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            fields_ != null &&
            fields_ != proto.ddx.v1.Mrz.MrzFields.getDefaultInstance()) {
            getFieldsBuilder().mergeFrom(value);
          } else {
            fields_ = value;
          }
        } else {
          fieldsBuilder_.mergeFrom(value);
        }
        if (fields_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       */
      public Builder clearFields() {
        bitField0_ = (bitField0_ & ~0x00000002);
        fields_ = null;
        if (fieldsBuilder_ != null) {
          fieldsBuilder_.dispose();
          fieldsBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       */
      public proto.ddx.v1.Mrz.MrzFields.Builder getFieldsBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getFieldsFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       */
      public proto.ddx.v1.Mrz.MrzFieldsOrBuilder getFieldsOrBuilder() {
        if (fieldsBuilder_ != null) {
          return fieldsBuilder_.getMessageOrBuilder();
        } else {
          return fields_ == null ?
              proto.ddx.v1.Mrz.MrzFields.getDefaultInstance() : fields_;
        }
      }
      /**
       * <pre>
       * fields - data decoded from MRZ. Empty if status is STATUS_INVALID_FORMAT
       * </pre>
       *
       * <code>.proto.ddx.v1.MrzFields fields = 2 [json_name = "fields"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Mrz.MrzFields, proto.ddx.v1.Mrz.MrzFields.Builder, proto.ddx.v1.Mrz.MrzFieldsOrBuilder> 
          getFieldsFieldBuilder() {
        if (fieldsBuilder_ == null) {
          fieldsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Mrz.MrzFields, proto.ddx.v1.Mrz.MrzFields.Builder, proto.ddx.v1.Mrz.MrzFieldsOrBuilder>(
                  getFields(),
                  getParentForChildren(),
                  isClean());
          fields_ = null;
        }
        return fieldsBuilder_;
      }

      private com.google.protobuf.LazyStringArrayList mrzCode_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
      private void ensureMrzCodeIsMutable() {
        if (!mrzCode_.isModifiable()) {
          mrzCode_ = new com.google.protobuf.LazyStringArrayList(mrzCode_);
        }
        bitField0_ |= 0x00000004;
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @return A list containing the mrzCode.
       */
      public com.google.protobuf.ProtocolStringList
          getMrzCodeList() {
        mrzCode_.makeImmutable();
        return mrzCode_;
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @return The count of mrzCode.
       */
      public int getMrzCodeCount() {
        return mrzCode_.size();
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @param index The index of the element to return.
       * @return The mrzCode at the given index.
       */
      public java.lang.String getMrzCode(int index) {
        return mrzCode_.get(index);
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @param index The index of the value to return.
       * @return The bytes of the mrzCode at the given index.
       */
      public com.google.protobuf.ByteString
          getMrzCodeBytes(int index) {
        return mrzCode_.getByteString(index);
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @param index The index to set the value at.
       * @param value The mrzCode to set.
       * @return This builder for chaining.
       */
      public Builder setMrzCode(
          int index, java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureMrzCodeIsMutable();
        mrzCode_.set(index, value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @param value The mrzCode to add.
       * @return This builder for chaining.
       */
      public Builder addMrzCode(
          java.lang.String value) {
        if (value == null) { throw new NullPointerException(); }
        ensureMrzCodeIsMutable();
        mrzCode_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @param values The mrzCode to add.
       * @return This builder for chaining.
       */
      public Builder addAllMrzCode(
          java.lang.Iterable<java.lang.String> values) {
        ensureMrzCodeIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mrzCode_);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @return This builder for chaining.
       */
      public Builder clearMrzCode() {
        mrzCode_ =
          com.google.protobuf.LazyStringArrayList.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * "Raw" mrz code, value that we OCR-ed from the document and decoded in "fields" field.
       * Depending on MRZ type, this field will contain one, two or three string values.
       * </pre>
       *
       * <code>repeated string mrz_code = 3 [json_name = "mrzCode"];</code>
       * @param value The bytes of the mrzCode to add.
       * @return This builder for chaining.
       */
      public Builder addMrzCodeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        checkByteStringIsUtf8(value);
        ensureMrzCodeIsMutable();
        mrzCode_.add(value);
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.Mrz)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.Mrz)
    private static final proto.ddx.v1.Service.Mrz DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.Mrz();
    }

    public static proto.ddx.v1.Service.Mrz getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<Mrz>
        PARSER = new com.google.protobuf.AbstractParser<Mrz>() {
      @java.lang.Override
      public Mrz parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<Mrz> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<Mrz> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.Mrz getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScanDocumentResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanDocumentResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
     * @return The status.
     */
    proto.ddx.v1.Service.ScanDocumentResponse.Status getStatus();

    /**
     * <pre>
     * detection is a quadrilateral of detected document in given Request image.
     * will be empty if status is DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
     * @return Whether the detection field is set.
     */
    boolean hasDetection();
    /**
     * <pre>
     * detection is a quadrilateral of detected document in given Request image.
     * will be empty if status is DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
     * @return The detection.
     */
    proto.ddx.v1.Service.Quad getDetection();
    /**
     * <pre>
     * detection is a quadrilateral of detected document in given Request image.
     * will be empty if status is DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
     */
    proto.ddx.v1.Service.QuadOrBuilder getDetectionOrBuilder();

    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is not OK
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
     * @return Whether the classification field is set.
     */
    boolean hasClassification();
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is not OK
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
     * @return The classification.
     */
    proto.ddx.v1.Service.DocumentClass getClassification();
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is not OK
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
     */
    proto.ddx.v1.Service.DocumentClassOrBuilder getClassificationOrBuilder();

    /**
     * <pre>
     * data holds all information extracted from the document
     * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
     * @return Whether the data field is set.
     */
    boolean hasData();
    /**
     * <pre>
     * data holds all information extracted from the document
     * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
     * @return The data.
     */
    proto.ddx.v1.Service.DocumentData getData();
    /**
     * <pre>
     * data holds all information extracted from the document
     * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
     */
    proto.ddx.v1.Service.DocumentDataOrBuilder getDataOrBuilder();
  }
  /**
   * <pre>
   * ScanDocumentResponse
   * </pre>
   *
   * Protobuf type {@code proto.ddx.v1.ScanDocumentResponse}
   */
  public static final class ScanDocumentResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanDocumentResponse)
      ScanDocumentResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ScanDocumentResponse.class.getName());
    }
    // Use ScanDocumentResponse.newBuilder() to construct.
    private ScanDocumentResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ScanDocumentResponse() {
      status_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.ScanDocumentResponse.class, proto.ddx.v1.Service.ScanDocumentResponse.Builder.class);
    }

    /**
     * <pre>
     * Status - response status
     * </pre>
     *
     * Protobuf enum {@code proto.ddx.v1.ScanDocumentResponse.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <pre>
       * Document successfully detected, classified and extracted
       * </pre>
       *
       * <code>STATUS_OK = 0;</code>
       */
      STATUS_OK(0),
      /**
       * <pre>
       * Document not found
       * </pre>
       *
       * <code>STATUS_DOCUMENT_NOT_FOUND = 1;</code>
       */
      STATUS_DOCUMENT_NOT_FOUND(1),
      /**
       * <pre>
       * Document successfully detected, but not supported for extraction
       * </pre>
       *
       * <code>STATUS_DOCUMENT_NOT_SUPPORTED = 2;</code>
       */
      STATUS_DOCUMENT_NOT_SUPPORTED(2),
      /**
       * <pre>
       * Document successfully detected, supported for extraction, but it is a back side of the document
       * </pre>
       *
       * <code>STATUS_DOCUMENT_BACK_SIDE = 3;</code>
       */
      STATUS_DOCUMENT_BACK_SIDE(3),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          Status.class.getName());
      }
      /**
       * <pre>
       * Document successfully detected, classified and extracted
       * </pre>
       *
       * <code>STATUS_OK = 0;</code>
       */
      public static final int STATUS_OK_VALUE = 0;
      /**
       * <pre>
       * Document not found
       * </pre>
       *
       * <code>STATUS_DOCUMENT_NOT_FOUND = 1;</code>
       */
      public static final int STATUS_DOCUMENT_NOT_FOUND_VALUE = 1;
      /**
       * <pre>
       * Document successfully detected, but not supported for extraction
       * </pre>
       *
       * <code>STATUS_DOCUMENT_NOT_SUPPORTED = 2;</code>
       */
      public static final int STATUS_DOCUMENT_NOT_SUPPORTED_VALUE = 2;
      /**
       * <pre>
       * Document successfully detected, supported for extraction, but it is a back side of the document
       * </pre>
       *
       * <code>STATUS_DOCUMENT_BACK_SIDE = 3;</code>
       */
      public static final int STATUS_DOCUMENT_BACK_SIDE_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Status forNumber(int value) {
        switch (value) {
          case 0: return STATUS_OK;
          case 1: return STATUS_DOCUMENT_NOT_FOUND;
          case 2: return STATUS_DOCUMENT_NOT_SUPPORTED;
          case 3: return STATUS_DOCUMENT_BACK_SIDE;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return proto.ddx.v1.Service.ScanDocumentResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.ddx.v1.ScanDocumentResponse.Status)
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_ = 0;
    /**
     * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
     * @return The status.
     */
    @java.lang.Override public proto.ddx.v1.Service.ScanDocumentResponse.Status getStatus() {
      proto.ddx.v1.Service.ScanDocumentResponse.Status result = proto.ddx.v1.Service.ScanDocumentResponse.Status.forNumber(status_);
      return result == null ? proto.ddx.v1.Service.ScanDocumentResponse.Status.UNRECOGNIZED : result;
    }

    public static final int DETECTION_FIELD_NUMBER = 2;
    private proto.ddx.v1.Service.Quad detection_;
    /**
     * <pre>
     * detection is a quadrilateral of detected document in given Request image.
     * will be empty if status is DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
     * @return Whether the detection field is set.
     */
    @java.lang.Override
    public boolean hasDetection() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * detection is a quadrilateral of detected document in given Request image.
     * will be empty if status is DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
     * @return The detection.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.Quad getDetection() {
      return detection_ == null ? proto.ddx.v1.Service.Quad.getDefaultInstance() : detection_;
    }
    /**
     * <pre>
     * detection is a quadrilateral of detected document in given Request image.
     * will be empty if status is DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.QuadOrBuilder getDetectionOrBuilder() {
      return detection_ == null ? proto.ddx.v1.Service.Quad.getDefaultInstance() : detection_;
    }

    public static final int CLASSIFICATION_FIELD_NUMBER = 3;
    private proto.ddx.v1.Service.DocumentClass classification_;
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is not OK
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
     * @return Whether the classification field is set.
     */
    @java.lang.Override
    public boolean hasClassification() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is not OK
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
     * @return The classification.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentClass getClassification() {
      return classification_ == null ? proto.ddx.v1.Service.DocumentClass.getDefaultInstance() : classification_;
    }
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is not OK
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentClassOrBuilder getClassificationOrBuilder() {
      return classification_ == null ? proto.ddx.v1.Service.DocumentClass.getDefaultInstance() : classification_;
    }

    public static final int DATA_FIELD_NUMBER = 4;
    private proto.ddx.v1.Service.DocumentData data_;
    /**
     * <pre>
     * data holds all information extracted from the document
     * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
     * @return Whether the data field is set.
     */
    @java.lang.Override
    public boolean hasData() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * data holds all information extracted from the document
     * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
     * @return The data.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentData getData() {
      return data_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : data_;
    }
    /**
     * <pre>
     * data holds all information extracted from the document
     * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentDataOrBuilder getDataOrBuilder() {
      return data_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : data_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != proto.ddx.v1.Service.ScanDocumentResponse.Status.STATUS_OK.getNumber()) {
        output.writeEnum(1, status_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getDetection());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getClassification());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getData());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != proto.ddx.v1.Service.ScanDocumentResponse.Status.STATUS_OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getDetection());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getClassification());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getData());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.ScanDocumentResponse)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.ScanDocumentResponse other = (proto.ddx.v1.Service.ScanDocumentResponse) obj;

      if (status_ != other.status_) return false;
      if (hasDetection() != other.hasDetection()) return false;
      if (hasDetection()) {
        if (!getDetection()
            .equals(other.getDetection())) return false;
      }
      if (hasClassification() != other.hasClassification()) return false;
      if (hasClassification()) {
        if (!getClassification()
            .equals(other.getClassification())) return false;
      }
      if (hasData() != other.hasData()) return false;
      if (hasData()) {
        if (!getData()
            .equals(other.getData())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      if (hasDetection()) {
        hash = (37 * hash) + DETECTION_FIELD_NUMBER;
        hash = (53 * hash) + getDetection().hashCode();
      }
      if (hasClassification()) {
        hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
        hash = (53 * hash) + getClassification().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.ScanDocumentResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.ScanDocumentResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanDocumentResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.ScanDocumentResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * ScanDocumentResponse
     * </pre>
     *
     * Protobuf type {@code proto.ddx.v1.ScanDocumentResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanDocumentResponse)
        proto.ddx.v1.Service.ScanDocumentResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanDocumentResponse.class, proto.ddx.v1.Service.ScanDocumentResponse.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.ScanDocumentResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getDetectionFieldBuilder();
          getClassificationFieldBuilder();
          getDataFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        status_ = 0;
        detection_ = null;
        if (detectionBuilder_ != null) {
          detectionBuilder_.dispose();
          detectionBuilder_ = null;
        }
        classification_ = null;
        if (classificationBuilder_ != null) {
          classificationBuilder_.dispose();
          classificationBuilder_ = null;
        }
        data_ = null;
        if (dataBuilder_ != null) {
          dataBuilder_.dispose();
          dataBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanDocumentResponse_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanDocumentResponse getDefaultInstanceForType() {
        return proto.ddx.v1.Service.ScanDocumentResponse.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanDocumentResponse build() {
        proto.ddx.v1.Service.ScanDocumentResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanDocumentResponse buildPartial() {
        proto.ddx.v1.Service.ScanDocumentResponse result = new proto.ddx.v1.Service.ScanDocumentResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.ddx.v1.Service.ScanDocumentResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.status_ = status_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.detection_ = detectionBuilder_ == null
              ? detection_
              : detectionBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.classification_ = classificationBuilder_ == null
              ? classification_
              : classificationBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.data_ = dataBuilder_ == null
              ? data_
              : dataBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.ScanDocumentResponse) {
          return mergeFrom((proto.ddx.v1.Service.ScanDocumentResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.ScanDocumentResponse other) {
        if (other == proto.ddx.v1.Service.ScanDocumentResponse.getDefaultInstance()) return this;
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.hasDetection()) {
          mergeDetection(other.getDetection());
        }
        if (other.hasClassification()) {
          mergeClassification(other.getClassification());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                status_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getDetectionFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getClassificationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getDataFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int status_ = 0;
      /**
       * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @return The enum numeric value on the wire for status.
       */
      @java.lang.Override public int getStatusValue() {
        return status_;
      }
      /**
       * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @return The status.
       */
      @java.lang.Override
      public proto.ddx.v1.Service.ScanDocumentResponse.Status getStatus() {
        proto.ddx.v1.Service.ScanDocumentResponse.Status result = proto.ddx.v1.Service.ScanDocumentResponse.Status.forNumber(status_);
        return result == null ? proto.ddx.v1.Service.ScanDocumentResponse.Status.UNRECOGNIZED : result;
      }
      /**
       * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(proto.ddx.v1.Service.ScanDocumentResponse.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.proto.ddx.v1.ScanDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      private proto.ddx.v1.Service.Quad detection_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.Quad, proto.ddx.v1.Service.Quad.Builder, proto.ddx.v1.Service.QuadOrBuilder> detectionBuilder_;
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       * @return Whether the detection field is set.
       */
      public boolean hasDetection() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       * @return The detection.
       */
      public proto.ddx.v1.Service.Quad getDetection() {
        if (detectionBuilder_ == null) {
          return detection_ == null ? proto.ddx.v1.Service.Quad.getDefaultInstance() : detection_;
        } else {
          return detectionBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       */
      public Builder setDetection(proto.ddx.v1.Service.Quad value) {
        if (detectionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          detection_ = value;
        } else {
          detectionBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       */
      public Builder setDetection(
          proto.ddx.v1.Service.Quad.Builder builderForValue) {
        if (detectionBuilder_ == null) {
          detection_ = builderForValue.build();
        } else {
          detectionBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       */
      public Builder mergeDetection(proto.ddx.v1.Service.Quad value) {
        if (detectionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            detection_ != null &&
            detection_ != proto.ddx.v1.Service.Quad.getDefaultInstance()) {
            getDetectionBuilder().mergeFrom(value);
          } else {
            detection_ = value;
          }
        } else {
          detectionBuilder_.mergeFrom(value);
        }
        if (detection_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       */
      public Builder clearDetection() {
        bitField0_ = (bitField0_ & ~0x00000002);
        detection_ = null;
        if (detectionBuilder_ != null) {
          detectionBuilder_.dispose();
          detectionBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       */
      public proto.ddx.v1.Service.Quad.Builder getDetectionBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getDetectionFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       */
      public proto.ddx.v1.Service.QuadOrBuilder getDetectionOrBuilder() {
        if (detectionBuilder_ != null) {
          return detectionBuilder_.getMessageOrBuilder();
        } else {
          return detection_ == null ?
              proto.ddx.v1.Service.Quad.getDefaultInstance() : detection_;
        }
      }
      /**
       * <pre>
       * detection is a quadrilateral of detected document in given Request image.
       * will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.Quad detection = 2 [json_name = "detection"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.Quad, proto.ddx.v1.Service.Quad.Builder, proto.ddx.v1.Service.QuadOrBuilder> 
          getDetectionFieldBuilder() {
        if (detectionBuilder_ == null) {
          detectionBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.Quad, proto.ddx.v1.Service.Quad.Builder, proto.ddx.v1.Service.QuadOrBuilder>(
                  getDetection(),
                  getParentForChildren(),
                  isClean());
          detection_ = null;
        }
        return detectionBuilder_;
      }

      private proto.ddx.v1.Service.DocumentClass classification_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentClass, proto.ddx.v1.Service.DocumentClass.Builder, proto.ddx.v1.Service.DocumentClassOrBuilder> classificationBuilder_;
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       * @return Whether the classification field is set.
       */
      public boolean hasClassification() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       * @return The classification.
       */
      public proto.ddx.v1.Service.DocumentClass getClassification() {
        if (classificationBuilder_ == null) {
          return classification_ == null ? proto.ddx.v1.Service.DocumentClass.getDefaultInstance() : classification_;
        } else {
          return classificationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       */
      public Builder setClassification(proto.ddx.v1.Service.DocumentClass value) {
        if (classificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          classification_ = value;
        } else {
          classificationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       */
      public Builder setClassification(
          proto.ddx.v1.Service.DocumentClass.Builder builderForValue) {
        if (classificationBuilder_ == null) {
          classification_ = builderForValue.build();
        } else {
          classificationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       */
      public Builder mergeClassification(proto.ddx.v1.Service.DocumentClass value) {
        if (classificationBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            classification_ != null &&
            classification_ != proto.ddx.v1.Service.DocumentClass.getDefaultInstance()) {
            getClassificationBuilder().mergeFrom(value);
          } else {
            classification_ = value;
          }
        } else {
          classificationBuilder_.mergeFrom(value);
        }
        if (classification_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       */
      public Builder clearClassification() {
        bitField0_ = (bitField0_ & ~0x00000004);
        classification_ = null;
        if (classificationBuilder_ != null) {
          classificationBuilder_.dispose();
          classificationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       */
      public proto.ddx.v1.Service.DocumentClass.Builder getClassificationBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getClassificationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       */
      public proto.ddx.v1.Service.DocumentClassOrBuilder getClassificationOrBuilder() {
        if (classificationBuilder_ != null) {
          return classificationBuilder_.getMessageOrBuilder();
        } else {
          return classification_ == null ?
              proto.ddx.v1.Service.DocumentClass.getDefaultInstance() : classification_;
        }
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is not OK
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 3 [json_name = "classification"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentClass, proto.ddx.v1.Service.DocumentClass.Builder, proto.ddx.v1.Service.DocumentClassOrBuilder> 
          getClassificationFieldBuilder() {
        if (classificationBuilder_ == null) {
          classificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.DocumentClass, proto.ddx.v1.Service.DocumentClass.Builder, proto.ddx.v1.Service.DocumentClassOrBuilder>(
                  getClassification(),
                  getParentForChildren(),
                  isClean());
          classification_ = null;
        }
        return classificationBuilder_;
      }

      private proto.ddx.v1.Service.DocumentData data_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder> dataBuilder_;
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       * @return Whether the data field is set.
       */
      public boolean hasData() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       * @return The data.
       */
      public proto.ddx.v1.Service.DocumentData getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       */
      public Builder setData(proto.ddx.v1.Service.DocumentData value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
        } else {
          dataBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       */
      public Builder setData(
          proto.ddx.v1.Service.DocumentData.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       */
      public Builder mergeData(proto.ddx.v1.Service.DocumentData value) {
        if (dataBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            data_ != null &&
            data_ != proto.ddx.v1.Service.DocumentData.getDefaultInstance()) {
            getDataBuilder().mergeFrom(value);
          } else {
            data_ = value;
          }
        } else {
          dataBuilder_.mergeFrom(value);
        }
        if (data_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       */
      public Builder clearData() {
        bitField0_ = (bitField0_ & ~0x00000008);
        data_ = null;
        if (dataBuilder_ != null) {
          dataBuilder_.dispose();
          dataBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       */
      public proto.ddx.v1.Service.DocumentData.Builder getDataBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       */
      public proto.ddx.v1.Service.DocumentDataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              proto.ddx.v1.Service.DocumentData.getDefaultInstance() : data_;
        }
      }
      /**
       * <pre>
       * data holds all information extracted from the document
       * It will be empty if status is STATUS_DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData data = 4 [json_name = "data"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanDocumentResponse)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanDocumentResponse)
    private static final proto.ddx.v1.Service.ScanDocumentResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanDocumentResponse();
    }

    public static proto.ddx.v1.Service.ScanDocumentResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScanDocumentResponse>
        PARSER = new com.google.protobuf.AbstractParser<ScanDocumentResponse>() {
      @java.lang.Override
      public ScanDocumentResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ScanDocumentResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScanDocumentResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.ScanDocumentResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface DocumentDataOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.DocumentData)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    java.util.List<proto.ddx.v1.Fields.TextField> 
        getTextFieldList();
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    proto.ddx.v1.Fields.TextField getTextField(int index);
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    int getTextFieldCount();
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    java.util.List<? extends proto.ddx.v1.Fields.TextFieldOrBuilder> 
        getTextFieldOrBuilderList();
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    proto.ddx.v1.Fields.TextFieldOrBuilder getTextFieldOrBuilder(
        int index);

    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    java.util.List<proto.ddx.v1.Fields.VisualField> 
        getVisualFieldList();
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    proto.ddx.v1.Fields.VisualField getVisualField(int index);
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    int getVisualFieldCount();
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    java.util.List<? extends proto.ddx.v1.Fields.VisualFieldOrBuilder> 
        getVisualFieldOrBuilderList();
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    proto.ddx.v1.Fields.VisualFieldOrBuilder getVisualFieldOrBuilder(
        int index);

    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    java.util.List<proto.ddx.v1.Fields.DateField> 
        getDateFieldList();
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    proto.ddx.v1.Fields.DateField getDateField(int index);
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    int getDateFieldCount();
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    java.util.List<? extends proto.ddx.v1.Fields.DateFieldOrBuilder> 
        getDateFieldOrBuilderList();
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    proto.ddx.v1.Fields.DateFieldOrBuilder getDateFieldOrBuilder(
        int index);

    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    java.util.List<proto.ddx.v1.Fields.SexField> 
        getSexFieldList();
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    proto.ddx.v1.Fields.SexField getSexField(int index);
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    int getSexFieldCount();
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    java.util.List<? extends proto.ddx.v1.Fields.SexFieldOrBuilder> 
        getSexFieldOrBuilderList();
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    proto.ddx.v1.Fields.SexFieldOrBuilder getSexFieldOrBuilder(
        int index);

    /**
     * <pre>
     * mrz holds the mrz data extracted from the image if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
     * @return Whether the mrz field is set.
     */
    boolean hasMrz();
    /**
     * <pre>
     * mrz holds the mrz data extracted from the image if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
     * @return The mrz.
     */
    proto.ddx.v1.Service.Mrz getMrz();
    /**
     * <pre>
     * mrz holds the mrz data extracted from the image if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
     */
    proto.ddx.v1.Service.MrzOrBuilder getMrzOrBuilder();

    /**
     * <pre>
     * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
     * @return Whether the pdf417Barcode field is set.
     */
    boolean hasPdf417Barcode();
    /**
     * <pre>
     * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
     * @return The pdf417Barcode.
     */
    proto.ddx.v1.Barcode.Pdf417Barcode getPdf417Barcode();
    /**
     * <pre>
     * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
     */
    proto.ddx.v1.Barcode.Pdf417BarcodeOrBuilder getPdf417BarcodeOrBuilder();

    /**
     * <pre>
     * Optional, empty by default, returned if specified in requests "config" field.
     * Of course, it will be empty if status is DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>bytes documentImage = 7 [json_name = "documentImage"];</code>
     * @return The documentImage.
     */
    com.google.protobuf.ByteString getDocumentImage();
  }
  /**
   * Protobuf type {@code proto.ddx.v1.DocumentData}
   */
  public static final class DocumentData extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.DocumentData)
      DocumentDataOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        DocumentData.class.getName());
    }
    // Use DocumentData.newBuilder() to construct.
    private DocumentData(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private DocumentData() {
      textField_ = java.util.Collections.emptyList();
      visualField_ = java.util.Collections.emptyList();
      dateField_ = java.util.Collections.emptyList();
      sexField_ = java.util.Collections.emptyList();
      documentImage_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentData_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentData_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.DocumentData.class, proto.ddx.v1.Service.DocumentData.Builder.class);
    }

    private int bitField0_;
    public static final int TEXTFIELD_FIELD_NUMBER = 1;
    @SuppressWarnings("serial")
    private java.util.List<proto.ddx.v1.Fields.TextField> textField_;
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    @java.lang.Override
    public java.util.List<proto.ddx.v1.Fields.TextField> getTextFieldList() {
      return textField_;
    }
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.ddx.v1.Fields.TextFieldOrBuilder> 
        getTextFieldOrBuilderList() {
      return textField_;
    }
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    @java.lang.Override
    public int getTextFieldCount() {
      return textField_.size();
    }
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Fields.TextField getTextField(int index) {
      return textField_.get(index);
    }
    /**
     * <pre>
     * field holds detected document textual fields.
     * Textual fields are all the fields that have textual representation and we expect
     * out users to use the OCRed and transcribed text.
     * Will be empty if status is not OK
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Fields.TextFieldOrBuilder getTextFieldOrBuilder(
        int index) {
      return textField_.get(index);
    }

    public static final int VISUALFIELD_FIELD_NUMBER = 2;
    @SuppressWarnings("serial")
    private java.util.List<proto.ddx.v1.Fields.VisualField> visualField_;
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    @java.lang.Override
    public java.util.List<proto.ddx.v1.Fields.VisualField> getVisualFieldList() {
      return visualField_;
    }
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.ddx.v1.Fields.VisualFieldOrBuilder> 
        getVisualFieldOrBuilderList() {
      return visualField_;
    }
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    @java.lang.Override
    public int getVisualFieldCount() {
      return visualField_.size();
    }
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Fields.VisualField getVisualField(int index) {
      return visualField_.get(index);
    }
    /**
     * <pre>
     * visualField holds detected document visual fields.
     * Visual fields are those whose values can't be extracted as text, and are
     * expected to be extracted as an image or position in the given image.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Fields.VisualFieldOrBuilder getVisualFieldOrBuilder(
        int index) {
      return visualField_.get(index);
    }

    public static final int DATEFIELD_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private java.util.List<proto.ddx.v1.Fields.DateField> dateField_;
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    @java.lang.Override
    public java.util.List<proto.ddx.v1.Fields.DateField> getDateFieldList() {
      return dateField_;
    }
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.ddx.v1.Fields.DateFieldOrBuilder> 
        getDateFieldOrBuilderList() {
      return dateField_;
    }
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    @java.lang.Override
    public int getDateFieldCount() {
      return dateField_.size();
    }
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Fields.DateField getDateField(int index) {
      return dateField_.get(index);
    }
    /**
     * <pre>
     * dateField holds detected document date fields.
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer "date" in a structured parsed format (year, month, day) regardless of textual
     * representation.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Fields.DateFieldOrBuilder getDateFieldOrBuilder(
        int index) {
      return dateField_.get(index);
    }

    public static final int SEXFIELD_FIELD_NUMBER = 4;
    @SuppressWarnings("serial")
    private java.util.List<proto.ddx.v1.Fields.SexField> sexField_;
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    @java.lang.Override
    public java.util.List<proto.ddx.v1.Fields.SexField> getSexFieldList() {
      return sexField_;
    }
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    @java.lang.Override
    public java.util.List<? extends proto.ddx.v1.Fields.SexFieldOrBuilder> 
        getSexFieldOrBuilderList() {
      return sexField_;
    }
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    @java.lang.Override
    public int getSexFieldCount() {
      return sexField_.size();
    }
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Fields.SexField getSexField(int index) {
      return sexField_.get(index);
    }
    /**
     * <pre>
     * sexField holds detected document gender fields
     * Compared to textual fields, they don't just hold textual information present on the document
     * but offer gender information as an parsed enumeration.
     * </pre>
     *
     * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Fields.SexFieldOrBuilder getSexFieldOrBuilder(
        int index) {
      return sexField_.get(index);
    }

    public static final int MRZ_FIELD_NUMBER = 5;
    private proto.ddx.v1.Service.Mrz mrz_;
    /**
     * <pre>
     * mrz holds the mrz data extracted from the image if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
     * @return Whether the mrz field is set.
     */
    @java.lang.Override
    public boolean hasMrz() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * mrz holds the mrz data extracted from the image if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
     * @return The mrz.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.Mrz getMrz() {
      return mrz_ == null ? proto.ddx.v1.Service.Mrz.getDefaultInstance() : mrz_;
    }
    /**
     * <pre>
     * mrz holds the mrz data extracted from the image if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.MrzOrBuilder getMrzOrBuilder() {
      return mrz_ == null ? proto.ddx.v1.Service.Mrz.getDefaultInstance() : mrz_;
    }

    public static final int PDF417BARCODE_FIELD_NUMBER = 6;
    private proto.ddx.v1.Barcode.Pdf417Barcode pdf417Barcode_;
    /**
     * <pre>
     * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
     * @return Whether the pdf417Barcode field is set.
     */
    @java.lang.Override
    public boolean hasPdf417Barcode() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
     * @return The pdf417Barcode.
     */
    @java.lang.Override
    public proto.ddx.v1.Barcode.Pdf417Barcode getPdf417Barcode() {
      return pdf417Barcode_ == null ? proto.ddx.v1.Barcode.Pdf417Barcode.getDefaultInstance() : pdf417Barcode_;
    }
    /**
     * <pre>
     * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
     * </pre>
     *
     * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Barcode.Pdf417BarcodeOrBuilder getPdf417BarcodeOrBuilder() {
      return pdf417Barcode_ == null ? proto.ddx.v1.Barcode.Pdf417Barcode.getDefaultInstance() : pdf417Barcode_;
    }

    public static final int DOCUMENTIMAGE_FIELD_NUMBER = 7;
    private com.google.protobuf.ByteString documentImage_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * Optional, empty by default, returned if specified in requests "config" field.
     * Of course, it will be empty if status is DOCUMENT_NOT_FOUND
     * </pre>
     *
     * <code>bytes documentImage = 7 [json_name = "documentImage"];</code>
     * @return The documentImage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getDocumentImage() {
      return documentImage_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < textField_.size(); i++) {
        output.writeMessage(1, textField_.get(i));
      }
      for (int i = 0; i < visualField_.size(); i++) {
        output.writeMessage(2, visualField_.get(i));
      }
      for (int i = 0; i < dateField_.size(); i++) {
        output.writeMessage(3, dateField_.get(i));
      }
      for (int i = 0; i < sexField_.size(); i++) {
        output.writeMessage(4, sexField_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(5, getMrz());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(6, getPdf417Barcode());
      }
      if (!documentImage_.isEmpty()) {
        output.writeBytes(7, documentImage_);
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < textField_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, textField_.get(i));
      }
      for (int i = 0; i < visualField_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, visualField_.get(i));
      }
      for (int i = 0; i < dateField_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, dateField_.get(i));
      }
      for (int i = 0; i < sexField_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, sexField_.get(i));
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, getMrz());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, getPdf417Barcode());
      }
      if (!documentImage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, documentImage_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.DocumentData)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.DocumentData other = (proto.ddx.v1.Service.DocumentData) obj;

      if (!getTextFieldList()
          .equals(other.getTextFieldList())) return false;
      if (!getVisualFieldList()
          .equals(other.getVisualFieldList())) return false;
      if (!getDateFieldList()
          .equals(other.getDateFieldList())) return false;
      if (!getSexFieldList()
          .equals(other.getSexFieldList())) return false;
      if (hasMrz() != other.hasMrz()) return false;
      if (hasMrz()) {
        if (!getMrz()
            .equals(other.getMrz())) return false;
      }
      if (hasPdf417Barcode() != other.hasPdf417Barcode()) return false;
      if (hasPdf417Barcode()) {
        if (!getPdf417Barcode()
            .equals(other.getPdf417Barcode())) return false;
      }
      if (!getDocumentImage()
          .equals(other.getDocumentImage())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getTextFieldCount() > 0) {
        hash = (37 * hash) + TEXTFIELD_FIELD_NUMBER;
        hash = (53 * hash) + getTextFieldList().hashCode();
      }
      if (getVisualFieldCount() > 0) {
        hash = (37 * hash) + VISUALFIELD_FIELD_NUMBER;
        hash = (53 * hash) + getVisualFieldList().hashCode();
      }
      if (getDateFieldCount() > 0) {
        hash = (37 * hash) + DATEFIELD_FIELD_NUMBER;
        hash = (53 * hash) + getDateFieldList().hashCode();
      }
      if (getSexFieldCount() > 0) {
        hash = (37 * hash) + SEXFIELD_FIELD_NUMBER;
        hash = (53 * hash) + getSexFieldList().hashCode();
      }
      if (hasMrz()) {
        hash = (37 * hash) + MRZ_FIELD_NUMBER;
        hash = (53 * hash) + getMrz().hashCode();
      }
      if (hasPdf417Barcode()) {
        hash = (37 * hash) + PDF417BARCODE_FIELD_NUMBER;
        hash = (53 * hash) + getPdf417Barcode().hashCode();
      }
      hash = (37 * hash) + DOCUMENTIMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getDocumentImage().hashCode();
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.DocumentData parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.DocumentData parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.DocumentData parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.DocumentData parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.DocumentData prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.ddx.v1.DocumentData}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.DocumentData)
        proto.ddx.v1.Service.DocumentDataOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentData_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentData_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.DocumentData.class, proto.ddx.v1.Service.DocumentData.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.DocumentData.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getTextFieldFieldBuilder();
          getVisualFieldFieldBuilder();
          getDateFieldFieldBuilder();
          getSexFieldFieldBuilder();
          getMrzFieldBuilder();
          getPdf417BarcodeFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        if (textFieldBuilder_ == null) {
          textField_ = java.util.Collections.emptyList();
        } else {
          textField_ = null;
          textFieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        if (visualFieldBuilder_ == null) {
          visualField_ = java.util.Collections.emptyList();
        } else {
          visualField_ = null;
          visualFieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000002);
        if (dateFieldBuilder_ == null) {
          dateField_ = java.util.Collections.emptyList();
        } else {
          dateField_ = null;
          dateFieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000004);
        if (sexFieldBuilder_ == null) {
          sexField_ = java.util.Collections.emptyList();
        } else {
          sexField_ = null;
          sexFieldBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000008);
        mrz_ = null;
        if (mrzBuilder_ != null) {
          mrzBuilder_.dispose();
          mrzBuilder_ = null;
        }
        pdf417Barcode_ = null;
        if (pdf417BarcodeBuilder_ != null) {
          pdf417BarcodeBuilder_.dispose();
          pdf417BarcodeBuilder_ = null;
        }
        documentImage_ = com.google.protobuf.ByteString.EMPTY;
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_DocumentData_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.DocumentData getDefaultInstanceForType() {
        return proto.ddx.v1.Service.DocumentData.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.DocumentData build() {
        proto.ddx.v1.Service.DocumentData result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.DocumentData buildPartial() {
        proto.ddx.v1.Service.DocumentData result = new proto.ddx.v1.Service.DocumentData(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(proto.ddx.v1.Service.DocumentData result) {
        if (textFieldBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            textField_ = java.util.Collections.unmodifiableList(textField_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.textField_ = textField_;
        } else {
          result.textField_ = textFieldBuilder_.build();
        }
        if (visualFieldBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0)) {
            visualField_ = java.util.Collections.unmodifiableList(visualField_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.visualField_ = visualField_;
        } else {
          result.visualField_ = visualFieldBuilder_.build();
        }
        if (dateFieldBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0)) {
            dateField_ = java.util.Collections.unmodifiableList(dateField_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.dateField_ = dateField_;
        } else {
          result.dateField_ = dateFieldBuilder_.build();
        }
        if (sexFieldBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0)) {
            sexField_ = java.util.Collections.unmodifiableList(sexField_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.sexField_ = sexField_;
        } else {
          result.sexField_ = sexFieldBuilder_.build();
        }
      }

      private void buildPartial0(proto.ddx.v1.Service.DocumentData result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000010) != 0)) {
          result.mrz_ = mrzBuilder_ == null
              ? mrz_
              : mrzBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000020) != 0)) {
          result.pdf417Barcode_ = pdf417BarcodeBuilder_ == null
              ? pdf417Barcode_
              : pdf417BarcodeBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000040) != 0)) {
          result.documentImage_ = documentImage_;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.DocumentData) {
          return mergeFrom((proto.ddx.v1.Service.DocumentData)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.DocumentData other) {
        if (other == proto.ddx.v1.Service.DocumentData.getDefaultInstance()) return this;
        if (textFieldBuilder_ == null) {
          if (!other.textField_.isEmpty()) {
            if (textField_.isEmpty()) {
              textField_ = other.textField_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTextFieldIsMutable();
              textField_.addAll(other.textField_);
            }
            onChanged();
          }
        } else {
          if (!other.textField_.isEmpty()) {
            if (textFieldBuilder_.isEmpty()) {
              textFieldBuilder_.dispose();
              textFieldBuilder_ = null;
              textField_ = other.textField_;
              bitField0_ = (bitField0_ & ~0x00000001);
              textFieldBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTextFieldFieldBuilder() : null;
            } else {
              textFieldBuilder_.addAllMessages(other.textField_);
            }
          }
        }
        if (visualFieldBuilder_ == null) {
          if (!other.visualField_.isEmpty()) {
            if (visualField_.isEmpty()) {
              visualField_ = other.visualField_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureVisualFieldIsMutable();
              visualField_.addAll(other.visualField_);
            }
            onChanged();
          }
        } else {
          if (!other.visualField_.isEmpty()) {
            if (visualFieldBuilder_.isEmpty()) {
              visualFieldBuilder_.dispose();
              visualFieldBuilder_ = null;
              visualField_ = other.visualField_;
              bitField0_ = (bitField0_ & ~0x00000002);
              visualFieldBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getVisualFieldFieldBuilder() : null;
            } else {
              visualFieldBuilder_.addAllMessages(other.visualField_);
            }
          }
        }
        if (dateFieldBuilder_ == null) {
          if (!other.dateField_.isEmpty()) {
            if (dateField_.isEmpty()) {
              dateField_ = other.dateField_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureDateFieldIsMutable();
              dateField_.addAll(other.dateField_);
            }
            onChanged();
          }
        } else {
          if (!other.dateField_.isEmpty()) {
            if (dateFieldBuilder_.isEmpty()) {
              dateFieldBuilder_.dispose();
              dateFieldBuilder_ = null;
              dateField_ = other.dateField_;
              bitField0_ = (bitField0_ & ~0x00000004);
              dateFieldBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getDateFieldFieldBuilder() : null;
            } else {
              dateFieldBuilder_.addAllMessages(other.dateField_);
            }
          }
        }
        if (sexFieldBuilder_ == null) {
          if (!other.sexField_.isEmpty()) {
            if (sexField_.isEmpty()) {
              sexField_ = other.sexField_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensureSexFieldIsMutable();
              sexField_.addAll(other.sexField_);
            }
            onChanged();
          }
        } else {
          if (!other.sexField_.isEmpty()) {
            if (sexFieldBuilder_.isEmpty()) {
              sexFieldBuilder_.dispose();
              sexFieldBuilder_ = null;
              sexField_ = other.sexField_;
              bitField0_ = (bitField0_ & ~0x00000008);
              sexFieldBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSexFieldFieldBuilder() : null;
            } else {
              sexFieldBuilder_.addAllMessages(other.sexField_);
            }
          }
        }
        if (other.hasMrz()) {
          mergeMrz(other.getMrz());
        }
        if (other.hasPdf417Barcode()) {
          mergePdf417Barcode(other.getPdf417Barcode());
        }
        if (other.getDocumentImage() != com.google.protobuf.ByteString.EMPTY) {
          setDocumentImage(other.getDocumentImage());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                proto.ddx.v1.Fields.TextField m =
                    input.readMessage(
                        proto.ddx.v1.Fields.TextField.parser(),
                        extensionRegistry);
                if (textFieldBuilder_ == null) {
                  ensureTextFieldIsMutable();
                  textField_.add(m);
                } else {
                  textFieldBuilder_.addMessage(m);
                }
                break;
              } // case 10
              case 18: {
                proto.ddx.v1.Fields.VisualField m =
                    input.readMessage(
                        proto.ddx.v1.Fields.VisualField.parser(),
                        extensionRegistry);
                if (visualFieldBuilder_ == null) {
                  ensureVisualFieldIsMutable();
                  visualField_.add(m);
                } else {
                  visualFieldBuilder_.addMessage(m);
                }
                break;
              } // case 18
              case 26: {
                proto.ddx.v1.Fields.DateField m =
                    input.readMessage(
                        proto.ddx.v1.Fields.DateField.parser(),
                        extensionRegistry);
                if (dateFieldBuilder_ == null) {
                  ensureDateFieldIsMutable();
                  dateField_.add(m);
                } else {
                  dateFieldBuilder_.addMessage(m);
                }
                break;
              } // case 26
              case 34: {
                proto.ddx.v1.Fields.SexField m =
                    input.readMessage(
                        proto.ddx.v1.Fields.SexField.parser(),
                        extensionRegistry);
                if (sexFieldBuilder_ == null) {
                  ensureSexFieldIsMutable();
                  sexField_.add(m);
                } else {
                  sexFieldBuilder_.addMessage(m);
                }
                break;
              } // case 34
              case 42: {
                input.readMessage(
                    getMrzFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000010;
                break;
              } // case 42
              case 50: {
                input.readMessage(
                    getPdf417BarcodeFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000020;
                break;
              } // case 50
              case 58: {
                documentImage_ = input.readBytes();
                bitField0_ |= 0x00000040;
                break;
              } // case 58
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<proto.ddx.v1.Fields.TextField> textField_ =
        java.util.Collections.emptyList();
      private void ensureTextFieldIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          textField_ = new java.util.ArrayList<proto.ddx.v1.Fields.TextField>(textField_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          proto.ddx.v1.Fields.TextField, proto.ddx.v1.Fields.TextField.Builder, proto.ddx.v1.Fields.TextFieldOrBuilder> textFieldBuilder_;

      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public java.util.List<proto.ddx.v1.Fields.TextField> getTextFieldList() {
        if (textFieldBuilder_ == null) {
          return java.util.Collections.unmodifiableList(textField_);
        } else {
          return textFieldBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public int getTextFieldCount() {
        if (textFieldBuilder_ == null) {
          return textField_.size();
        } else {
          return textFieldBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public proto.ddx.v1.Fields.TextField getTextField(int index) {
        if (textFieldBuilder_ == null) {
          return textField_.get(index);
        } else {
          return textFieldBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder setTextField(
          int index, proto.ddx.v1.Fields.TextField value) {
        if (textFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextFieldIsMutable();
          textField_.set(index, value);
          onChanged();
        } else {
          textFieldBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder setTextField(
          int index, proto.ddx.v1.Fields.TextField.Builder builderForValue) {
        if (textFieldBuilder_ == null) {
          ensureTextFieldIsMutable();
          textField_.set(index, builderForValue.build());
          onChanged();
        } else {
          textFieldBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder addTextField(proto.ddx.v1.Fields.TextField value) {
        if (textFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextFieldIsMutable();
          textField_.add(value);
          onChanged();
        } else {
          textFieldBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder addTextField(
          int index, proto.ddx.v1.Fields.TextField value) {
        if (textFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTextFieldIsMutable();
          textField_.add(index, value);
          onChanged();
        } else {
          textFieldBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder addTextField(
          proto.ddx.v1.Fields.TextField.Builder builderForValue) {
        if (textFieldBuilder_ == null) {
          ensureTextFieldIsMutable();
          textField_.add(builderForValue.build());
          onChanged();
        } else {
          textFieldBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder addTextField(
          int index, proto.ddx.v1.Fields.TextField.Builder builderForValue) {
        if (textFieldBuilder_ == null) {
          ensureTextFieldIsMutable();
          textField_.add(index, builderForValue.build());
          onChanged();
        } else {
          textFieldBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder addAllTextField(
          java.lang.Iterable<? extends proto.ddx.v1.Fields.TextField> values) {
        if (textFieldBuilder_ == null) {
          ensureTextFieldIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, textField_);
          onChanged();
        } else {
          textFieldBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder clearTextField() {
        if (textFieldBuilder_ == null) {
          textField_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          textFieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public Builder removeTextField(int index) {
        if (textFieldBuilder_ == null) {
          ensureTextFieldIsMutable();
          textField_.remove(index);
          onChanged();
        } else {
          textFieldBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public proto.ddx.v1.Fields.TextField.Builder getTextFieldBuilder(
          int index) {
        return getTextFieldFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public proto.ddx.v1.Fields.TextFieldOrBuilder getTextFieldOrBuilder(
          int index) {
        if (textFieldBuilder_ == null) {
          return textField_.get(index);  } else {
          return textFieldBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public java.util.List<? extends proto.ddx.v1.Fields.TextFieldOrBuilder> 
           getTextFieldOrBuilderList() {
        if (textFieldBuilder_ != null) {
          return textFieldBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(textField_);
        }
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public proto.ddx.v1.Fields.TextField.Builder addTextFieldBuilder() {
        return getTextFieldFieldBuilder().addBuilder(
            proto.ddx.v1.Fields.TextField.getDefaultInstance());
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public proto.ddx.v1.Fields.TextField.Builder addTextFieldBuilder(
          int index) {
        return getTextFieldFieldBuilder().addBuilder(
            index, proto.ddx.v1.Fields.TextField.getDefaultInstance());
      }
      /**
       * <pre>
       * field holds detected document textual fields.
       * Textual fields are all the fields that have textual representation and we expect
       * out users to use the OCRed and transcribed text.
       * Will be empty if status is not OK
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.TextField textField = 1 [json_name = "textField"];</code>
       */
      public java.util.List<proto.ddx.v1.Fields.TextField.Builder> 
           getTextFieldBuilderList() {
        return getTextFieldFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          proto.ddx.v1.Fields.TextField, proto.ddx.v1.Fields.TextField.Builder, proto.ddx.v1.Fields.TextFieldOrBuilder> 
          getTextFieldFieldBuilder() {
        if (textFieldBuilder_ == null) {
          textFieldBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              proto.ddx.v1.Fields.TextField, proto.ddx.v1.Fields.TextField.Builder, proto.ddx.v1.Fields.TextFieldOrBuilder>(
                  textField_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          textField_ = null;
        }
        return textFieldBuilder_;
      }

      private java.util.List<proto.ddx.v1.Fields.VisualField> visualField_ =
        java.util.Collections.emptyList();
      private void ensureVisualFieldIsMutable() {
        if (!((bitField0_ & 0x00000002) != 0)) {
          visualField_ = new java.util.ArrayList<proto.ddx.v1.Fields.VisualField>(visualField_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          proto.ddx.v1.Fields.VisualField, proto.ddx.v1.Fields.VisualField.Builder, proto.ddx.v1.Fields.VisualFieldOrBuilder> visualFieldBuilder_;

      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public java.util.List<proto.ddx.v1.Fields.VisualField> getVisualFieldList() {
        if (visualFieldBuilder_ == null) {
          return java.util.Collections.unmodifiableList(visualField_);
        } else {
          return visualFieldBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public int getVisualFieldCount() {
        if (visualFieldBuilder_ == null) {
          return visualField_.size();
        } else {
          return visualFieldBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public proto.ddx.v1.Fields.VisualField getVisualField(int index) {
        if (visualFieldBuilder_ == null) {
          return visualField_.get(index);
        } else {
          return visualFieldBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder setVisualField(
          int index, proto.ddx.v1.Fields.VisualField value) {
        if (visualFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisualFieldIsMutable();
          visualField_.set(index, value);
          onChanged();
        } else {
          visualFieldBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder setVisualField(
          int index, proto.ddx.v1.Fields.VisualField.Builder builderForValue) {
        if (visualFieldBuilder_ == null) {
          ensureVisualFieldIsMutable();
          visualField_.set(index, builderForValue.build());
          onChanged();
        } else {
          visualFieldBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder addVisualField(proto.ddx.v1.Fields.VisualField value) {
        if (visualFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisualFieldIsMutable();
          visualField_.add(value);
          onChanged();
        } else {
          visualFieldBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder addVisualField(
          int index, proto.ddx.v1.Fields.VisualField value) {
        if (visualFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureVisualFieldIsMutable();
          visualField_.add(index, value);
          onChanged();
        } else {
          visualFieldBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder addVisualField(
          proto.ddx.v1.Fields.VisualField.Builder builderForValue) {
        if (visualFieldBuilder_ == null) {
          ensureVisualFieldIsMutable();
          visualField_.add(builderForValue.build());
          onChanged();
        } else {
          visualFieldBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder addVisualField(
          int index, proto.ddx.v1.Fields.VisualField.Builder builderForValue) {
        if (visualFieldBuilder_ == null) {
          ensureVisualFieldIsMutable();
          visualField_.add(index, builderForValue.build());
          onChanged();
        } else {
          visualFieldBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder addAllVisualField(
          java.lang.Iterable<? extends proto.ddx.v1.Fields.VisualField> values) {
        if (visualFieldBuilder_ == null) {
          ensureVisualFieldIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, visualField_);
          onChanged();
        } else {
          visualFieldBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder clearVisualField() {
        if (visualFieldBuilder_ == null) {
          visualField_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          visualFieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public Builder removeVisualField(int index) {
        if (visualFieldBuilder_ == null) {
          ensureVisualFieldIsMutable();
          visualField_.remove(index);
          onChanged();
        } else {
          visualFieldBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public proto.ddx.v1.Fields.VisualField.Builder getVisualFieldBuilder(
          int index) {
        return getVisualFieldFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public proto.ddx.v1.Fields.VisualFieldOrBuilder getVisualFieldOrBuilder(
          int index) {
        if (visualFieldBuilder_ == null) {
          return visualField_.get(index);  } else {
          return visualFieldBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public java.util.List<? extends proto.ddx.v1.Fields.VisualFieldOrBuilder> 
           getVisualFieldOrBuilderList() {
        if (visualFieldBuilder_ != null) {
          return visualFieldBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(visualField_);
        }
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public proto.ddx.v1.Fields.VisualField.Builder addVisualFieldBuilder() {
        return getVisualFieldFieldBuilder().addBuilder(
            proto.ddx.v1.Fields.VisualField.getDefaultInstance());
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public proto.ddx.v1.Fields.VisualField.Builder addVisualFieldBuilder(
          int index) {
        return getVisualFieldFieldBuilder().addBuilder(
            index, proto.ddx.v1.Fields.VisualField.getDefaultInstance());
      }
      /**
       * <pre>
       * visualField holds detected document visual fields.
       * Visual fields are those whose values can't be extracted as text, and are
       * expected to be extracted as an image or position in the given image.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.VisualField visualField = 2 [json_name = "visualField"];</code>
       */
      public java.util.List<proto.ddx.v1.Fields.VisualField.Builder> 
           getVisualFieldBuilderList() {
        return getVisualFieldFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          proto.ddx.v1.Fields.VisualField, proto.ddx.v1.Fields.VisualField.Builder, proto.ddx.v1.Fields.VisualFieldOrBuilder> 
          getVisualFieldFieldBuilder() {
        if (visualFieldBuilder_ == null) {
          visualFieldBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              proto.ddx.v1.Fields.VisualField, proto.ddx.v1.Fields.VisualField.Builder, proto.ddx.v1.Fields.VisualFieldOrBuilder>(
                  visualField_,
                  ((bitField0_ & 0x00000002) != 0),
                  getParentForChildren(),
                  isClean());
          visualField_ = null;
        }
        return visualFieldBuilder_;
      }

      private java.util.List<proto.ddx.v1.Fields.DateField> dateField_ =
        java.util.Collections.emptyList();
      private void ensureDateFieldIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          dateField_ = new java.util.ArrayList<proto.ddx.v1.Fields.DateField>(dateField_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          proto.ddx.v1.Fields.DateField, proto.ddx.v1.Fields.DateField.Builder, proto.ddx.v1.Fields.DateFieldOrBuilder> dateFieldBuilder_;

      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public java.util.List<proto.ddx.v1.Fields.DateField> getDateFieldList() {
        if (dateFieldBuilder_ == null) {
          return java.util.Collections.unmodifiableList(dateField_);
        } else {
          return dateFieldBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public int getDateFieldCount() {
        if (dateFieldBuilder_ == null) {
          return dateField_.size();
        } else {
          return dateFieldBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public proto.ddx.v1.Fields.DateField getDateField(int index) {
        if (dateFieldBuilder_ == null) {
          return dateField_.get(index);
        } else {
          return dateFieldBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder setDateField(
          int index, proto.ddx.v1.Fields.DateField value) {
        if (dateFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDateFieldIsMutable();
          dateField_.set(index, value);
          onChanged();
        } else {
          dateFieldBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder setDateField(
          int index, proto.ddx.v1.Fields.DateField.Builder builderForValue) {
        if (dateFieldBuilder_ == null) {
          ensureDateFieldIsMutable();
          dateField_.set(index, builderForValue.build());
          onChanged();
        } else {
          dateFieldBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder addDateField(proto.ddx.v1.Fields.DateField value) {
        if (dateFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDateFieldIsMutable();
          dateField_.add(value);
          onChanged();
        } else {
          dateFieldBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder addDateField(
          int index, proto.ddx.v1.Fields.DateField value) {
        if (dateFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureDateFieldIsMutable();
          dateField_.add(index, value);
          onChanged();
        } else {
          dateFieldBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder addDateField(
          proto.ddx.v1.Fields.DateField.Builder builderForValue) {
        if (dateFieldBuilder_ == null) {
          ensureDateFieldIsMutable();
          dateField_.add(builderForValue.build());
          onChanged();
        } else {
          dateFieldBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder addDateField(
          int index, proto.ddx.v1.Fields.DateField.Builder builderForValue) {
        if (dateFieldBuilder_ == null) {
          ensureDateFieldIsMutable();
          dateField_.add(index, builderForValue.build());
          onChanged();
        } else {
          dateFieldBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder addAllDateField(
          java.lang.Iterable<? extends proto.ddx.v1.Fields.DateField> values) {
        if (dateFieldBuilder_ == null) {
          ensureDateFieldIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, dateField_);
          onChanged();
        } else {
          dateFieldBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder clearDateField() {
        if (dateFieldBuilder_ == null) {
          dateField_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          dateFieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public Builder removeDateField(int index) {
        if (dateFieldBuilder_ == null) {
          ensureDateFieldIsMutable();
          dateField_.remove(index);
          onChanged();
        } else {
          dateFieldBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public proto.ddx.v1.Fields.DateField.Builder getDateFieldBuilder(
          int index) {
        return getDateFieldFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public proto.ddx.v1.Fields.DateFieldOrBuilder getDateFieldOrBuilder(
          int index) {
        if (dateFieldBuilder_ == null) {
          return dateField_.get(index);  } else {
          return dateFieldBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public java.util.List<? extends proto.ddx.v1.Fields.DateFieldOrBuilder> 
           getDateFieldOrBuilderList() {
        if (dateFieldBuilder_ != null) {
          return dateFieldBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(dateField_);
        }
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public proto.ddx.v1.Fields.DateField.Builder addDateFieldBuilder() {
        return getDateFieldFieldBuilder().addBuilder(
            proto.ddx.v1.Fields.DateField.getDefaultInstance());
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public proto.ddx.v1.Fields.DateField.Builder addDateFieldBuilder(
          int index) {
        return getDateFieldFieldBuilder().addBuilder(
            index, proto.ddx.v1.Fields.DateField.getDefaultInstance());
      }
      /**
       * <pre>
       * dateField holds detected document date fields.
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer "date" in a structured parsed format (year, month, day) regardless of textual
       * representation.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.DateField dateField = 3 [json_name = "dateField"];</code>
       */
      public java.util.List<proto.ddx.v1.Fields.DateField.Builder> 
           getDateFieldBuilderList() {
        return getDateFieldFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          proto.ddx.v1.Fields.DateField, proto.ddx.v1.Fields.DateField.Builder, proto.ddx.v1.Fields.DateFieldOrBuilder> 
          getDateFieldFieldBuilder() {
        if (dateFieldBuilder_ == null) {
          dateFieldBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              proto.ddx.v1.Fields.DateField, proto.ddx.v1.Fields.DateField.Builder, proto.ddx.v1.Fields.DateFieldOrBuilder>(
                  dateField_,
                  ((bitField0_ & 0x00000004) != 0),
                  getParentForChildren(),
                  isClean());
          dateField_ = null;
        }
        return dateFieldBuilder_;
      }

      private java.util.List<proto.ddx.v1.Fields.SexField> sexField_ =
        java.util.Collections.emptyList();
      private void ensureSexFieldIsMutable() {
        if (!((bitField0_ & 0x00000008) != 0)) {
          sexField_ = new java.util.ArrayList<proto.ddx.v1.Fields.SexField>(sexField_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          proto.ddx.v1.Fields.SexField, proto.ddx.v1.Fields.SexField.Builder, proto.ddx.v1.Fields.SexFieldOrBuilder> sexFieldBuilder_;

      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public java.util.List<proto.ddx.v1.Fields.SexField> getSexFieldList() {
        if (sexFieldBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sexField_);
        } else {
          return sexFieldBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public int getSexFieldCount() {
        if (sexFieldBuilder_ == null) {
          return sexField_.size();
        } else {
          return sexFieldBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public proto.ddx.v1.Fields.SexField getSexField(int index) {
        if (sexFieldBuilder_ == null) {
          return sexField_.get(index);
        } else {
          return sexFieldBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder setSexField(
          int index, proto.ddx.v1.Fields.SexField value) {
        if (sexFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSexFieldIsMutable();
          sexField_.set(index, value);
          onChanged();
        } else {
          sexFieldBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder setSexField(
          int index, proto.ddx.v1.Fields.SexField.Builder builderForValue) {
        if (sexFieldBuilder_ == null) {
          ensureSexFieldIsMutable();
          sexField_.set(index, builderForValue.build());
          onChanged();
        } else {
          sexFieldBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder addSexField(proto.ddx.v1.Fields.SexField value) {
        if (sexFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSexFieldIsMutable();
          sexField_.add(value);
          onChanged();
        } else {
          sexFieldBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder addSexField(
          int index, proto.ddx.v1.Fields.SexField value) {
        if (sexFieldBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSexFieldIsMutable();
          sexField_.add(index, value);
          onChanged();
        } else {
          sexFieldBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder addSexField(
          proto.ddx.v1.Fields.SexField.Builder builderForValue) {
        if (sexFieldBuilder_ == null) {
          ensureSexFieldIsMutable();
          sexField_.add(builderForValue.build());
          onChanged();
        } else {
          sexFieldBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder addSexField(
          int index, proto.ddx.v1.Fields.SexField.Builder builderForValue) {
        if (sexFieldBuilder_ == null) {
          ensureSexFieldIsMutable();
          sexField_.add(index, builderForValue.build());
          onChanged();
        } else {
          sexFieldBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder addAllSexField(
          java.lang.Iterable<? extends proto.ddx.v1.Fields.SexField> values) {
        if (sexFieldBuilder_ == null) {
          ensureSexFieldIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sexField_);
          onChanged();
        } else {
          sexFieldBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder clearSexField() {
        if (sexFieldBuilder_ == null) {
          sexField_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          sexFieldBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public Builder removeSexField(int index) {
        if (sexFieldBuilder_ == null) {
          ensureSexFieldIsMutable();
          sexField_.remove(index);
          onChanged();
        } else {
          sexFieldBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public proto.ddx.v1.Fields.SexField.Builder getSexFieldBuilder(
          int index) {
        return getSexFieldFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public proto.ddx.v1.Fields.SexFieldOrBuilder getSexFieldOrBuilder(
          int index) {
        if (sexFieldBuilder_ == null) {
          return sexField_.get(index);  } else {
          return sexFieldBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public java.util.List<? extends proto.ddx.v1.Fields.SexFieldOrBuilder> 
           getSexFieldOrBuilderList() {
        if (sexFieldBuilder_ != null) {
          return sexFieldBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sexField_);
        }
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public proto.ddx.v1.Fields.SexField.Builder addSexFieldBuilder() {
        return getSexFieldFieldBuilder().addBuilder(
            proto.ddx.v1.Fields.SexField.getDefaultInstance());
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public proto.ddx.v1.Fields.SexField.Builder addSexFieldBuilder(
          int index) {
        return getSexFieldFieldBuilder().addBuilder(
            index, proto.ddx.v1.Fields.SexField.getDefaultInstance());
      }
      /**
       * <pre>
       * sexField holds detected document gender fields
       * Compared to textual fields, they don't just hold textual information present on the document
       * but offer gender information as an parsed enumeration.
       * </pre>
       *
       * <code>repeated .proto.ddx.v1.SexField sexField = 4 [json_name = "sexField"];</code>
       */
      public java.util.List<proto.ddx.v1.Fields.SexField.Builder> 
           getSexFieldBuilderList() {
        return getSexFieldFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          proto.ddx.v1.Fields.SexField, proto.ddx.v1.Fields.SexField.Builder, proto.ddx.v1.Fields.SexFieldOrBuilder> 
          getSexFieldFieldBuilder() {
        if (sexFieldBuilder_ == null) {
          sexFieldBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              proto.ddx.v1.Fields.SexField, proto.ddx.v1.Fields.SexField.Builder, proto.ddx.v1.Fields.SexFieldOrBuilder>(
                  sexField_,
                  ((bitField0_ & 0x00000008) != 0),
                  getParentForChildren(),
                  isClean());
          sexField_ = null;
        }
        return sexFieldBuilder_;
      }

      private proto.ddx.v1.Service.Mrz mrz_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.Mrz, proto.ddx.v1.Service.Mrz.Builder, proto.ddx.v1.Service.MrzOrBuilder> mrzBuilder_;
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       * @return Whether the mrz field is set.
       */
      public boolean hasMrz() {
        return ((bitField0_ & 0x00000010) != 0);
      }
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       * @return The mrz.
       */
      public proto.ddx.v1.Service.Mrz getMrz() {
        if (mrzBuilder_ == null) {
          return mrz_ == null ? proto.ddx.v1.Service.Mrz.getDefaultInstance() : mrz_;
        } else {
          return mrzBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       */
      public Builder setMrz(proto.ddx.v1.Service.Mrz value) {
        if (mrzBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          mrz_ = value;
        } else {
          mrzBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       */
      public Builder setMrz(
          proto.ddx.v1.Service.Mrz.Builder builderForValue) {
        if (mrzBuilder_ == null) {
          mrz_ = builderForValue.build();
        } else {
          mrzBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000010;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       */
      public Builder mergeMrz(proto.ddx.v1.Service.Mrz value) {
        if (mrzBuilder_ == null) {
          if (((bitField0_ & 0x00000010) != 0) &&
            mrz_ != null &&
            mrz_ != proto.ddx.v1.Service.Mrz.getDefaultInstance()) {
            getMrzBuilder().mergeFrom(value);
          } else {
            mrz_ = value;
          }
        } else {
          mrzBuilder_.mergeFrom(value);
        }
        if (mrz_ != null) {
          bitField0_ |= 0x00000010;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       */
      public Builder clearMrz() {
        bitField0_ = (bitField0_ & ~0x00000010);
        mrz_ = null;
        if (mrzBuilder_ != null) {
          mrzBuilder_.dispose();
          mrzBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       */
      public proto.ddx.v1.Service.Mrz.Builder getMrzBuilder() {
        bitField0_ |= 0x00000010;
        onChanged();
        return getMrzFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       */
      public proto.ddx.v1.Service.MrzOrBuilder getMrzOrBuilder() {
        if (mrzBuilder_ != null) {
          return mrzBuilder_.getMessageOrBuilder();
        } else {
          return mrz_ == null ?
              proto.ddx.v1.Service.Mrz.getDefaultInstance() : mrz_;
        }
      }
      /**
       * <pre>
       * mrz holds the mrz data extracted from the image if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Mrz mrz = 5 [json_name = "mrz"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.Mrz, proto.ddx.v1.Service.Mrz.Builder, proto.ddx.v1.Service.MrzOrBuilder> 
          getMrzFieldBuilder() {
        if (mrzBuilder_ == null) {
          mrzBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.Mrz, proto.ddx.v1.Service.Mrz.Builder, proto.ddx.v1.Service.MrzOrBuilder>(
                  getMrz(),
                  getParentForChildren(),
                  isClean());
          mrz_ = null;
        }
        return mrzBuilder_;
      }

      private proto.ddx.v1.Barcode.Pdf417Barcode pdf417Barcode_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Barcode.Pdf417Barcode, proto.ddx.v1.Barcode.Pdf417Barcode.Builder, proto.ddx.v1.Barcode.Pdf417BarcodeOrBuilder> pdf417BarcodeBuilder_;
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       * @return Whether the pdf417Barcode field is set.
       */
      public boolean hasPdf417Barcode() {
        return ((bitField0_ & 0x00000020) != 0);
      }
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       * @return The pdf417Barcode.
       */
      public proto.ddx.v1.Barcode.Pdf417Barcode getPdf417Barcode() {
        if (pdf417BarcodeBuilder_ == null) {
          return pdf417Barcode_ == null ? proto.ddx.v1.Barcode.Pdf417Barcode.getDefaultInstance() : pdf417Barcode_;
        } else {
          return pdf417BarcodeBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       */
      public Builder setPdf417Barcode(proto.ddx.v1.Barcode.Pdf417Barcode value) {
        if (pdf417BarcodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          pdf417Barcode_ = value;
        } else {
          pdf417BarcodeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       */
      public Builder setPdf417Barcode(
          proto.ddx.v1.Barcode.Pdf417Barcode.Builder builderForValue) {
        if (pdf417BarcodeBuilder_ == null) {
          pdf417Barcode_ = builderForValue.build();
        } else {
          pdf417BarcodeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000020;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       */
      public Builder mergePdf417Barcode(proto.ddx.v1.Barcode.Pdf417Barcode value) {
        if (pdf417BarcodeBuilder_ == null) {
          if (((bitField0_ & 0x00000020) != 0) &&
            pdf417Barcode_ != null &&
            pdf417Barcode_ != proto.ddx.v1.Barcode.Pdf417Barcode.getDefaultInstance()) {
            getPdf417BarcodeBuilder().mergeFrom(value);
          } else {
            pdf417Barcode_ = value;
          }
        } else {
          pdf417BarcodeBuilder_.mergeFrom(value);
        }
        if (pdf417Barcode_ != null) {
          bitField0_ |= 0x00000020;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       */
      public Builder clearPdf417Barcode() {
        bitField0_ = (bitField0_ & ~0x00000020);
        pdf417Barcode_ = null;
        if (pdf417BarcodeBuilder_ != null) {
          pdf417BarcodeBuilder_.dispose();
          pdf417BarcodeBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       */
      public proto.ddx.v1.Barcode.Pdf417Barcode.Builder getPdf417BarcodeBuilder() {
        bitField0_ |= 0x00000020;
        onChanged();
        return getPdf417BarcodeFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       */
      public proto.ddx.v1.Barcode.Pdf417BarcodeOrBuilder getPdf417BarcodeOrBuilder() {
        if (pdf417BarcodeBuilder_ != null) {
          return pdf417BarcodeBuilder_.getMessageOrBuilder();
        } else {
          return pdf417Barcode_ == null ?
              proto.ddx.v1.Barcode.Pdf417Barcode.getDefaultInstance() : pdf417Barcode_;
        }
      }
      /**
       * <pre>
       * pdf417Barcode - holds data extracted from PDF417 barcode detected on the document if one was found, empty otherwise
       * </pre>
       *
       * <code>.proto.ddx.v1.Pdf417Barcode pdf417Barcode = 6 [json_name = "pdf417Barcode"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Barcode.Pdf417Barcode, proto.ddx.v1.Barcode.Pdf417Barcode.Builder, proto.ddx.v1.Barcode.Pdf417BarcodeOrBuilder> 
          getPdf417BarcodeFieldBuilder() {
        if (pdf417BarcodeBuilder_ == null) {
          pdf417BarcodeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Barcode.Pdf417Barcode, proto.ddx.v1.Barcode.Pdf417Barcode.Builder, proto.ddx.v1.Barcode.Pdf417BarcodeOrBuilder>(
                  getPdf417Barcode(),
                  getParentForChildren(),
                  isClean());
          pdf417Barcode_ = null;
        }
        return pdf417BarcodeBuilder_;
      }

      private com.google.protobuf.ByteString documentImage_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * Optional, empty by default, returned if specified in requests "config" field.
       * Of course, it will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>bytes documentImage = 7 [json_name = "documentImage"];</code>
       * @return The documentImage.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getDocumentImage() {
        return documentImage_;
      }
      /**
       * <pre>
       * Optional, empty by default, returned if specified in requests "config" field.
       * Of course, it will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>bytes documentImage = 7 [json_name = "documentImage"];</code>
       * @param value The documentImage to set.
       * @return This builder for chaining.
       */
      public Builder setDocumentImage(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        documentImage_ = value;
        bitField0_ |= 0x00000040;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * Optional, empty by default, returned if specified in requests "config" field.
       * Of course, it will be empty if status is DOCUMENT_NOT_FOUND
       * </pre>
       *
       * <code>bytes documentImage = 7 [json_name = "documentImage"];</code>
       * @return This builder for chaining.
       */
      public Builder clearDocumentImage() {
        bitField0_ = (bitField0_ & ~0x00000040);
        documentImage_ = getDefaultInstance().getDocumentImage();
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.DocumentData)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.DocumentData)
    private static final proto.ddx.v1.Service.DocumentData DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.DocumentData();
    }

    public static proto.ddx.v1.Service.DocumentData getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<DocumentData>
        PARSER = new com.google.protobuf.AbstractParser<DocumentData>() {
      @java.lang.Override
      public DocumentData parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<DocumentData> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<DocumentData> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.DocumentData getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScanTwoSidedDocumentRequestOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanTwoSidedDocumentRequest)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
     * </pre>
     *
     * <code>bytes firstImage = 1 [json_name = "firstImage"];</code>
     * @return The firstImage.
     */
    com.google.protobuf.ByteString getFirstImage();

    /**
     * <pre>
     * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
     * </pre>
     *
     * <code>bytes secondImage = 2 [json_name = "secondImage"];</code>
     * @return The secondImage.
     */
    com.google.protobuf.ByteString getSecondImage();

    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
     * @return Whether the config field is set.
     */
    boolean hasConfig();
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
     * @return The config.
     */
    proto.ddx.v1.Service.ScanConfig getConfig();
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
     */
    proto.ddx.v1.Service.ScanConfigOrBuilder getConfigOrBuilder();
  }
  /**
   * Protobuf type {@code proto.ddx.v1.ScanTwoSidedDocumentRequest}
   */
  public static final class ScanTwoSidedDocumentRequest extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanTwoSidedDocumentRequest)
      ScanTwoSidedDocumentRequestOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ScanTwoSidedDocumentRequest.class.getName());
    }
    // Use ScanTwoSidedDocumentRequest.newBuilder() to construct.
    private ScanTwoSidedDocumentRequest(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ScanTwoSidedDocumentRequest() {
      firstImage_ = com.google.protobuf.ByteString.EMPTY;
      secondImage_ = com.google.protobuf.ByteString.EMPTY;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.ScanTwoSidedDocumentRequest.class, proto.ddx.v1.Service.ScanTwoSidedDocumentRequest.Builder.class);
    }

    private int bitField0_;
    public static final int FIRSTIMAGE_FIELD_NUMBER = 1;
    private com.google.protobuf.ByteString firstImage_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
     * </pre>
     *
     * <code>bytes firstImage = 1 [json_name = "firstImage"];</code>
     * @return The firstImage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getFirstImage() {
      return firstImage_;
    }

    public static final int SECONDIMAGE_FIELD_NUMBER = 2;
    private com.google.protobuf.ByteString secondImage_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
     * </pre>
     *
     * <code>bytes secondImage = 2 [json_name = "secondImage"];</code>
     * @return The secondImage.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSecondImage() {
      return secondImage_;
    }

    public static final int CONFIG_FIELD_NUMBER = 3;
    private proto.ddx.v1.Service.ScanConfig config_;
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
     * @return Whether the config field is set.
     */
    @java.lang.Override
    public boolean hasConfig() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
     * @return The config.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfig getConfig() {
      return config_ == null ? proto.ddx.v1.Service.ScanConfig.getDefaultInstance() : config_;
    }
    /**
     * <pre>
     * config - optional, this can be set to configure some server parameters and what do you want the server to
     * return. This includes selection of returning images, selecting fields etc.
     * </pre>
     *
     * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.ScanConfigOrBuilder getConfigOrBuilder() {
      return config_ == null ? proto.ddx.v1.Service.ScanConfig.getDefaultInstance() : config_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (!firstImage_.isEmpty()) {
        output.writeBytes(1, firstImage_);
      }
      if (!secondImage_.isEmpty()) {
        output.writeBytes(2, secondImage_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(3, getConfig());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (!firstImage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, firstImage_);
      }
      if (!secondImage_.isEmpty()) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, secondImage_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getConfig());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.ScanTwoSidedDocumentRequest)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.ScanTwoSidedDocumentRequest other = (proto.ddx.v1.Service.ScanTwoSidedDocumentRequest) obj;

      if (!getFirstImage()
          .equals(other.getFirstImage())) return false;
      if (!getSecondImage()
          .equals(other.getSecondImage())) return false;
      if (hasConfig() != other.hasConfig()) return false;
      if (hasConfig()) {
        if (!getConfig()
            .equals(other.getConfig())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + FIRSTIMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getFirstImage().hashCode();
      hash = (37 * hash) + SECONDIMAGE_FIELD_NUMBER;
      hash = (53 * hash) + getSecondImage().hashCode();
      if (hasConfig()) {
        hash = (37 * hash) + CONFIG_FIELD_NUMBER;
        hash = (53 * hash) + getConfig().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.ScanTwoSidedDocumentRequest prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.ddx.v1.ScanTwoSidedDocumentRequest}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanTwoSidedDocumentRequest)
        proto.ddx.v1.Service.ScanTwoSidedDocumentRequestOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanTwoSidedDocumentRequest.class, proto.ddx.v1.Service.ScanTwoSidedDocumentRequest.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.ScanTwoSidedDocumentRequest.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getConfigFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        firstImage_ = com.google.protobuf.ByteString.EMPTY;
        secondImage_ = com.google.protobuf.ByteString.EMPTY;
        config_ = null;
        if (configBuilder_ != null) {
          configBuilder_.dispose();
          configBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanTwoSidedDocumentRequest getDefaultInstanceForType() {
        return proto.ddx.v1.Service.ScanTwoSidedDocumentRequest.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanTwoSidedDocumentRequest build() {
        proto.ddx.v1.Service.ScanTwoSidedDocumentRequest result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanTwoSidedDocumentRequest buildPartial() {
        proto.ddx.v1.Service.ScanTwoSidedDocumentRequest result = new proto.ddx.v1.Service.ScanTwoSidedDocumentRequest(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.ddx.v1.Service.ScanTwoSidedDocumentRequest result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.firstImage_ = firstImage_;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.secondImage_ = secondImage_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.config_ = configBuilder_ == null
              ? config_
              : configBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.ScanTwoSidedDocumentRequest) {
          return mergeFrom((proto.ddx.v1.Service.ScanTwoSidedDocumentRequest)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.ScanTwoSidedDocumentRequest other) {
        if (other == proto.ddx.v1.Service.ScanTwoSidedDocumentRequest.getDefaultInstance()) return this;
        if (other.getFirstImage() != com.google.protobuf.ByteString.EMPTY) {
          setFirstImage(other.getFirstImage());
        }
        if (other.getSecondImage() != com.google.protobuf.ByteString.EMPTY) {
          setSecondImage(other.getSecondImage());
        }
        if (other.hasConfig()) {
          mergeConfig(other.getConfig());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                firstImage_ = input.readBytes();
                bitField0_ |= 0x00000001;
                break;
              } // case 10
              case 18: {
                secondImage_ = input.readBytes();
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getConfigFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.ByteString firstImage_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes firstImage = 1 [json_name = "firstImage"];</code>
       * @return The firstImage.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getFirstImage() {
        return firstImage_;
      }
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes firstImage = 1 [json_name = "firstImage"];</code>
       * @param value The firstImage to set.
       * @return This builder for chaining.
       */
      public Builder setFirstImage(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        firstImage_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes firstImage = 1 [json_name = "firstImage"];</code>
       * @return This builder for chaining.
       */
      public Builder clearFirstImage() {
        bitField0_ = (bitField0_ & ~0x00000001);
        firstImage_ = getDefaultInstance().getFirstImage();
        onChanged();
        return this;
      }

      private com.google.protobuf.ByteString secondImage_ = com.google.protobuf.ByteString.EMPTY;
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes secondImage = 2 [json_name = "secondImage"];</code>
       * @return The secondImage.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString getSecondImage() {
        return secondImage_;
      }
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes secondImage = 2 [json_name = "secondImage"];</code>
       * @param value The secondImage to set.
       * @return This builder for chaining.
       */
      public Builder setSecondImage(com.google.protobuf.ByteString value) {
        if (value == null) { throw new NullPointerException(); }
        secondImage_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * image jpeg data bytes. If using http gateway (rest w json) this is base64 encoded string of image jpeg bytes
       * </pre>
       *
       * <code>bytes secondImage = 2 [json_name = "secondImage"];</code>
       * @return This builder for chaining.
       */
      public Builder clearSecondImage() {
        bitField0_ = (bitField0_ & ~0x00000002);
        secondImage_ = getDefaultInstance().getSecondImage();
        onChanged();
        return this;
      }

      private proto.ddx.v1.Service.ScanConfig config_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig, proto.ddx.v1.Service.ScanConfig.Builder, proto.ddx.v1.Service.ScanConfigOrBuilder> configBuilder_;
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       * @return Whether the config field is set.
       */
      public boolean hasConfig() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       * @return The config.
       */
      public proto.ddx.v1.Service.ScanConfig getConfig() {
        if (configBuilder_ == null) {
          return config_ == null ? proto.ddx.v1.Service.ScanConfig.getDefaultInstance() : config_;
        } else {
          return configBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       */
      public Builder setConfig(proto.ddx.v1.Service.ScanConfig value) {
        if (configBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          config_ = value;
        } else {
          configBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       */
      public Builder setConfig(
          proto.ddx.v1.Service.ScanConfig.Builder builderForValue) {
        if (configBuilder_ == null) {
          config_ = builderForValue.build();
        } else {
          configBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       */
      public Builder mergeConfig(proto.ddx.v1.Service.ScanConfig value) {
        if (configBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            config_ != null &&
            config_ != proto.ddx.v1.Service.ScanConfig.getDefaultInstance()) {
            getConfigBuilder().mergeFrom(value);
          } else {
            config_ = value;
          }
        } else {
          configBuilder_.mergeFrom(value);
        }
        if (config_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       */
      public Builder clearConfig() {
        bitField0_ = (bitField0_ & ~0x00000004);
        config_ = null;
        if (configBuilder_ != null) {
          configBuilder_.dispose();
          configBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       */
      public proto.ddx.v1.Service.ScanConfig.Builder getConfigBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getConfigFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       */
      public proto.ddx.v1.Service.ScanConfigOrBuilder getConfigOrBuilder() {
        if (configBuilder_ != null) {
          return configBuilder_.getMessageOrBuilder();
        } else {
          return config_ == null ?
              proto.ddx.v1.Service.ScanConfig.getDefaultInstance() : config_;
        }
      }
      /**
       * <pre>
       * config - optional, this can be set to configure some server parameters and what do you want the server to
       * return. This includes selection of returning images, selecting fields etc.
       * </pre>
       *
       * <code>.proto.ddx.v1.ScanConfig config = 3 [json_name = "config"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.ScanConfig, proto.ddx.v1.Service.ScanConfig.Builder, proto.ddx.v1.Service.ScanConfigOrBuilder> 
          getConfigFieldBuilder() {
        if (configBuilder_ == null) {
          configBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.ScanConfig, proto.ddx.v1.Service.ScanConfig.Builder, proto.ddx.v1.Service.ScanConfigOrBuilder>(
                  getConfig(),
                  getParentForChildren(),
                  isClean());
          config_ = null;
        }
        return configBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanTwoSidedDocumentRequest)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanTwoSidedDocumentRequest)
    private static final proto.ddx.v1.Service.ScanTwoSidedDocumentRequest DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanTwoSidedDocumentRequest();
    }

    public static proto.ddx.v1.Service.ScanTwoSidedDocumentRequest getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScanTwoSidedDocumentRequest>
        PARSER = new com.google.protobuf.AbstractParser<ScanTwoSidedDocumentRequest>() {
      @java.lang.Override
      public ScanTwoSidedDocumentRequest parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ScanTwoSidedDocumentRequest> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScanTwoSidedDocumentRequest> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.ScanTwoSidedDocumentRequest getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface ScanTwoSidedDocumentResponseOrBuilder extends
      // @@protoc_insertion_point(interface_extends:proto.ddx.v1.ScanTwoSidedDocumentResponse)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    int getStatusValue();
    /**
     * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
     * @return The status.
     */
    proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status getStatus();

    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
     * @return Whether the classification field is set.
     */
    boolean hasClassification();
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
     * @return The classification.
     */
    proto.ddx.v1.Service.DocumentClass getClassification();
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
     */
    proto.ddx.v1.Service.DocumentClassOrBuilder getClassificationOrBuilder();

    /**
     * <pre>
     * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
     * @return Whether the frontSide field is set.
     */
    boolean hasFrontSide();
    /**
     * <pre>
     * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
     * @return The frontSide.
     */
    proto.ddx.v1.Service.DocumentData getFrontSide();
    /**
     * <pre>
     * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
     */
    proto.ddx.v1.Service.DocumentDataOrBuilder getFrontSideOrBuilder();

    /**
     * <pre>
     * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
     * @return Whether the backSide field is set.
     */
    boolean hasBackSide();
    /**
     * <pre>
     * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
     * @return The backSide.
     */
    proto.ddx.v1.Service.DocumentData getBackSide();
    /**
     * <pre>
     * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
     */
    proto.ddx.v1.Service.DocumentDataOrBuilder getBackSideOrBuilder();
  }
  /**
   * Protobuf type {@code proto.ddx.v1.ScanTwoSidedDocumentResponse}
   */
  public static final class ScanTwoSidedDocumentResponse extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:proto.ddx.v1.ScanTwoSidedDocumentResponse)
      ScanTwoSidedDocumentResponseOrBuilder {
  private static final long serialVersionUID = 0L;
    static {
      com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
        com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
        /* major= */ 4,
        /* minor= */ 28,
        /* patch= */ 2,
        /* suffix= */ "",
        ScanTwoSidedDocumentResponse.class.getName());
    }
    // Use ScanTwoSidedDocumentResponse.newBuilder() to construct.
    private ScanTwoSidedDocumentResponse(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
    }
    private ScanTwoSidedDocumentResponse() {
      status_ = 0;
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.class, proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Builder.class);
    }

    /**
     * Protobuf enum {@code proto.ddx.v1.ScanTwoSidedDocumentResponse.Status}
     */
    public enum Status
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>STATUS_OK = 0;</code>
       */
      STATUS_OK(0),
      /**
       * <code>STATUS_FRONT_SIDE_NOT_FOUND = 1;</code>
       */
      STATUS_FRONT_SIDE_NOT_FOUND(1),
      /**
       * <code>STATUS_BACK_SIDE_NOT_FOUND = 2;</code>
       */
      STATUS_BACK_SIDE_NOT_FOUND(2),
      /**
       * <code>STATUS_NOT_SUPPORTED = 3;</code>
       */
      STATUS_NOT_SUPPORTED(3),
      UNRECOGNIZED(-1),
      ;

      static {
        com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
          com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
          /* major= */ 4,
          /* minor= */ 28,
          /* patch= */ 2,
          /* suffix= */ "",
          Status.class.getName());
      }
      /**
       * <code>STATUS_OK = 0;</code>
       */
      public static final int STATUS_OK_VALUE = 0;
      /**
       * <code>STATUS_FRONT_SIDE_NOT_FOUND = 1;</code>
       */
      public static final int STATUS_FRONT_SIDE_NOT_FOUND_VALUE = 1;
      /**
       * <code>STATUS_BACK_SIDE_NOT_FOUND = 2;</code>
       */
      public static final int STATUS_BACK_SIDE_NOT_FOUND_VALUE = 2;
      /**
       * <code>STATUS_NOT_SUPPORTED = 3;</code>
       */
      public static final int STATUS_NOT_SUPPORTED_VALUE = 3;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static Status valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static Status forNumber(int value) {
        switch (value) {
          case 0: return STATUS_OK;
          case 1: return STATUS_FRONT_SIDE_NOT_FOUND;
          case 2: return STATUS_BACK_SIDE_NOT_FOUND;
          case 3: return STATUS_NOT_SUPPORTED;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<Status>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          Status> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<Status>() {
              public Status findValueByNumber(int number) {
                return Status.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.getDescriptor().getEnumTypes().get(0);
      }

      private static final Status[] VALUES = values();

      public static Status valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private Status(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:proto.ddx.v1.ScanTwoSidedDocumentResponse.Status)
    }

    private int bitField0_;
    public static final int STATUS_FIELD_NUMBER = 1;
    private int status_ = 0;
    /**
     * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
     * @return The enum numeric value on the wire for status.
     */
    @java.lang.Override public int getStatusValue() {
      return status_;
    }
    /**
     * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
     * @return The status.
     */
    @java.lang.Override public proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status getStatus() {
      proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status result = proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status.forNumber(status_);
      return result == null ? proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status.UNRECOGNIZED : result;
    }

    public static final int CLASSIFICATION_FIELD_NUMBER = 2;
    private proto.ddx.v1.Service.DocumentClass classification_;
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
     * @return Whether the classification field is set.
     */
    @java.lang.Override
    public boolean hasClassification() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
     * @return The classification.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentClass getClassification() {
      return classification_ == null ? proto.ddx.v1.Service.DocumentClass.getDefaultInstance() : classification_;
    }
    /**
     * <pre>
     * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentClassOrBuilder getClassificationOrBuilder() {
      return classification_ == null ? proto.ddx.v1.Service.DocumentClass.getDefaultInstance() : classification_;
    }

    public static final int FRONTSIDE_FIELD_NUMBER = 3;
    private proto.ddx.v1.Service.DocumentData frontSide_;
    /**
     * <pre>
     * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
     * @return Whether the frontSide field is set.
     */
    @java.lang.Override
    public boolean hasFrontSide() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <pre>
     * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
     * @return The frontSide.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentData getFrontSide() {
      return frontSide_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : frontSide_;
    }
    /**
     * <pre>
     * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentDataOrBuilder getFrontSideOrBuilder() {
      return frontSide_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : frontSide_;
    }

    public static final int BACKSIDE_FIELD_NUMBER = 4;
    private proto.ddx.v1.Service.DocumentData backSide_;
    /**
     * <pre>
     * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
     * @return Whether the backSide field is set.
     */
    @java.lang.Override
    public boolean hasBackSide() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <pre>
     * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
     * @return The backSide.
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentData getBackSide() {
      return backSide_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : backSide_;
    }
    /**
     * <pre>
     * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
     * </pre>
     *
     * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
     */
    @java.lang.Override
    public proto.ddx.v1.Service.DocumentDataOrBuilder getBackSideOrBuilder() {
      return backSide_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : backSide_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (status_ != proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status.STATUS_OK.getNumber()) {
        output.writeEnum(1, status_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeMessage(2, getClassification());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeMessage(3, getFrontSide());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getBackSide());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (status_ != proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status.STATUS_OK.getNumber()) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, status_);
      }
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getClassification());
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, getFrontSide());
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getBackSide());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.ddx.v1.Service.ScanTwoSidedDocumentResponse)) {
        return super.equals(obj);
      }
      proto.ddx.v1.Service.ScanTwoSidedDocumentResponse other = (proto.ddx.v1.Service.ScanTwoSidedDocumentResponse) obj;

      if (status_ != other.status_) return false;
      if (hasClassification() != other.hasClassification()) return false;
      if (hasClassification()) {
        if (!getClassification()
            .equals(other.getClassification())) return false;
      }
      if (hasFrontSide() != other.hasFrontSide()) return false;
      if (hasFrontSide()) {
        if (!getFrontSide()
            .equals(other.getFrontSide())) return false;
      }
      if (hasBackSide() != other.hasBackSide()) return false;
      if (hasBackSide()) {
        if (!getBackSide()
            .equals(other.getBackSide())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      hash = (37 * hash) + STATUS_FIELD_NUMBER;
      hash = (53 * hash) + status_;
      if (hasClassification()) {
        hash = (37 * hash) + CLASSIFICATION_FIELD_NUMBER;
        hash = (53 * hash) + getClassification().hashCode();
      }
      if (hasFrontSide()) {
        hash = (37 * hash) + FRONTSIDE_FIELD_NUMBER;
        hash = (53 * hash) + getFrontSide().hashCode();
      }
      if (hasBackSide()) {
        hash = (37 * hash) + BACKSIDE_FIELD_NUMBER;
        hash = (53 * hash) + getBackSide().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input);
    }
    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessage
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.ddx.v1.Service.ScanTwoSidedDocumentResponse prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code proto.ddx.v1.ScanTwoSidedDocumentResponse}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:proto.ddx.v1.ScanTwoSidedDocumentResponse)
        proto.ddx.v1.Service.ScanTwoSidedDocumentResponseOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.class, proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Builder.class);
      }

      // Construct using proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage
                .alwaysUseFieldBuilders) {
          getClassificationFieldBuilder();
          getFrontSideFieldBuilder();
          getBackSideFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        status_ = 0;
        classification_ = null;
        if (classificationBuilder_ != null) {
          classificationBuilder_.dispose();
          classificationBuilder_ = null;
        }
        frontSide_ = null;
        if (frontSideBuilder_ != null) {
          frontSideBuilder_.dispose();
          frontSideBuilder_ = null;
        }
        backSide_ = null;
        if (backSideBuilder_ != null) {
          backSideBuilder_.dispose();
          backSideBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.ddx.v1.Service.internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_descriptor;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanTwoSidedDocumentResponse getDefaultInstanceForType() {
        return proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.getDefaultInstance();
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanTwoSidedDocumentResponse build() {
        proto.ddx.v1.Service.ScanTwoSidedDocumentResponse result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.ddx.v1.Service.ScanTwoSidedDocumentResponse buildPartial() {
        proto.ddx.v1.Service.ScanTwoSidedDocumentResponse result = new proto.ddx.v1.Service.ScanTwoSidedDocumentResponse(this);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartial0(proto.ddx.v1.Service.ScanTwoSidedDocumentResponse result) {
        int from_bitField0_ = bitField0_;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.status_ = status_;
        }
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.classification_ = classificationBuilder_ == null
              ? classification_
              : classificationBuilder_.build();
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000004) != 0)) {
          result.frontSide_ = frontSideBuilder_ == null
              ? frontSide_
              : frontSideBuilder_.build();
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.backSide_ = backSideBuilder_ == null
              ? backSide_
              : backSideBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.ddx.v1.Service.ScanTwoSidedDocumentResponse) {
          return mergeFrom((proto.ddx.v1.Service.ScanTwoSidedDocumentResponse)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.ddx.v1.Service.ScanTwoSidedDocumentResponse other) {
        if (other == proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.getDefaultInstance()) return this;
        if (other.status_ != 0) {
          setStatusValue(other.getStatusValue());
        }
        if (other.hasClassification()) {
          mergeClassification(other.getClassification());
        }
        if (other.hasFrontSide()) {
          mergeFrontSide(other.getFrontSide());
        }
        if (other.hasBackSide()) {
          mergeBackSide(other.getBackSide());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                status_ = input.readEnum();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 18: {
                input.readMessage(
                    getClassificationFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000002;
                break;
              } // case 18
              case 26: {
                input.readMessage(
                    getFrontSideFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000004;
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getBackSideFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private int status_ = 0;
      /**
       * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @return The enum numeric value on the wire for status.
       */
      @java.lang.Override public int getStatusValue() {
        return status_;
      }
      /**
       * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @param value The enum numeric value on the wire for status to set.
       * @return This builder for chaining.
       */
      public Builder setStatusValue(int value) {
        status_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @return The status.
       */
      @java.lang.Override
      public proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status getStatus() {
        proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status result = proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status.forNumber(status_);
        return result == null ? proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status.UNRECOGNIZED : result;
      }
      /**
       * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @param value The status to set.
       * @return This builder for chaining.
       */
      public Builder setStatus(proto.ddx.v1.Service.ScanTwoSidedDocumentResponse.Status value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        status_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>.proto.ddx.v1.ScanTwoSidedDocumentResponse.Status status = 1 [json_name = "status"];</code>
       * @return This builder for chaining.
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000001);
        status_ = 0;
        onChanged();
        return this;
      }

      private proto.ddx.v1.Service.DocumentClass classification_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentClass, proto.ddx.v1.Service.DocumentClass.Builder, proto.ddx.v1.Service.DocumentClassOrBuilder> classificationBuilder_;
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       * @return Whether the classification field is set.
       */
      public boolean hasClassification() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       * @return The classification.
       */
      public proto.ddx.v1.Service.DocumentClass getClassification() {
        if (classificationBuilder_ == null) {
          return classification_ == null ? proto.ddx.v1.Service.DocumentClass.getDefaultInstance() : classification_;
        } else {
          return classificationBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       */
      public Builder setClassification(proto.ddx.v1.Service.DocumentClass value) {
        if (classificationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          classification_ = value;
        } else {
          classificationBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       */
      public Builder setClassification(
          proto.ddx.v1.Service.DocumentClass.Builder builderForValue) {
        if (classificationBuilder_ == null) {
          classification_ = builderForValue.build();
        } else {
          classificationBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       */
      public Builder mergeClassification(proto.ddx.v1.Service.DocumentClass value) {
        if (classificationBuilder_ == null) {
          if (((bitField0_ & 0x00000002) != 0) &&
            classification_ != null &&
            classification_ != proto.ddx.v1.Service.DocumentClass.getDefaultInstance()) {
            getClassificationBuilder().mergeFrom(value);
          } else {
            classification_ = value;
          }
        } else {
          classificationBuilder_.mergeFrom(value);
        }
        if (classification_ != null) {
          bitField0_ |= 0x00000002;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       */
      public Builder clearClassification() {
        bitField0_ = (bitField0_ & ~0x00000002);
        classification_ = null;
        if (classificationBuilder_ != null) {
          classificationBuilder_.dispose();
          classificationBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       */
      public proto.ddx.v1.Service.DocumentClass.Builder getClassificationBuilder() {
        bitField0_ |= 0x00000002;
        onChanged();
        return getClassificationFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       */
      public proto.ddx.v1.Service.DocumentClassOrBuilder getClassificationOrBuilder() {
        if (classificationBuilder_ != null) {
          return classificationBuilder_.getMessageOrBuilder();
        } else {
          return classification_ == null ?
              proto.ddx.v1.Service.DocumentClass.getDefaultInstance() : classification_;
        }
      }
      /**
       * <pre>
       * classification holds detected document class. Will be empty if status is STATUS_FRONT_SIDE_NOT_FOUND or STATUS_NOT_SUPPORTED
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentClass classification = 2 [json_name = "classification"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentClass, proto.ddx.v1.Service.DocumentClass.Builder, proto.ddx.v1.Service.DocumentClassOrBuilder> 
          getClassificationFieldBuilder() {
        if (classificationBuilder_ == null) {
          classificationBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.DocumentClass, proto.ddx.v1.Service.DocumentClass.Builder, proto.ddx.v1.Service.DocumentClassOrBuilder>(
                  getClassification(),
                  getParentForChildren(),
                  isClean());
          classification_ = null;
        }
        return classificationBuilder_;
      }

      private proto.ddx.v1.Service.DocumentData frontSide_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder> frontSideBuilder_;
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       * @return Whether the frontSide field is set.
       */
      public boolean hasFrontSide() {
        return ((bitField0_ & 0x00000004) != 0);
      }
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       * @return The frontSide.
       */
      public proto.ddx.v1.Service.DocumentData getFrontSide() {
        if (frontSideBuilder_ == null) {
          return frontSide_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : frontSide_;
        } else {
          return frontSideBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       */
      public Builder setFrontSide(proto.ddx.v1.Service.DocumentData value) {
        if (frontSideBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          frontSide_ = value;
        } else {
          frontSideBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       */
      public Builder setFrontSide(
          proto.ddx.v1.Service.DocumentData.Builder builderForValue) {
        if (frontSideBuilder_ == null) {
          frontSide_ = builderForValue.build();
        } else {
          frontSideBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000004;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       */
      public Builder mergeFrontSide(proto.ddx.v1.Service.DocumentData value) {
        if (frontSideBuilder_ == null) {
          if (((bitField0_ & 0x00000004) != 0) &&
            frontSide_ != null &&
            frontSide_ != proto.ddx.v1.Service.DocumentData.getDefaultInstance()) {
            getFrontSideBuilder().mergeFrom(value);
          } else {
            frontSide_ = value;
          }
        } else {
          frontSideBuilder_.mergeFrom(value);
        }
        if (frontSide_ != null) {
          bitField0_ |= 0x00000004;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       */
      public Builder clearFrontSide() {
        bitField0_ = (bitField0_ & ~0x00000004);
        frontSide_ = null;
        if (frontSideBuilder_ != null) {
          frontSideBuilder_.dispose();
          frontSideBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       */
      public proto.ddx.v1.Service.DocumentData.Builder getFrontSideBuilder() {
        bitField0_ |= 0x00000004;
        onChanged();
        return getFrontSideFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       */
      public proto.ddx.v1.Service.DocumentDataOrBuilder getFrontSideOrBuilder() {
        if (frontSideBuilder_ != null) {
          return frontSideBuilder_.getMessageOrBuilder();
        } else {
          return frontSide_ == null ?
              proto.ddx.v1.Service.DocumentData.getDefaultInstance() : frontSide_;
        }
      }
      /**
       * <pre>
       * frontSide holds data extracted from the image of document front side. Empty if STATUS_FRONT_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData frontSide = 3 [json_name = "frontSide"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder> 
          getFrontSideFieldBuilder() {
        if (frontSideBuilder_ == null) {
          frontSideBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder>(
                  getFrontSide(),
                  getParentForChildren(),
                  isClean());
          frontSide_ = null;
        }
        return frontSideBuilder_;
      }

      private proto.ddx.v1.Service.DocumentData backSide_;
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder> backSideBuilder_;
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       * @return Whether the backSide field is set.
       */
      public boolean hasBackSide() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       * @return The backSide.
       */
      public proto.ddx.v1.Service.DocumentData getBackSide() {
        if (backSideBuilder_ == null) {
          return backSide_ == null ? proto.ddx.v1.Service.DocumentData.getDefaultInstance() : backSide_;
        } else {
          return backSideBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       */
      public Builder setBackSide(proto.ddx.v1.Service.DocumentData value) {
        if (backSideBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          backSide_ = value;
        } else {
          backSideBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       */
      public Builder setBackSide(
          proto.ddx.v1.Service.DocumentData.Builder builderForValue) {
        if (backSideBuilder_ == null) {
          backSide_ = builderForValue.build();
        } else {
          backSideBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       */
      public Builder mergeBackSide(proto.ddx.v1.Service.DocumentData value) {
        if (backSideBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            backSide_ != null &&
            backSide_ != proto.ddx.v1.Service.DocumentData.getDefaultInstance()) {
            getBackSideBuilder().mergeFrom(value);
          } else {
            backSide_ = value;
          }
        } else {
          backSideBuilder_.mergeFrom(value);
        }
        if (backSide_ != null) {
          bitField0_ |= 0x00000008;
          onChanged();
        }
        return this;
      }
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       */
      public Builder clearBackSide() {
        bitField0_ = (bitField0_ & ~0x00000008);
        backSide_ = null;
        if (backSideBuilder_ != null) {
          backSideBuilder_.dispose();
          backSideBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       */
      public proto.ddx.v1.Service.DocumentData.Builder getBackSideBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getBackSideFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       */
      public proto.ddx.v1.Service.DocumentDataOrBuilder getBackSideOrBuilder() {
        if (backSideBuilder_ != null) {
          return backSideBuilder_.getMessageOrBuilder();
        } else {
          return backSide_ == null ?
              proto.ddx.v1.Service.DocumentData.getDefaultInstance() : backSide_;
        }
      }
      /**
       * <pre>
       * backSide holds data extracted from the image of document back side. Empty if STATUS_BACK_SIDE_NOT_FOUND
       * </pre>
       *
       * <code>.proto.ddx.v1.DocumentData backSide = 4 [json_name = "backSide"];</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder> 
          getBackSideFieldBuilder() {
        if (backSideBuilder_ == null) {
          backSideBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              proto.ddx.v1.Service.DocumentData, proto.ddx.v1.Service.DocumentData.Builder, proto.ddx.v1.Service.DocumentDataOrBuilder>(
                  getBackSide(),
                  getParentForChildren(),
                  isClean());
          backSide_ = null;
        }
        return backSideBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:proto.ddx.v1.ScanTwoSidedDocumentResponse)
    }

    // @@protoc_insertion_point(class_scope:proto.ddx.v1.ScanTwoSidedDocumentResponse)
    private static final proto.ddx.v1.Service.ScanTwoSidedDocumentResponse DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.ddx.v1.Service.ScanTwoSidedDocumentResponse();
    }

    public static proto.ddx.v1.Service.ScanTwoSidedDocumentResponse getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<ScanTwoSidedDocumentResponse>
        PARSER = new com.google.protobuf.AbstractParser<ScanTwoSidedDocumentResponse>() {
      @java.lang.Override
      public ScanTwoSidedDocumentResponse parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ScanTwoSidedDocumentResponse> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ScanTwoSidedDocumentResponse> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.ddx.v1.Service.ScanTwoSidedDocumentResponse getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_DocumentClass_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_DocumentClass_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanConfig_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanConfig_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanConfig_ImgResolution_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanConfig_ImgResolution_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanConfig_ReturnImage_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanConfig_ReturnImage_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanDocumentRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanDocumentRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_Quad_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_Quad_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_Mrz_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_Mrz_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanDocumentResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanDocumentResponse_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_DocumentData_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_DocumentData_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032proto/ddx/v1/service.proto\022\014proto.ddx." +
      "v1\032\034google/api/annotations.proto\032\027valida" +
      "te/validate.proto\032!proto/ddx/v1/countrie" +
      "s_enum.proto\032&proto/ddx/v1/document_type" +
      "s_enum.proto\032!proto/ddx/v1/territory_enu" +
      "m.proto\032\026proto/ddx/v1/mrz.proto\032\032proto/d" +
      "dx/v1/barcode.proto\032\031proto/ddx/v1/fields" +
      ".proto\"\247\001\n\rDocumentClass\022.\n\004type\030\003 \001(\0162\032" +
      ".proto.ddx.v1.DocumentTypeR\004type\022/\n\007coun" +
      "try\030\004 \001(\0162\025.proto.ddx.v1.CountryR\007countr" +
      "y\0225\n\tterritory\030\005 \001(\0162\027.proto.ddx.v1.Terr" +
      "itoryR\tterritory\"\304\t\n\nScanConfig\022V\n\023retur" +
      "nDocumentImage\030\001 \001(\0132$.proto.ddx.v1.Scan" +
      "Config.ReturnImageR\023returnDocumentImage\022" +
      "d\n\025returnTextFieldImages\030\002 \001(\0132..proto.d" +
      "dx.v1.ScanConfig.ReturnTextFieldImagesR\025" +
      "returnTextFieldImages\022[\n\022returnVisualFie" +
      "lds\030\003 \001(\0132+.proto.ddx.v1.ScanConfig.Retu" +
      "rnVisualFieldsR\022returnVisualFields\022d\n\025re" +
      "turnDateFieldImages\030\004 \001(\0132..proto.ddx.v1" +
      ".ScanConfig.ReturnDateFieldImagesR\025retur" +
      "nDateFieldImages\022a\n\024returnSexFieldImages" +
      "\030\005 \001(\0132-.proto.ddx.v1.ScanConfig.ReturnS" +
      "exFieldImagesR\024returnSexFieldImages\0224\n\025s" +
      "kipDocumentDetection\030\006 \001(\010R\025skipDocument" +
      "Detection\032=\n\rImgResolution\022\024\n\005width\030\001 \001(" +
      "\rR\005width\022\026\n\006height\030\002 \001(\rR\006height\032\215\001\n\013Ret" +
      "urnImage\022R\n\020targetResolution\030\001 \001(\0132&.pro" +
      "to.ddx.v1.ScanConfig.ImgResolutionR\020targ" +
      "etResolution\022*\n\020jpegImageQuality\030\002 \001(\rR\020" +
      "jpegImageQuality\032\201\001\n\025ReturnTextFieldImag" +
      "es\022<\n\ntypeFilter\030\001 \003(\0162\034.proto.ddx.v1.Te" +
      "xtField.TypeR\ntypeFilter\022*\n\020jpegImageQua" +
      "lity\030\002 \001(\rR\020jpegImageQuality\032\201\001\n\025ReturnD" +
      "ateFieldImages\022<\n\ntypeFilter\030\001 \003(\0162\034.pro" +
      "to.ddx.v1.DateField.TypeR\ntypeFilter\022*\n\020" +
      "jpegImageQuality\030\002 \001(\rR\020jpegImageQuality" +
      "\032\200\001\n\022ReturnVisualFields\022>\n\ntypeFilter\030\001 " +
      "\003(\0162\036.proto.ddx.v1.VisualField.TypeR\ntyp" +
      "eFilter\022*\n\020jpegImageQuality\030\002 \001(\rR\020jpegI" +
      "mageQuality\032B\n\024ReturnSexFieldImages\022*\n\020j" +
      "pegImageQuality\030\001 \001(\rR\020jpegImageQuality\"" +
      "e\n\023ScanDocumentRequest\022\034\n\timageJpeg\030\001 \001(" +
      "\014R\timageJpeg\0220\n\006config\030\002 \001(\0132\030.proto.ddx" +
      ".v1.ScanConfigR\006config\"\206\001\n\004Quad\022\016\n\002x1\030\001 " +
      "\001(\002R\002x1\022\016\n\002y1\030\002 \001(\002R\002y1\022\016\n\002x2\030\003 \001(\002R\002x2\022" +
      "\016\n\002y2\030\004 \001(\002R\002y2\022\016\n\002x3\030\005 \001(\002R\002x3\022\016\n\002y3\030\006 " +
      "\001(\002R\002y3\022\016\n\002x4\030\007 \001(\002R\002x4\022\016\n\002y4\030\010 \001(\002R\002y4\"" +
      "\327\001\n\003Mrz\0220\n\006status\030\001 \001(\0162\030.proto.ddx.v1.M" +
      "rz.StatusR\006status\022/\n\006fields\030\002 \001(\0132\027.prot" +
      "o.ddx.v1.MrzFieldsR\006fields\022\031\n\010mrz_code\030\003" +
      " \003(\tR\007mrzCode\"R\n\006Status\022\r\n\tSTATUS_OK\020\000\022\031" +
      "\n\025STATUS_INVALID_FORMAT\020\001\022\036\n\032STATUS_CHEC" +
      "K_DIGIT_INVALID\020\002\"\372\002\n\024ScanDocumentRespon" +
      "se\022A\n\006status\030\001 \001(\0162).proto.ddx.v1.ScanDo" +
      "cumentResponse.StatusR\006status\0220\n\tdetecti" +
      "on\030\002 \001(\0132\022.proto.ddx.v1.QuadR\tdetection\022" +
      "C\n\016classification\030\003 \001(\0132\033.proto.ddx.v1.D" +
      "ocumentClassR\016classification\022.\n\004data\030\004 \001" +
      "(\0132\032.proto.ddx.v1.DocumentDataR\004data\"x\n\006" +
      "Status\022\r\n\tSTATUS_OK\020\000\022\035\n\031STATUS_DOCUMENT" +
      "_NOT_FOUND\020\001\022!\n\035STATUS_DOCUMENT_NOT_SUPP" +
      "ORTED\020\002\022\035\n\031STATUS_DOCUMENT_BACK_SIDE\020\003\"\373" +
      "\002\n\014DocumentData\0225\n\ttextField\030\001 \003(\0132\027.pro" +
      "to.ddx.v1.TextFieldR\ttextField\022;\n\013visual" +
      "Field\030\002 \003(\0132\031.proto.ddx.v1.VisualFieldR\013" +
      "visualField\0225\n\tdateField\030\003 \003(\0132\027.proto.d" +
      "dx.v1.DateFieldR\tdateField\0222\n\010sexField\030\004" +
      " \003(\0132\026.proto.ddx.v1.SexFieldR\010sexField\022#" +
      "\n\003mrz\030\005 \001(\0132\021.proto.ddx.v1.MrzR\003mrz\022A\n\rp" +
      "df417Barcode\030\006 \001(\0132\033.proto.ddx.v1.Pdf417" +
      "BarcodeR\rpdf417Barcode\022$\n\rdocumentImage\030" +
      "\007 \001(\014R\rdocumentImage\"\221\001\n\033ScanTwoSidedDoc" +
      "umentRequest\022\036\n\nfirstImage\030\001 \001(\014R\nfirstI" +
      "mage\022 \n\013secondImage\030\002 \001(\014R\013secondImage\0220" +
      "\n\006config\030\003 \001(\0132\030.proto.ddx.v1.ScanConfig" +
      "R\006config\"\224\003\n\034ScanTwoSidedDocumentRespons" +
      "e\022I\n\006status\030\001 \001(\01621.proto.ddx.v1.ScanTwo" +
      "SidedDocumentResponse.StatusR\006status\022C\n\016" +
      "classification\030\002 \001(\0132\033.proto.ddx.v1.Docu" +
      "mentClassR\016classification\0228\n\tfrontSide\030\003" +
      " \001(\0132\032.proto.ddx.v1.DocumentDataR\tfrontS" +
      "ide\0226\n\010backSide\030\004 \001(\0132\032.proto.ddx.v1.Doc" +
      "umentDataR\010backSide\"r\n\006Status\022\r\n\tSTATUS_" +
      "OK\020\000\022\037\n\033STATUS_FRONT_SIDE_NOT_FOUND\020\001\022\036\n" +
      "\032STATUS_BACK_SIDE_NOT_FOUND\020\002\022\030\n\024STATUS_" +
      "NOT_SUPPORTED\020\0032\215\002\n\nExtraction\022n\n\014ScanDo" +
      "cument\022!.proto.ddx.v1.ScanDocumentReques" +
      "t\032\".proto.ddx.v1.ScanDocumentResponse\"\027\202" +
      "\323\344\223\002\021\"\014/api/v1/scan:\001*\022\216\001\n\024ScanTwoSidedD" +
      "ocument\022).proto.ddx.v1.ScanTwoSidedDocum" +
      "entRequest\032*.proto.ddx.v1.ScanTwoSidedDo" +
      "cumentResponse\"\037\202\323\344\223\002\031\"\024/api/v1/scanTwoS" +
      "ided:\001*B4Z2github.com/veridil/id-extract" +
      "-service/proto/ddx/v1b\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.google.api.AnnotationsProto.getDescriptor(),
          io.envoyproxy.pgv.validate.Validate.getDescriptor(),
          proto.ddx.v1.CountriesEnum.getDescriptor(),
          proto.ddx.v1.DocumentTypesEnum.getDescriptor(),
          proto.ddx.v1.TerritoryEnum.getDescriptor(),
          proto.ddx.v1.Mrz.getDescriptor(),
          proto.ddx.v1.Barcode.getDescriptor(),
          proto.ddx.v1.Fields.getDescriptor(),
        });
    internal_static_proto_ddx_v1_DocumentClass_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_proto_ddx_v1_DocumentClass_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_DocumentClass_descriptor,
        new java.lang.String[] { "Type", "Country", "Territory", });
    internal_static_proto_ddx_v1_ScanConfig_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_proto_ddx_v1_ScanConfig_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanConfig_descriptor,
        new java.lang.String[] { "ReturnDocumentImage", "ReturnTextFieldImages", "ReturnVisualFields", "ReturnDateFieldImages", "ReturnSexFieldImages", "SkipDocumentDetection", });
    internal_static_proto_ddx_v1_ScanConfig_ImgResolution_descriptor =
      internal_static_proto_ddx_v1_ScanConfig_descriptor.getNestedTypes().get(0);
    internal_static_proto_ddx_v1_ScanConfig_ImgResolution_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanConfig_ImgResolution_descriptor,
        new java.lang.String[] { "Width", "Height", });
    internal_static_proto_ddx_v1_ScanConfig_ReturnImage_descriptor =
      internal_static_proto_ddx_v1_ScanConfig_descriptor.getNestedTypes().get(1);
    internal_static_proto_ddx_v1_ScanConfig_ReturnImage_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanConfig_ReturnImage_descriptor,
        new java.lang.String[] { "TargetResolution", "JpegImageQuality", });
    internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_descriptor =
      internal_static_proto_ddx_v1_ScanConfig_descriptor.getNestedTypes().get(2);
    internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanConfig_ReturnTextFieldImages_descriptor,
        new java.lang.String[] { "TypeFilter", "JpegImageQuality", });
    internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_descriptor =
      internal_static_proto_ddx_v1_ScanConfig_descriptor.getNestedTypes().get(3);
    internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanConfig_ReturnDateFieldImages_descriptor,
        new java.lang.String[] { "TypeFilter", "JpegImageQuality", });
    internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_descriptor =
      internal_static_proto_ddx_v1_ScanConfig_descriptor.getNestedTypes().get(4);
    internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanConfig_ReturnVisualFields_descriptor,
        new java.lang.String[] { "TypeFilter", "JpegImageQuality", });
    internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_descriptor =
      internal_static_proto_ddx_v1_ScanConfig_descriptor.getNestedTypes().get(5);
    internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanConfig_ReturnSexFieldImages_descriptor,
        new java.lang.String[] { "JpegImageQuality", });
    internal_static_proto_ddx_v1_ScanDocumentRequest_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_proto_ddx_v1_ScanDocumentRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanDocumentRequest_descriptor,
        new java.lang.String[] { "ImageJpeg", "Config", });
    internal_static_proto_ddx_v1_Quad_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_proto_ddx_v1_Quad_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_Quad_descriptor,
        new java.lang.String[] { "X1", "Y1", "X2", "Y2", "X3", "Y3", "X4", "Y4", });
    internal_static_proto_ddx_v1_Mrz_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_proto_ddx_v1_Mrz_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_Mrz_descriptor,
        new java.lang.String[] { "Status", "Fields", "MrzCode", });
    internal_static_proto_ddx_v1_ScanDocumentResponse_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_proto_ddx_v1_ScanDocumentResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanDocumentResponse_descriptor,
        new java.lang.String[] { "Status", "Detection", "Classification", "Data", });
    internal_static_proto_ddx_v1_DocumentData_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_proto_ddx_v1_DocumentData_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_DocumentData_descriptor,
        new java.lang.String[] { "TextField", "VisualField", "DateField", "SexField", "Mrz", "Pdf417Barcode", "DocumentImage", });
    internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanTwoSidedDocumentRequest_descriptor,
        new java.lang.String[] { "FirstImage", "SecondImage", "Config", });
    internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_proto_ddx_v1_ScanTwoSidedDocumentResponse_descriptor,
        new java.lang.String[] { "Status", "Classification", "FrontSide", "BackSide", });
    descriptor.resolveAllFeaturesImmutable();
    com.google.api.AnnotationsProto.getDescriptor();
    io.envoyproxy.pgv.validate.Validate.getDescriptor();
    proto.ddx.v1.CountriesEnum.getDescriptor();
    proto.ddx.v1.DocumentTypesEnum.getDescriptor();
    proto.ddx.v1.TerritoryEnum.getDescriptor();
    proto.ddx.v1.Mrz.getDescriptor();
    proto.ddx.v1.Barcode.getDescriptor();
    proto.ddx.v1.Fields.getDescriptor();
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
